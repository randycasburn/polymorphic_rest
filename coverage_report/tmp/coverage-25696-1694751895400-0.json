{"result":[{"scriptId":"6","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8841,"endOffset":8912,"count":50}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8917,"endOffset":8966,"count":781}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8971,"endOffset":9016,"count":28}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":10581,"endOffset":10648,"count":22}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11306,"endOffset":11334,"count":327}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":11478,"endOffset":11506,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11635,"endOffset":11663,"count":333}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12087,"endOffset":12143,"count":1}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":12482,"endOffset":12524,"count":60}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":13028,"endOffset":13302,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13173,"endOffset":13297,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13203,"endOffset":13252,"count":10}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":14622,"endOffset":15178,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14657,"endOffset":15177,"count":20},{"startOffset":14827,"endOffset":14846,"count":8},{"startOffset":14919,"endOffset":15173,"count":35},{"startOffset":14957,"endOffset":14980,"count":0},{"startOffset":15173,"endOffset":15176,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15048,"endOffset":15157,"count":35},{"startOffset":15130,"endOffset":15149,"count":12}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnVoid","ranges":[{"startOffset":15520,"endOffset":15922,"count":53}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15555,"endOffset":15921,"count":53},{"startOffset":15652,"endOffset":15662,"count":25},{"startOffset":15709,"endOffset":15917,"count":88},{"startOffset":15747,"endOffset":15770,"count":56},{"startOffset":15771,"endOffset":15784,"count":32},{"startOffset":15917,"endOffset":15920,"count":88}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15838,"endOffset":15901,"count":88},{"startOffset":15883,"endOffset":15893,"count":28}],"isBlockCoverage":true}]},{"scriptId":"9","url":"node:internal/bootstrap/loaders","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5245,"endOffset":5507,"count":159}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":5648,"endOffset":5802,"count":6173},{"startOffset":5784,"endOffset":5799,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":7493,"endOffset":7610,"count":1385},{"startOffset":7578,"endOffset":7605,"count":176}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":7761,"endOffset":7838,"count":417}],"isBlockCoverage":true},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":7849,"endOffset":7924,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":7996,"endOffset":8690,"count":175},{"startOffset":8059,"endOffset":8251,"count":0},{"startOffset":8315,"endOffset":8612,"count":26},{"startOffset":8574,"endOffset":8578,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":8694,"endOffset":9456,"count":176},{"startOffset":8732,"endOffset":8751,"count":150},{"startOffset":8751,"endOffset":9455,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9193,"endOffset":9296,"count":26}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":9752,"endOffset":10096,"count":201},{"startOffset":9871,"endOffset":10086,"count":6173},{"startOffset":9948,"endOffset":9957,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":10100,"endOffset":10922,"count":1819}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":11116,"endOffset":11483,"count":1647}],"isBlockCoverage":false},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":11599,"endOffset":11767,"count":45},{"startOffset":11684,"endOffset":11731,"count":0}],"isBlockCoverage":true}]},{"scriptId":"10","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3643,"endOffset":3705,"count":1757}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3711,"endOffset":3781,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4106,"endOffset":4142,"count":13}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4148,"endOffset":4293,"count":2},{"startOffset":4213,"endOffset":4264,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7948,"endOffset":8110,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":8212,"endOffset":8407,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12604,"endOffset":12640,"count":1554}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13542,"endOffset":13577,"count":101}],"isBlockCoverage":true}]},{"scriptId":"11","url":"node:internal/errors","functions":[{"functionName":"prepareStackTrace","ranges":[{"startOffset":2134,"endOffset":3622,"count":67},{"startOffset":2311,"endOffset":2427,"count":0},{"startOffset":2558,"endOffset":3054,"count":0},{"startOffset":3181,"endOffset":3203,"count":24},{"startOffset":3203,"endOffset":3353,"count":43},{"startOffset":3353,"endOffset":3427,"count":0},{"startOffset":3427,"endOffset":3514,"count":43},{"startOffset":3514,"endOffset":3543,"count":0},{"startOffset":3543,"endOffset":3621,"count":43}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":3664,"endOffset":4371,"count":67},{"startOffset":3933,"endOffset":3999,"count":24},{"startOffset":3999,"endOffset":4280,"count":43},{"startOffset":4280,"endOffset":4346,"count":0},{"startOffset":4346,"endOffset":4370,"count":43}],"isBlockCoverage":true},{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5633,"endOffset":6140,"count":135},{"startOffset":5863,"endOffset":5886,"count":0},{"startOffset":5987,"endOffset":6030,"count":0},{"startOffset":6109,"endOffset":6137,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10340,"endOffset":11342,"count":44}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11087,"endOffset":11165,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11507,"endOffset":11772,"count":19}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12394,"endOffset":13267,"count":44},{"startOffset":12807,"endOffset":13266,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":13285,"endOffset":13365,"count":19}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":13422,"endOffset":13574,"count":19}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13627,"endOffset":14029,"count":45}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":14359,"endOffset":15600,"count":1},{"startOffset":14442,"endOffset":14460,"count":0},{"startOffset":14654,"endOffset":14723,"count":0},{"startOffset":15338,"endOffset":15460,"count":3},{"startOffset":15386,"endOffset":15404,"count":2},{"startOffset":15406,"endOffset":15429,"count":1},{"startOffset":15429,"endOffset":15460,"count":2},{"startOffset":15532,"endOffset":15558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48087,"endOffset":48240,"count":44}],"isBlockCoverage":true}]},{"scriptId":"12","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4430,"endOffset":4455,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5593,"endOffset":5871,"count":266},{"startOffset":5819,"endOffset":5869,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5977,"endOffset":7023,"count":117},{"startOffset":6125,"endOffset":6477,"count":0},{"startOffset":6834,"endOffset":6841,"count":0},{"startOffset":6903,"endOffset":6917,"count":107}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":7303,"endOffset":7412,"count":21},{"startOffset":7343,"endOffset":7356,"count":0}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7764,"endOffset":8070,"count":46}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8644,"endOffset":8825,"count":149},{"startOffset":8687,"endOffset":8762,"count":13},{"startOffset":8762,"endOffset":8799,"count":136}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9446,"endOffset":9528,"count":107},{"startOffset":9505,"endOffset":9526,"count":64}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9530,"endOffset":9613,"count":107},{"startOffset":9589,"endOffset":9611,"count":64}],"isBlockCoverage":true},{"functionName":"unrefActive","ranges":[{"startOffset":9897,"endOffset":9957,"count":21}],"isBlockCoverage":true},{"functionName":"insertGuarded","ranges":[{"startOffset":10178,"endOffset":10694,"count":21},{"startOffset":10302,"endOffset":10309,"count":0},{"startOffset":10426,"endOffset":10500,"count":0},{"startOffset":10521,"endOffset":10562,"count":0},{"startOffset":10597,"endOffset":10668,"count":0}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":10696,"endOffset":11347,"count":138},{"startOffset":11019,"endOffset":11320,"count":46},{"startOffset":11254,"endOffset":11316,"count":1}],"isBlockCoverage":true},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":11349,"endOffset":11607,"count":10}],"isBlockCoverage":true},{"functionName":"getTimerDuration","ranges":[{"startOffset":11674,"endOffset":12202,"count":19},{"startOffset":11789,"endOffset":11871,"count":0},{"startOffset":11946,"endOffset":12183,"count":0}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12204,"endOffset":12409,"count":43},{"startOffset":12306,"endOffset":12386,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12411,"endOffset":12482,"count":46}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12796,"endOffset":14729,"count":135},{"startOffset":12875,"endOffset":12899,"count":0},{"startOffset":13292,"endOffset":14612,"count":148},{"startOffset":13336,"endOffset":13351,"count":13},{"startOffset":13351,"endOffset":13401,"count":135},{"startOffset":13668,"endOffset":13764,"count":0},{"startOffset":14326,"endOffset":14382,"count":0},{"startOffset":14484,"endOffset":14505,"count":0},{"startOffset":14656,"endOffset":14685,"count":0}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":17791,"endOffset":18113,"count":149}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":18117,"endOffset":18290,"count":149},{"startOffset":18238,"endOffset":18263,"count":136}],"isBlockCoverage":true}]},{"scriptId":"13","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14545,"endOffset":14615,"count":2140}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14990,"endOffset":15280,"count":2140},{"startOffset":15204,"endOffset":15246,"count":2088},{"startOffset":15246,"endOffset":15279,"count":52}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":15600,"endOffset":16093,"count":97},{"startOffset":15710,"endOffset":15741,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16095,"endOffset":16158,"count":10473}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16160,"endOffset":16219,"count":2022}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16221,"endOffset":16276,"count":2140}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16337,"endOffset":16398,"count":2009}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16889,"endOffset":17065,"count":2022},{"startOffset":17037,"endOffset":17063,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17068,"endOffset":17188,"count":2022},{"startOffset":17132,"endOffset":17157,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":17191,"endOffset":17401,"count":129},{"startOffset":17328,"endOffset":17343,"count":0},{"startOffset":17356,"endOffset":17400,"count":0}],"isBlockCoverage":true},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":17404,"endOffset":17467,"count":129}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17533,"endOffset":18103,"count":2022},{"startOffset":17753,"endOffset":17803,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18168,"endOffset":18779,"count":2022},{"startOffset":18284,"endOffset":18297,"count":0},{"startOffset":18376,"endOffset":18482,"count":0}],"isBlockCoverage":true}]},{"scriptId":"14","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":944,"endOffset":1006,"count":365}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1630,"endOffset":1941,"count":375},{"startOffset":1723,"endOffset":1891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2187,"endOffset":2568,"count":1074},{"startOffset":2307,"endOffset":2361,"count":0},{"startOffset":2401,"endOffset":2455,"count":0},{"startOffset":2498,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2812,"endOffset":3275,"count":904},{"startOffset":2984,"endOffset":3052,"count":0},{"startOffset":3086,"endOffset":3154,"count":0},{"startOffset":3191,"endOffset":3271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3513,"endOffset":3945,"count":1057},{"startOffset":3583,"endOffset":3647,"count":0},{"startOffset":3679,"endOffset":3743,"count":0},{"startOffset":3767,"endOffset":3770,"count":0},{"startOffset":3867,"endOffset":3943,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4098,"endOffset":4230,"count":8120}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4431,"endOffset":4899,"count":93868},{"startOffset":4529,"endOffset":4583,"count":0},{"startOffset":4604,"endOffset":4618,"count":0},{"startOffset":4636,"endOffset":4650,"count":0},{"startOffset":4691,"endOffset":4712,"count":0},{"startOffset":4715,"endOffset":4897,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5085,"endOffset":5418,"count":2},{"startOffset":5156,"endOffset":5416,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5229,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5574,"endOffset":5709,"count":385},{"startOffset":5652,"endOffset":5707,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5821,"endOffset":6002,"count":159},{"startOffset":5914,"endOffset":5961,"count":3},{"startOffset":5962,"endOffset":5980,"count":156},{"startOffset":5981,"endOffset":5999,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6267,"endOffset":6822,"count":53},{"startOffset":6572,"endOffset":6589,"count":52},{"startOffset":6615,"endOffset":6637,"count":52},{"startOffset":6677,"endOffset":6747,"count":0},{"startOffset":6750,"endOffset":6818,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7776,"endOffset":8054,"count":1157},{"startOffset":7838,"endOffset":7901,"count":0},{"startOffset":7934,"endOffset":8052,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":8219,"endOffset":8388,"count":341},{"startOffset":8334,"endOffset":8386,"count":1705}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9422,"endOffset":9652,"count":365},{"startOffset":9487,"endOffset":9650,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":10312,"endOffset":10691,"count":44},{"startOffset":10591,"endOffset":10604,"count":0},{"startOffset":10607,"endOffset":10670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11276,"endOffset":11392,"count":3257}],"isBlockCoverage":false}]},{"scriptId":"15","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1681,"endOffset":1993,"count":32},{"startOffset":1950,"endOffset":1992,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2740,"endOffset":4082,"count":29}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":3077,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":4352,"endOffset":4426,"count":5},{"startOffset":4398,"endOffset":4424,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4605,"endOffset":4736,"count":374},{"startOffset":4675,"endOffset":4693,"count":9},{"startOffset":4695,"endOffset":4709,"count":365},{"startOffset":4709,"endOffset":4735,"count":9}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":4738,"endOffset":6489,"count":9},{"startOffset":4792,"endOffset":5036,"count":0},{"startOffset":5041,"endOffset":5171,"count":0},{"startOffset":5176,"endOffset":5580,"count":0},{"startOffset":5621,"endOffset":5637,"count":0},{"startOffset":5665,"endOffset":5684,"count":0},{"startOffset":5702,"endOffset":5794,"count":0},{"startOffset":5796,"endOffset":5940,"count":0},{"startOffset":5942,"endOffset":5971,"count":0},{"startOffset":5976,"endOffset":6122,"count":0},{"startOffset":6127,"endOffset":6274,"count":0},{"startOffset":6279,"endOffset":6433,"count":0},{"startOffset":6438,"endOffset":6483,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":7100,"endOffset":7256,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7151,"endOffset":7253,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":9266,"endOffset":11125,"count":5},{"startOffset":9386,"endOffset":9442,"count":1},{"startOffset":9529,"endOffset":9805,"count":0},{"startOffset":10911,"endOffset":11073,"count":14}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":10005,"endOffset":10524,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":11683,"endOffset":11810,"count":37},{"startOffset":11764,"endOffset":11794,"count":9}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":13132,"endOffset":13305,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13189,"endOffset":13302,"count":2},{"startOffset":13225,"endOffset":13301,"count":1}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":13799,"endOffset":13999,"count":1}],"isBlockCoverage":false},{"functionName":"exposeInterface","ranges":[{"startOffset":14051,"endOffset":14270,"count":1}],"isBlockCoverage":false},{"functionName":"defineLazyProperties","ranges":[{"startOffset":14272,"endOffset":15205,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14491,"endOffset":14634,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14737,"endOffset":14933,"count":17}],"isBlockCoverage":true},{"functionName":"defineReplaceableLazyAttribute","ranges":[{"startOffset":15207,"endOffset":16107,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15419,"endOffset":15655,"count":4},{"startOffset":15467,"endOffset":15520,"count":0},{"startOffset":15545,"endOffset":15576,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":15760,"endOffset":15831,"count":0}],"isBlockCoverage":false},{"functionName":"exposeLazyInterfaces","ranges":[{"startOffset":16109,"endOffset":16209,"count":1}],"isBlockCoverage":false},{"functionName":"lazyDOMExceptionClass","ranges":[{"startOffset":16260,"endOffset":16356,"count":1}],"isBlockCoverage":true},{"functionName":"filterOwnProperties","ranges":[{"startOffset":16713,"endOffset":16985,"count":112},{"startOffset":16838,"endOffset":16963,"count":553},{"startOffset":16917,"endOffset":16959,"count":188}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":17153,"endOffset":17343,"count":697}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19445,"endOffset":19573,"count":2348},{"startOffset":19489,"endOffset":19551,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":19701,"endOffset":20378,"count":1},{"startOffset":20171,"endOffset":20348,"count":0}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":4772}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":61}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/linkedlist","functions":[{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":254}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":138},{"startOffset":594,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":997,"endOffset":1057,"count":107}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":46},{"startOffset":826,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1589,"endOffset":2077,"count":46},{"startOffset":1764,"endOffset":1986,"count":43},{"startOffset":1858,"endOffset":1986,"count":0}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2081,"endOffset":2411,"count":45},{"startOffset":2239,"endOffset":2253,"count":43},{"startOffset":2255,"endOffset":2407,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/util/inspect","functions":[{"functionName":"format","ranges":[{"startOffset":72372,"endOffset":72453,"count":33}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":73012,"endOffset":77034,"count":33},{"startOffset":73232,"endOffset":76833,"count":0},{"startOffset":76837,"endOffset":77033,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":631},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":503,"endOffset":976,"count":1},{"startOffset":595,"endOffset":932,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":870,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":958,"endOffset":969,"count":14}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1404,"endOffset":1412,"count":9101}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1415,"endOffset":1980,"count":13},{"startOffset":1490,"endOffset":1952,"count":7},{"startOffset":1509,"endOffset":1905,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1598,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2200,"endOffset":3225,"count":16}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2231,"endOffset":2327,"count":14}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2342,"endOffset":2736,"count":13},{"startOffset":2545,"endOffset":2555,"count":12},{"startOffset":2589,"endOffset":2619,"count":6},{"startOffset":2626,"endOffset":2665,"count":4},{"startOffset":2672,"endOffset":2726,"count":3}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2766,"endOffset":2835,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2797,"endOffset":2810,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2854,"endOffset":3049,"count":1693},{"startOffset":2902,"endOffset":2932,"count":703},{"startOffset":2939,"endOffset":2978,"count":985},{"startOffset":2985,"endOffset":3039,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3120,"endOffset":3154,"count":1}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2832,"endOffset":6142,"count":8},{"startOffset":2922,"endOffset":6104,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3376,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3538,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4016,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4677,"endOffset":5047,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5108,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5356,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5607,"endOffset":5812,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":5902,"endOffset":6091,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6276,"endOffset":6345,"count":184}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6728,"endOffset":6784,"count":8}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7692,"endOffset":7770,"count":910}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7878,"endOffset":7926,"count":63}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9820,"endOffset":10418,"count":184}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":11791,"endOffset":11990,"count":3},{"startOffset":11877,"endOffset":11947,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":11993,"endOffset":12142,"count":59},{"startOffset":12071,"endOffset":12111,"count":53},{"startOffset":12111,"endOffset":12141,"count":6}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13299,"endOffset":15601,"count":1224}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15604,"endOffset":17498,"count":617}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17676,"endOffset":17768,"count":614}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18055,"endOffset":18158,"count":3}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18161,"endOffset":18425,"count":58},{"startOffset":18324,"endOffset":18363,"count":46},{"startOffset":18363,"endOffset":18423,"count":12}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":18427,"endOffset":18668,"count":132}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":18859,"endOffset":18985,"count":132}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19595,"endOffset":20890,"count":161},{"startOffset":19744,"endOffset":19756,"count":0},{"startOffset":19829,"endOffset":19841,"count":10},{"startOffset":19841,"endOffset":19871,"count":151},{"startOffset":19871,"endOffset":19900,"count":65},{"startOffset":19902,"endOffset":20163,"count":94},{"startOffset":19953,"endOffset":19988,"count":0},{"startOffset":20084,"endOffset":20145,"count":3},{"startOffset":20163,"endOffset":20864,"count":57},{"startOffset":20201,"endOffset":20864,"count":39},{"startOffset":20282,"endOffset":20421,"count":51},{"startOffset":20319,"endOffset":20351,"count":22},{"startOffset":20353,"endOffset":20411,"count":39},{"startOffset":20459,"endOffset":20471,"count":0},{"startOffset":20511,"endOffset":20524,"count":2},{"startOffset":20524,"endOffset":20685,"count":37},{"startOffset":20591,"endOffset":20638,"count":1},{"startOffset":20728,"endOffset":20751,"count":28},{"startOffset":20812,"endOffset":20856,"count":0},{"startOffset":20864,"endOffset":20889,"count":151}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":21210,"endOffset":22539,"count":45},{"startOffset":21321,"endOffset":21333,"count":0},{"startOffset":21441,"endOffset":21784,"count":43},{"startOffset":21569,"endOffset":21755,"count":0},{"startOffset":21784,"endOffset":21881,"count":2},{"startOffset":21881,"endOffset":22189,"count":0},{"startOffset":22189,"endOffset":22273,"count":2},{"startOffset":22273,"endOffset":22328,"count":0},{"startOffset":22328,"endOffset":22513,"count":2},{"startOffset":22363,"endOffset":22513,"count":0},{"startOffset":22513,"endOffset":22538,"count":2}],"isBlockCoverage":true},{"functionName":"_listeners","ranges":[{"startOffset":22542,"endOffset":22937,"count":2},{"startOffset":22652,"endOffset":22662,"count":0},{"startOffset":22745,"endOffset":22909,"count":0},{"startOffset":22910,"endOffset":22934,"count":0}],"isBlockCoverage":true},{"functionName":"listeners","ranges":[{"startOffset":23127,"endOffset":23194,"count":2}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24103,"endOffset":24393,"count":590},{"startOffset":24276,"endOffset":24299,"count":483},{"startOffset":24299,"endOffset":24374,"count":107},{"startOffset":24335,"endOffset":24374,"count":0},{"startOffset":24378,"endOffset":24392,"count":107}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":24645,"endOffset":25118,"count":151},{"startOffset":24817,"endOffset":24849,"count":9},{"startOffset":24854,"endOffset":24894,"count":142},{"startOffset":24899,"endOffset":24947,"count":0},{"startOffset":24952,"endOffset":25008,"count":0},{"startOffset":25013,"endOffset":25077,"count":0},{"startOffset":25081,"endOffset":25117,"count":0}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:buffer","functions":[{"functionName":"validateOffset","ranges":[{"startOffset":3123,"endOffset":3207,"count":344}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":3933,"endOffset":4092,"count":60}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4108,"endOffset":4230,"count":2540}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5216,"endOffset":5434,"count":4194},{"startOffset":5391,"endOffset":5405,"count":0},{"startOffset":5411,"endOffset":5433,"count":0}],"isBlockCoverage":true},{"functionName":"_copy","ranges":[{"startOffset":5436,"endOffset":6701,"count":1398},{"startOffset":5539,"endOffset":5614,"count":0},{"startOffset":5648,"endOffset":5723,"count":0},{"startOffset":5758,"endOffset":5784,"count":0},{"startOffset":5868,"endOffset":5931,"count":0},{"startOffset":5970,"endOffset":5996,"count":0},{"startOffset":6080,"endOffset":6143,"count":0},{"startOffset":6180,"endOffset":6216,"count":0},{"startOffset":6294,"endOffset":6353,"count":0},{"startOffset":6427,"endOffset":6436,"count":0},{"startOffset":6473,"endOffset":6623,"count":0}],"isBlockCoverage":true},{"functionName":"_copyActual","ranges":[{"startOffset":6703,"endOffset":7234,"count":2344},{"startOffset":6844,"endOffset":6898,"count":0},{"startOffset":7011,"endOffset":7026,"count":0},{"startOffset":7086,"endOffset":7162,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8255,"endOffset":8283,"count":1}],"isBlockCoverage":true},{"functionName":"from","ranges":[{"startOffset":8540,"endOffset":9505,"count":1816}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10317,"endOffset":10472,"count":1727},{"startOffset":10403,"endOffset":10470,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10575,"endOffset":10820,"count":750},{"startOffset":10659,"endOffset":10672,"count":301},{"startOffset":10673,"endOffset":10684,"count":129},{"startOffset":10686,"endOffset":10787,"count":129},{"startOffset":10787,"endOffset":10819,"count":621}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":10999,"endOffset":11074,"count":967}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11315,"endOffset":11404,"count":10}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":11704,"endOffset":12036,"count":967},{"startOffset":11747,"endOffset":11781,"count":0},{"startOffset":11820,"endOffset":11999,"count":818},{"startOffset":11868,"endOffset":11881,"count":53},{"startOffset":11999,"endOffset":12035,"count":149}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12038,"endOffset":12584,"count":1629}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":12586,"endOffset":13039,"count":1629}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13041,"endOffset":13738,"count":92},{"startOffset":13185,"endOffset":13281,"count":0},{"startOffset":13358,"endOffset":13403,"count":0},{"startOffset":13462,"endOffset":13685,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":13740,"endOffset":14134,"count":95},{"startOffset":13797,"endOffset":13821,"count":0},{"startOffset":13920,"endOffset":13933,"count":0},{"startOffset":14102,"endOffset":14133,"count":0}],"isBlockCoverage":true},{"functionName":"fromObject","ranges":[{"startOffset":14136,"endOffset":14442,"count":95},{"startOffset":14194,"endOffset":14225,"count":0},{"startOffset":14269,"endOffset":14307,"count":0},{"startOffset":14342,"endOffset":14397,"count":0},{"startOffset":14399,"endOffset":14440,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":14481,"endOffset":14535,"count":3}],"isBlockCoverage":true},{"functionName":"isEncoding","ranges":[{"startOffset":14903,"endOffset":15054,"count":374}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15120,"endOffset":16267,"count":475},{"startOffset":15213,"endOffset":15237,"count":2},{"startOffset":15237,"endOffset":15408,"count":473},{"startOffset":15327,"endOffset":15404,"count":946},{"startOffset":15355,"endOffset":15398,"count":903},{"startOffset":15408,"endOffset":15457,"count":0},{"startOffset":15457,"endOffset":15559,"count":473},{"startOffset":15559,"endOffset":15907,"count":946},{"startOffset":15614,"endOffset":15846,"count":0},{"startOffset":15907,"endOffset":15998,"count":473},{"startOffset":15998,"endOffset":16247,"count":0},{"startOffset":16247,"endOffset":16266,"count":473}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16270,"endOffset":16538,"count":2},{"startOffset":16476,"endOffset":16484,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":16673,"endOffset":16737,"count":1451}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":16750,"endOffset":16796,"count":469}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18124,"endOffset":18149,"count":46}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18162,"endOffset":18227,"count":89}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18240,"endOffset":18287,"count":43}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18610,"endOffset":18661,"count":2}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18753,"endOffset":18801,"count":43}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19660,"endOffset":19691,"count":130}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19704,"endOffset":19767,"count":130}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":19780,"endOffset":19825,"count":172}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20056,"endOffset":21880,"count":1152},{"startOffset":20143,"endOffset":20442,"count":670},{"startOffset":20206,"endOffset":20442,"count":0},{"startOffset":20447,"endOffset":20866,"count":135},{"startOffset":20487,"endOffset":20511,"count":3},{"startOffset":20511,"endOffset":20569,"count":132},{"startOffset":20569,"endOffset":20866,"count":0},{"startOffset":20871,"endOffset":21025,"count":0},{"startOffset":21030,"endOffset":21186,"count":0},{"startOffset":21191,"endOffset":21572,"count":45},{"startOffset":21265,"endOffset":21291,"count":0},{"startOffset":21351,"endOffset":21463,"count":0},{"startOffset":21473,"endOffset":21572,"count":0},{"startOffset":21577,"endOffset":21709,"count":302},{"startOffset":21614,"endOffset":21663,"count":0},{"startOffset":21696,"endOffset":21709,"count":0},{"startOffset":21714,"endOffset":21874,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21882,"endOffset":22388,"count":1155},{"startOffset":21956,"endOffset":22169,"count":0},{"startOffset":22221,"endOffset":22230,"count":0},{"startOffset":22248,"endOffset":22353,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":22868,"endOffset":23001,"count":1398}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23282,"endOffset":23861,"count":4769},{"startOffset":23354,"endOffset":23402,"count":4033},{"startOffset":23402,"endOffset":23454,"count":736},{"startOffset":23454,"endOffset":23464,"count":0},{"startOffset":23464,"endOffset":23527,"count":736},{"startOffset":23494,"endOffset":23504,"count":0},{"startOffset":23527,"endOffset":23553,"count":736},{"startOffset":23553,"endOffset":23565,"count":0},{"startOffset":23571,"endOffset":23581,"count":736},{"startOffset":23581,"endOffset":23602,"count":0},{"startOffset":23602,"endOffset":23628,"count":736},{"startOffset":23628,"endOffset":23638,"count":2},{"startOffset":23638,"endOffset":23674,"count":734},{"startOffset":23674,"endOffset":23708,"count":7},{"startOffset":23708,"endOffset":23779,"count":727},{"startOffset":23779,"endOffset":23820,"count":0},{"startOffset":23820,"endOffset":23860,"count":727}],"isBlockCoverage":true},{"functionName":"fill","ranges":[{"startOffset":29111,"endOffset":29210,"count":301}],"isBlockCoverage":true},{"functionName":"_fill","ranges":[{"startOffset":29213,"endOffset":31159,"count":430},{"startOffset":29298,"endOffset":30216,"count":0},{"startOffset":30283,"endOffset":30326,"count":301},{"startOffset":30326,"endOffset":30611,"count":129},{"startOffset":30473,"endOffset":30504,"count":0},{"startOffset":30596,"endOffset":30607,"count":0},{"startOffset":30823,"endOffset":30860,"count":0},{"startOffset":30919,"endOffset":31142,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":31186,"endOffset":32201,"count":43},{"startOffset":31292,"endOffset":31348,"count":0},{"startOffset":31412,"endOffset":31441,"count":0},{"startOffset":31443,"endOffset":31570,"count":0},{"startOffset":31708,"endOffset":31741,"count":0},{"startOffset":31779,"endOffset":31837,"count":0},{"startOffset":31939,"endOffset":31958,"count":0},{"startOffset":31991,"endOffset":32037,"count":0},{"startOffset":32108,"endOffset":32149,"count":0}],"isBlockCoverage":true},{"functionName":"adjustOffset","ranges":[{"startOffset":32467,"endOffset":32901,"count":253433},{"startOffset":32707,"endOffset":32726,"count":1594},{"startOffset":32726,"endOffset":32745,"count":251839},{"startOffset":32745,"endOffset":32808,"count":0},{"startOffset":32808,"endOffset":32832,"count":251839},{"startOffset":32832,"endOffset":32856,"count":250796},{"startOffset":32856,"endOffset":32886,"count":1043},{"startOffset":32886,"endOffset":32889,"count":86},{"startOffset":32890,"endOffset":32898,"count":957}],"isBlockCoverage":true},{"functionName":"subarray","ranges":[{"startOffset":32931,"endOffset":33234,"count":126760},{"startOffset":33064,"endOffset":33094,"count":126673},{"startOffset":33095,"endOffset":33106,"count":87},{"startOffset":33154,"endOffset":33157,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":33262,"endOffset":33328,"count":387}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":39847,"endOffset":39882,"count":34}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/buffer","functions":[{"functionName":"checkBounds","ranges":[{"startOffset":1174,"endOffset":1390,"count":55955},{"startOffset":1337,"endOffset":1388,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1392,"endOffset":2014,"count":55955},{"startOffset":1488,"endOffset":1972,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt16LE","ranges":[{"startOffset":6356,"endOffset":6616,"count":86},{"startOffset":6544,"endOffset":6581,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt8","ranges":[{"startOffset":6618,"endOffset":6798,"count":3360},{"startOffset":6744,"endOffset":6781,"count":0}],"isBlockCoverage":true},{"functionName":"readUIntBE","ranges":[{"startOffset":6800,"endOffset":7352,"count":3559},{"startOffset":6874,"endOffset":6933,"count":0},{"startOffset":6962,"endOffset":6996,"count":0},{"startOffset":7025,"endOffset":7059,"count":0},{"startOffset":7088,"endOffset":7122,"count":119},{"startOffset":7122,"endOffset":7151,"count":3440},{"startOffset":7151,"endOffset":7184,"count":0},{"startOffset":7184,"endOffset":7213,"count":3440},{"startOffset":7213,"endOffset":7246,"count":174},{"startOffset":7246,"endOffset":7305,"count":3266},{"startOffset":7305,"endOffset":7351,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt32BE","ranges":[{"startOffset":8097,"endOffset":8423,"count":466},{"startOffset":8285,"endOffset":8322,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt24BE","ranges":[{"startOffset":8425,"endOffset":8713,"count":119},{"startOffset":8616,"endOffset":8652,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt16BE","ranges":[{"startOffset":8715,"endOffset":8975,"count":31392},{"startOffset":8903,"endOffset":8940,"count":0}],"isBlockCoverage":true},{"functionName":"readInt8","ranges":[{"startOffset":11325,"endOffset":11533,"count":50},{"startOffset":11450,"endOffset":11487,"count":0}],"isBlockCoverage":true},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19481,"endOffset":19677,"count":86}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19679,"endOffset":19781,"count":86}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19783,"endOffset":20195,"count":348},{"startOffset":19994,"endOffset":20074,"count":0},{"startOffset":20112,"endOffset":20148,"count":0}],"isBlockCoverage":true},{"functionName":"writeUInt8","ranges":[{"startOffset":20197,"endOffset":20291,"count":348}],"isBlockCoverage":true},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21691,"endOffset":22006,"count":693}],"isBlockCoverage":true},{"functionName":"writeUInt32BE","ranges":[{"startOffset":22008,"endOffset":22114,"count":693}],"isBlockCoverage":true},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22383,"endOffset":22579,"count":55176}],"isBlockCoverage":true},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22581,"endOffset":22683,"count":55176}],"isBlockCoverage":true},{"functionName":"FastBuffer","ranges":[{"startOffset":26363,"endOffset":26463,"count":5657}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29762,"endOffset":30011,"count":60}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30289,"endOffset":30425,"count":348}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30680,"endOffset":30752,"count":1}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1443,"endOffset":1911,"count":1}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":5070,"endOffset":6447,"count":1},{"startOffset":5271,"endOffset":5483,"count":0}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":8197,"endOffset":12299,"count":1},{"startOffset":8485,"endOffset":8776,"count":148},{"startOffset":8537,"endOffset":8772,"count":114},{"startOffset":8634,"endOffset":8766,"count":58},{"startOffset":9244,"endOffset":9666,"count":22},{"startOffset":9298,"endOffset":9662,"count":10},{"startOffset":9387,"endOffset":9456,"count":2},{"startOffset":9521,"endOffset":9590,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8780,"endOffset":9192,"count":28},{"startOffset":8850,"endOffset":8864,"count":27},{"startOffset":8866,"endOffset":8878,"count":2},{"startOffset":8878,"endOffset":8955,"count":26},{"startOffset":8955,"endOffset":9124,"count":2},{"startOffset":9005,"endOffset":9052,"count":1},{"startOffset":9124,"endOffset":9191,"count":24}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9700,"endOffset":9762,"count":182}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":10072,"endOffset":10148,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":10154,"endOffset":10223,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":10229,"endOffset":10302,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":10308,"endOffset":10360,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":10366,"endOffset":11181,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":11187,"endOffset":11352,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":11358,"endOffset":11535,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":11541,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11608,"endOffset":11771,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":12489,"endOffset":12819,"count":1},{"startOffset":12569,"endOffset":12744,"count":0},{"startOffset":12776,"endOffset":12817,"count":0}],"isBlockCoverage":true},{"functionName":"isDeprecatedExitCode","ranges":[{"startOffset":12821,"endOffset":13240,"count":3},{"startOffset":12902,"endOffset":13222,"count":2},{"startOffset":12953,"endOffset":12967,"count":0},{"startOffset":12968,"endOffset":12982,"count":0},{"startOffset":13192,"endOffset":13218,"count":0}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/process/task_queues","functions":[{"functionName":"hasTickScheduled","ranges":[{"startOffset":982,"endOffset":1057,"count":26}],"isBlockCoverage":true},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":1728},{"startOffset":1135,"endOffset":1138,"count":1107},{"startOffset":1139,"endOffset":1142,"count":621}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1247,"endOffset":1443,"count":13},{"startOffset":1409,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":622},{"startOffset":1501,"endOffset":2304,"count":1086},{"startOffset":1547,"endOffset":2279,"count":1745},{"startOffset":1748,"endOffset":1781,"count":46},{"startOffset":1781,"endOffset":2155,"count":1699},{"startOffset":1868,"endOffset":1901,"count":742},{"startOffset":1914,"endOffset":1956,"count":790},{"startOffset":1969,"endOffset":2020,"count":18},{"startOffset":2033,"endOffset":2093,"count":149},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0},{"startOffset":2304,"endOffset":2358,"count":621}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":1745},{"startOffset":2669,"endOffset":2676,"count":0},{"startOffset":2724,"endOffset":2738,"count":46},{"startOffset":2743,"endOffset":2780,"count":742},{"startOffset":2785,"endOffset":2836,"count":790},{"startOffset":2841,"endOffset":2906,"count":18},{"startOffset":2911,"endOffset":3050,"count":149},{"startOffset":3023,"endOffset":3050,"count":596},{"startOffset":3050,"endOffset":3054,"count":149},{"startOffset":3083,"endOffset":3109,"count":1107},{"startOffset":3354,"endOffset":3414,"count":0}],"isBlockCoverage":true},{"functionName":"runMicrotask","ranges":[{"startOffset":3444,"endOffset":3620,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3493,"endOffset":3616,"count":129}],"isBlockCoverage":true},{"functionName":"queueMicrotask","ranges":[{"startOffset":3692,"endOffset":3981,"count":129}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2155,"endOffset":2245,"count":627},{"startOffset":2235,"endOffset":2238,"count":6},{"startOffset":2239,"endOffset":2242,"count":621}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2247,"endOffset":2326,"count":26}],"isBlockCoverage":true},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2466,"endOffset":2999,"count":1},{"startOffset":2622,"endOffset":2675,"count":0},{"startOffset":2680,"endOffset":2737,"count":0},{"startOffset":2742,"endOffset":2797,"count":0},{"startOffset":2802,"endOffset":2855,"count":0},{"startOffset":2860,"endOffset":2940,"count":0}],"isBlockCoverage":true},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":3001,"endOffset":3570,"count":12},{"startOffset":3101,"endOffset":3166,"count":1},{"startOffset":3189,"endOffset":3278,"count":6},{"startOffset":3283,"endOffset":3366,"count":6},{"startOffset":3371,"endOffset":3466,"count":0},{"startOffset":3471,"endOffset":3564,"count":0}],"isBlockCoverage":true},{"functionName":"unhandledRejection","ranges":[{"startOffset":3997,"endOffset":4557,"count":6}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":4059,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":4559,"endOffset":5390,"count":6},{"startOffset":4762,"endOffset":5270,"count":0},{"startOffset":5315,"endOffset":5353,"count":0},{"startOffset":5359,"endOffset":5388,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6672,"endOffset":9849,"count":621},{"startOffset":6830,"endOffset":7009,"count":0},{"startOffset":7074,"endOffset":9753,"count":6},{"startOffset":7264,"endOffset":8519,"count":0},{"startOffset":8528,"endOffset":8635,"count":0},{"startOffset":8644,"endOffset":8809,"count":0},{"startOffset":8818,"endOffset":9253,"count":0},{"startOffset":9262,"endOffset":9540,"count":0},{"startOffset":9555,"endOffset":9753,"count":0}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":5661}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":1745}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":1745}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":2831},{"startOffset":3388,"endOffset":3400,"count":1086},{"startOffset":3400,"endOffset":3509,"count":1745}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":2830}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":1745},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":2831},{"startOffset":4041,"endOffset":4062,"count":2193},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:async_hooks","functions":[{"functionName":"AsyncResource","ranges":[{"startOffset":4546,"endOffset":5743,"count":129},{"startOffset":4821,"endOffset":4842,"count":0},{"startOffset":5074,"endOffset":5153,"count":0},{"startOffset":5305,"endOffset":5468,"count":0},{"startOffset":5500,"endOffset":5522,"count":0},{"startOffset":5524,"endOffset":5739,"count":0}],"isBlockCoverage":true},{"functionName":"runInAsyncScope","ranges":[{"startOffset":5747,"endOffset":6063,"count":129}],"isBlockCoverage":true},{"functionName":"emitDestroy","ranges":[{"startOffset":6067,"endOffset":6242,"count":129},{"startOffset":6128,"endOffset":6181,"count":0}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1794,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2317,"endOffset":3501,"count":116},{"startOffset":2370,"endOffset":2377,"count":0},{"startOffset":2437,"endOffset":2483,"count":0},{"startOffset":2574,"endOffset":2612,"count":0},{"startOffset":2618,"endOffset":2653,"count":0},{"startOffset":3047,"endOffset":3394,"count":107},{"startOffset":3228,"endOffset":3370,"count":45}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4203,"endOffset":4860,"count":107},{"startOffset":4370,"endOffset":4377,"count":0},{"startOffset":4407,"endOffset":4448,"count":0},{"startOffset":4453,"endOffset":4500,"count":0},{"startOffset":4505,"endOffset":4726,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5179,"endOffset":5545,"count":532},{"startOffset":5222,"endOffset":5241,"count":125},{"startOffset":5243,"endOffset":5310,"count":116},{"startOffset":5310,"endOffset":5371,"count":416},{"startOffset":5373,"endOffset":5543,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7403,"endOffset":7956,"count":149},{"startOffset":7590,"endOffset":7631,"count":0},{"startOffset":7636,"endOffset":7683,"count":0},{"startOffset":7688,"endOffset":7909,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":681,"endOffset":1011,"count":1},{"startOffset":742,"endOffset":1009,"count":0}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":385458}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":4676},{"startOffset":2354,"endOffset":4069,"count":385120},{"startOffset":2387,"endOffset":2429,"count":380444},{"startOffset":2429,"endOffset":2520,"count":4676},{"startOffset":2472,"endOffset":2478,"count":4338},{"startOffset":2478,"endOffset":2520,"count":338},{"startOffset":2520,"endOffset":2553,"count":380782},{"startOffset":2553,"endOffset":3970,"count":45976},{"startOffset":2585,"endOffset":2598,"count":39452},{"startOffset":2600,"endOffset":2625,"count":7074},{"startOffset":2625,"endOffset":3927,"count":38902},{"startOffset":2647,"endOffset":3682,"count":188},{"startOffset":2676,"endOffset":2702,"count":113},{"startOffset":2703,"endOffset":2777,"count":17},{"startOffset":2778,"endOffset":2852,"count":17},{"startOffset":2854,"endOffset":3542,"count":171},{"startOffset":2886,"endOffset":3363,"count":96},{"startOffset":3006,"endOffset":3082,"count":0},{"startOffset":3363,"endOffset":3532,"count":75},{"startOffset":3391,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3674,"count":92},{"startOffset":3605,"endOffset":3623,"count":17},{"startOffset":3624,"endOffset":3630,"count":75},{"startOffset":3682,"endOffset":3927,"count":38714},{"startOffset":3728,"endOffset":3797,"count":34116},{"startOffset":3797,"endOffset":3872,"count":4598},{"startOffset":3927,"endOffset":3970,"count":45880},{"startOffset":3970,"endOffset":4065,"count":334806},{"startOffset":3998,"endOffset":4012,"count":4520},{"startOffset":4014,"endOffset":4035,"count":935},{"startOffset":4035,"endOffset":4065,"count":333871}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33752,"endOffset":33771,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33896,"endOffset":34813,"count":4335},{"startOffset":34019,"endOffset":34039,"count":12021},{"startOffset":34046,"endOffset":34367,"count":7687},{"startOffset":34074,"endOffset":34083,"count":7686},{"startOffset":34084,"endOffset":34096,"count":1},{"startOffset":34193,"endOffset":34220,"count":1},{"startOffset":34220,"endOffset":34367,"count":7686},{"startOffset":34752,"endOffset":34802,"count":0},{"startOffset":34803,"endOffset":34808,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34879,"endOffset":35492,"count":341},{"startOffset":34965,"endOffset":34976,"count":0},{"startOffset":35304,"endOffset":35398,"count":3},{"startOffset":35336,"endOffset":35347,"count":0},{"startOffset":35386,"endOffset":35391,"count":0},{"startOffset":35398,"endOffset":35432,"count":338},{"startOffset":35432,"endOffset":35444,"count":0},{"startOffset":35444,"endOffset":35468,"count":338},{"startOffset":35468,"endOffset":35480,"count":12},{"startOffset":35481,"endOffset":35487,"count":326}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35559,"endOffset":35715,"count":635}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":35784,"endOffset":36198,"count":12},{"startOffset":35833,"endOffset":35844,"count":0},{"startOffset":35903,"endOffset":36110,"count":26},{"startOffset":36039,"endOffset":36052,"count":12},{"startOffset":36052,"endOffset":36096,"count":14},{"startOffset":36147,"endOffset":36158,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38714,"endOffset":38790,"count":3276}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38856,"endOffset":39532,"count":1449},{"startOffset":38939,"endOffset":38950,"count":0},{"startOffset":39124,"endOffset":39377,"count":17049},{"startOffset":39195,"endOffset":39279,"count":1449},{"startOffset":39279,"endOffset":39371,"count":15600},{"startOffset":39405,"endOffset":39432,"count":0},{"startOffset":39469,"endOffset":39481,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":39628,"endOffset":42055,"count":348},{"startOffset":39689,"endOffset":39719,"count":0},{"startOffset":39851,"endOffset":39871,"count":0},{"startOffset":39872,"endOffset":39903,"count":0},{"startOffset":39905,"endOffset":41429,"count":0},{"startOffset":41477,"endOffset":41962,"count":4101},{"startOffset":41548,"endOffset":41772,"count":348},{"startOffset":41772,"endOffset":41956,"count":3753},{"startOffset":41794,"endOffset":41956,"count":348},{"startOffset":41990,"endOffset":42000,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42121,"endOffset":43811,"count":42},{"startOffset":42454,"endOffset":43416,"count":566},{"startOffset":42550,"endOffset":42796,"count":37},{"startOffset":42770,"endOffset":42796,"count":0},{"startOffset":42796,"endOffset":42819,"count":529},{"startOffset":42819,"endOffset":42976,"count":42},{"startOffset":42976,"endOffset":43006,"count":529},{"startOffset":43006,"endOffset":43206,"count":48},{"startOffset":43122,"endOffset":43135,"count":42},{"startOffset":43135,"endOffset":43198,"count":6},{"startOffset":43206,"endOffset":43410,"count":481},{"startOffset":43233,"endOffset":43410,"count":396},{"startOffset":43655,"endOffset":43687,"count":0},{"startOffset":43688,"endOffset":43726,"count":0},{"startOffset":43729,"endOffset":43753,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:internal/console/constructor","functions":[{"functionName":"value","ranges":[{"startOffset":5709,"endOffset":6351,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5918,"endOffset":6013,"count":298},{"startOffset":5951,"endOffset":5974,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6025,"endOffset":6055,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6184,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6295,"endOffset":6325,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6442,"endOffset":7844,"count":1}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10604,"endOffset":11493,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10672,"endOffset":11490,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20364,"endOffset":21402,"count":1},{"startOffset":20731,"endOffset":21401,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21297,"endOffset":21398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3003,"endOffset":3234,"count":540}],"isBlockCoverage":false},{"functionName":"URLSearchParams","ranges":[{"startOffset":3634,"endOffset":6452,"count":496},{"startOffset":3749,"endOffset":6390,"count":0}],"isBlockCoverage":true},{"functionName":"isURLThis","ranges":[{"startOffset":13940,"endOffset":14126,"count":2437}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":15119,"endOffset":22019,"count":540}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":15133,"endOffset":15595,"count":540},{"startOffset":15377,"endOffset":15408,"count":244},{"startOffset":15544,"endOffset":15591,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15599,"endOffset":16453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16457,"endOffset":16601,"count":0}],"isBlockCoverage":false},{"functionName":"#onParseComplete","ranges":[{"startOffset":16624,"endOffset":17463,"count":638},{"startOffset":17274,"endOffset":17405,"count":496}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":17468,"endOffset":17582,"count":225},{"startOffset":17513,"endOffset":17547,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":17586,"endOffset":17700,"count":376},{"startOffset":17631,"endOffset":17665,"count":0}],"isBlockCoverage":true},{"functionName":"set href","ranges":[{"startOffset":17704,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"get origin","ranges":[{"startOffset":17970,"endOffset":18088,"count":263},{"startOffset":18017,"endOffset":18051,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":18092,"endOffset":18214,"count":552},{"startOffset":18141,"endOffset":18175,"count":0}],"isBlockCoverage":true},{"functionName":"set protocol","ranges":[{"startOffset":18218,"endOffset":18405,"count":0}],"isBlockCoverage":false},{"functionName":"get username","ranges":[{"startOffset":18409,"endOffset":18531,"count":0}],"isBlockCoverage":false},{"functionName":"set username","ranges":[{"startOffset":18535,"endOffset":18722,"count":0}],"isBlockCoverage":false},{"functionName":"get password","ranges":[{"startOffset":18726,"endOffset":18848,"count":0}],"isBlockCoverage":false},{"functionName":"set password","ranges":[{"startOffset":18852,"endOffset":19039,"count":0}],"isBlockCoverage":false},{"functionName":"get host","ranges":[{"startOffset":19043,"endOffset":19157,"count":0}],"isBlockCoverage":false},{"functionName":"set host","ranges":[{"startOffset":19161,"endOffset":19340,"count":0}],"isBlockCoverage":false},{"functionName":"get hostname","ranges":[{"startOffset":19344,"endOffset":19466,"count":259},{"startOffset":19393,"endOffset":19427,"count":0}],"isBlockCoverage":true},{"functionName":"set hostname","ranges":[{"startOffset":19470,"endOffset":19657,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":19661,"endOffset":19775,"count":0}],"isBlockCoverage":false},{"functionName":"set port","ranges":[{"startOffset":19779,"endOffset":19958,"count":0}],"isBlockCoverage":false},{"functionName":"get pathname","ranges":[{"startOffset":19962,"endOffset":20084,"count":556},{"startOffset":20011,"endOffset":20045,"count":0}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":20088,"endOffset":20275,"count":78},{"startOffset":20142,"endOffset":20176,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":20279,"endOffset":20397,"count":32},{"startOffset":20326,"endOffset":20360,"count":0}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":20401,"endOffset":20679,"count":32},{"startOffset":20454,"endOffset":20488,"count":0}],"isBlockCoverage":true},{"functionName":"get searchParams","ranges":[{"startOffset":20697,"endOffset":20819,"count":0}],"isBlockCoverage":false},{"functionName":"get hash","ranges":[{"startOffset":20823,"endOffset":20937,"count":32},{"startOffset":20868,"endOffset":20902,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":20941,"endOffset":21120,"count":32},{"startOffset":20991,"endOffset":21025,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":21124,"endOffset":21236,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectURL","ranges":[{"startOffset":21247,"endOffset":21645,"count":0}],"isBlockCoverage":false},{"functionName":"revokeObjectURL","ranges":[{"startOffset":21656,"endOffset":22017,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":23055,"endOffset":23195,"count":670},{"startOffset":23152,"endOffset":23194,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":33938,"endOffset":34459,"count":259},{"startOffset":34001,"endOffset":34057,"count":0},{"startOffset":34135,"endOffset":34418,"count":19577},{"startOffset":34166,"endOffset":34414,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":34461,"endOffset":34808,"count":259},{"startOffset":34528,"endOffset":34549,"count":16},{"startOffset":34549,"endOffset":34651,"count":243},{"startOffset":34587,"endOffset":34651,"count":0},{"startOffset":34689,"endOffset":34730,"count":0},{"startOffset":34750,"endOffset":34777,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":35568,"endOffset":36314,"count":78},{"startOffset":35655,"endOffset":35726,"count":0},{"startOffset":35848,"endOffset":35921,"count":0},{"startOffset":35973,"endOffset":36044,"count":0},{"startOffset":36096,"endOffset":36174,"count":0},{"startOffset":36226,"endOffset":36293,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":36316,"endOffset":37680,"count":78},{"startOffset":36404,"endOffset":36450,"count":0},{"startOffset":36452,"endOffset":37167,"count":0},{"startOffset":37489,"endOffset":37528,"count":0},{"startOffset":37531,"endOffset":37584,"count":0},{"startOffset":37592,"endOffset":37608,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":37682,"endOffset":37801,"count":1231},{"startOffset":37775,"endOffset":37798,"count":263}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":37803,"endOffset":37948,"count":988},{"startOffset":37886,"endOffset":37907,"count":968},{"startOffset":37907,"endOffset":37947,"count":20}],"isBlockCoverage":true}]},{"scriptId":"43","url":"node:internal/event_target","functions":[{"functionName":"initEventTarget","ranges":[{"startOffset":12144,"endOffset":12363,"count":1}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":26821,"endOffset":28286,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":26981,"endOffset":27117,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27216,"endOffset":28054,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":28314,"endOffset":29004,"count":1},{"startOffset":28745,"endOffset":28907,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":28383,"endOffset":28524,"count":10}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2367,"endOffset":2487,"count":75}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":5910,"endOffset":6547,"count":53},{"startOffset":5995,"endOffset":6052,"count":0},{"startOffset":6111,"endOffset":6178,"count":0},{"startOffset":6221,"endOffset":6351,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10340,"endOffset":10433,"count":25}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10437,"endOffset":10538,"count":25}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10542,"endOffset":10603,"count":25}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"46","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1420,"endOffset":3019,"count":2},{"startOffset":1712,"endOffset":1906,"count":0},{"startOffset":1912,"endOffset":1924,"count":0},{"startOffset":1929,"endOffset":2639,"count":0},{"startOffset":2645,"endOffset":2898,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2835,"endOffset":2882,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3632,"endOffset":3723,"count":3},{"startOffset":3686,"endOffset":3721,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3725,"endOffset":4417,"count":51},{"startOffset":3762,"endOffset":3776,"count":50},{"startOffset":3776,"endOffset":4416,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4083,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4419,"endOffset":5110,"count":49},{"startOffset":4456,"endOffset":4470,"count":48},{"startOffset":4470,"endOffset":5109,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4776,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5112,"endOffset":7601,"count":11},{"startOffset":5147,"endOffset":5160,"count":10},{"startOffset":5160,"endOffset":5319,"count":1},{"startOffset":5325,"endOffset":5459,"count":0},{"startOffset":5465,"endOffset":5477,"count":0},{"startOffset":5482,"endOffset":6262,"count":0},{"startOffset":6268,"endOffset":6492,"count":0},{"startOffset":6496,"endOffset":6761,"count":1},{"startOffset":6763,"endOffset":7600,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6449,"endOffset":6458,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7071,"endOffset":7113,"count":0}],"isBlockCoverage":false},{"functionName":"onpause","ranges":[{"startOffset":7119,"endOffset":7359,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupStdin","ranges":[{"startOffset":7374,"endOffset":7447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":349,"endOffset":510,"count":142}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":704,"endOffset":877,"count":1},{"startOffset":783,"endOffset":875,"count":0}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":6}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":6}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":3},{"startOffset":1008,"endOffset":1044,"count":0},{"startOffset":1046,"endOffset":1099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"49","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":4991,"endOffset":5251,"count":6570},{"startOffset":5190,"endOffset":5210,"count":561}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10577,"endOffset":10807,"count":365},{"startOffset":10720,"endOffset":10732,"count":0},{"startOffset":10734,"endOffset":10789,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":10809,"endOffset":11120,"count":365},{"startOffset":10927,"endOffset":10979,"count":0},{"startOffset":11066,"endOffset":11078,"count":0},{"startOffset":11080,"endOffset":11097,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11122,"endOffset":11377,"count":365},{"startOffset":11320,"endOffset":11332,"count":0},{"startOffset":11334,"endOffset":11351,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11601,"endOffset":12999,"count":365},{"startOffset":11770,"endOffset":11776,"count":0},{"startOffset":11916,"endOffset":11919,"count":0},{"startOffset":12049,"endOffset":12072,"count":0},{"startOffset":12324,"endOffset":12693,"count":0},{"startOffset":12753,"endOffset":12849,"count":0},{"startOffset":12871,"endOffset":12911,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13544,"endOffset":13684,"count":365}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14676,"endOffset":15072,"count":365}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":17850,"endOffset":18987,"count":365},{"startOffset":18072,"endOffset":18328,"count":0},{"startOffset":18358,"endOffset":18379,"count":0},{"startOffset":18470,"endOffset":18489,"count":0},{"startOffset":18522,"endOffset":18652,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":36724,"endOffset":37146,"count":3},{"startOffset":37108,"endOffset":37134,"count":1},{"startOffset":37135,"endOffset":37143,"count":1}],"isBlockCoverage":true},{"functionName":"hasNoEntryError","ranges":[{"startOffset":39494,"endOffset":39709,"count":71},{"startOffset":39543,"endOffset":39626,"count":18},{"startOffset":39626,"endOffset":39645,"count":53},{"startOffset":39645,"endOffset":39690,"count":0},{"startOffset":39690,"endOffset":39708,"count":53}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":40372,"endOffset":40796,"count":2},{"startOffset":40674,"endOffset":40697,"count":0},{"startOffset":40699,"endOffset":40726,"count":0}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":41011,"endOffset":41432,"count":77},{"startOffset":41310,"endOffset":41333,"count":71},{"startOffset":41335,"endOffset":41362,"count":18},{"startOffset":41362,"endOffset":41431,"count":59}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":65816,"endOffset":66026,"count":365},{"startOffset":65883,"endOffset":66006,"count":730},{"startOffset":65961,"endOffset":66000,"count":365},{"startOffset":66006,"endOffset":66025,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":66031,"endOffset":66318,"count":364},{"startOffset":66116,"endOffset":66146,"count":0},{"startOffset":66166,"endOffset":66317,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":66724,"endOffset":66799,"count":3383}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":66973,"endOffset":70885,"count":531},{"startOffset":67097,"endOffset":67115,"count":0},{"startOffset":67276,"endOffset":67311,"count":167},{"startOffset":67311,"endOffset":67873,"count":364},{"startOffset":67873,"endOffset":68045,"count":0},{"startOffset":68045,"endOffset":68182,"count":364},{"startOffset":68182,"endOffset":70812,"count":3383},{"startOffset":68294,"endOffset":68425,"count":365},{"startOffset":68425,"endOffset":68583,"count":3018},{"startOffset":68670,"endOffset":68698,"count":3377},{"startOffset":68700,"endOffset":68853,"count":2822},{"startOffset":68807,"endOffset":68831,"count":0},{"startOffset":68853,"endOffset":68919,"count":561},{"startOffset":68956,"endOffset":69005,"count":0},{"startOffset":69005,"endOffset":70309,"count":561},{"startOffset":69357,"endOffset":69445,"count":560},{"startOffset":69445,"endOffset":69866,"count":1},{"startOffset":69805,"endOffset":69858,"count":0},{"startOffset":69866,"endOffset":70229,"count":1},{"startOffset":70273,"endOffset":70303,"count":1},{"startOffset":70309,"endOffset":70601,"count":1},{"startOffset":70601,"endOffset":70624,"count":0},{"startOffset":70626,"endOffset":70808,"count":0},{"startOffset":70812,"endOffset":70826,"count":364}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":79545,"endOffset":79736,"count":57},{"startOffset":79593,"endOffset":79734,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":81942,"endOffset":82010,"count":15}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":82067,"endOffset":82137,"count":14}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":82329,"endOffset":82405,"count":14}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":82470,"endOffset":82548,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":83241,"endOffset":83337,"count":14}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3526,"endOffset":3726,"count":898},{"startOffset":3577,"endOffset":3608,"count":365},{"startOffset":3610,"endOffset":3724,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3745,"endOffset":3820,"count":4}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":3889,"endOffset":3946,"count":4}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":5392,"endOffset":6495,"count":1},{"startOffset":5501,"endOffset":6342,"count":0},{"startOffset":6410,"endOffset":6471,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5950,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":6497,"endOffset":7219,"count":4},{"startOffset":6584,"endOffset":7023,"count":0},{"startOffset":7061,"endOffset":7171,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6797,"endOffset":6952,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7221,"endOffset":7846,"count":909},{"startOffset":7305,"endOffset":7337,"count":898},{"startOffset":7339,"endOffset":7371,"count":11},{"startOffset":7371,"endOffset":7408,"count":898},{"startOffset":7408,"endOffset":7526,"count":364},{"startOffset":7526,"endOffset":7648,"count":534},{"startOffset":7565,"endOffset":7648,"count":0},{"startOffset":7648,"endOffset":7762,"count":898},{"startOffset":7762,"endOffset":7826,"count":0},{"startOffset":7826,"endOffset":7845,"count":898}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":7904,"endOffset":8433,"count":1722},{"startOffset":7974,"endOffset":8109,"count":1},{"startOffset":8109,"endOffset":8141,"count":1721},{"startOffset":8141,"endOffset":8431,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8574,"endOffset":9164,"count":988},{"startOffset":8804,"endOffset":8824,"count":0},{"startOffset":8894,"endOffset":8962,"count":0},{"startOffset":8981,"endOffset":9163,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9907,"endOffset":10214,"count":79}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10250,"endOffset":10307,"count":63}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10339,"endOffset":10396,"count":50}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":10995,"endOffset":11077,"count":244}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11564,"endOffset":11675,"count":316}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12847,"endOffset":13389,"count":79}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13730,"endOffset":13960,"count":113},{"startOffset":13767,"endOffset":13845,"count":0},{"startOffset":13847,"endOffset":13914,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14078,"endOffset":15157,"count":61},{"startOffset":14158,"endOffset":14684,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15559,"endOffset":16815,"count":375},{"startOffset":15640,"endOffset":15695,"count":0},{"startOffset":15718,"endOffset":15744,"count":1},{"startOffset":15744,"endOffset":15796,"count":374},{"startOffset":15801,"endOffset":15812,"count":0},{"startOffset":15834,"endOffset":15871,"count":0},{"startOffset":15876,"endOffset":15902,"count":0},{"startOffset":15907,"endOffset":15919,"count":0},{"startOffset":15941,"endOffset":15977,"count":0},{"startOffset":15983,"endOffset":16030,"count":0},{"startOffset":16035,"endOffset":16046,"count":0},{"startOffset":16068,"endOffset":16125,"count":0},{"startOffset":16131,"endOffset":16177,"count":0},{"startOffset":16182,"endOffset":16193,"count":0},{"startOffset":16215,"endOffset":16270,"count":0},{"startOffset":16276,"endOffset":16324,"count":0},{"startOffset":16329,"endOffset":16340,"count":0},{"startOffset":16362,"endOffset":16420,"count":0},{"startOffset":16425,"endOffset":16436,"count":0},{"startOffset":16458,"endOffset":16516,"count":0},{"startOffset":16522,"endOffset":16569,"count":0},{"startOffset":16574,"endOffset":16585,"count":0},{"startOffset":16607,"endOffset":16663,"count":0},{"startOffset":16668,"endOffset":16679,"count":0},{"startOffset":16701,"endOffset":16757,"count":0},{"startOffset":16761,"endOffset":16814,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17792,"endOffset":18171,"count":365},{"startOffset":17848,"endOffset":17915,"count":0},{"startOffset":17936,"endOffset":18003,"count":0},{"startOffset":18044,"endOffset":18167,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18677,"endOffset":18947,"count":988},{"startOffset":18739,"endOffset":18761,"count":0},{"startOffset":18763,"endOffset":18849,"count":0},{"startOffset":18925,"endOffset":18945,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18992,"endOffset":19127,"count":457}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19170,"endOffset":19291,"count":730},{"startOffset":19221,"endOffset":19240,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24365,"endOffset":24835,"count":365},{"startOffset":24465,"endOffset":24833,"count":0}],"isBlockCoverage":true}]},{"scriptId":"51","url":"node:url","functions":[{"functionName":"Url","ranges":[{"startOffset":1970,"endOffset":2246,"count":9}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":3700,"endOffset":3914,"count":9},{"startOffset":3788,"endOffset":3799,"count":0}],"isBlockCoverage":true},{"functionName":"isIpv6Hostname","ranges":[{"startOffset":3916,"endOffset":4139,"count":9},{"startOffset":4035,"endOffset":4132,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4960,"endOffset":15131,"count":9},{"startOffset":5432,"endOffset":6498,"count":256},{"startOffset":5695,"endOffset":5763,"count":9},{"startOffset":5721,"endOffset":5730,"count":0},{"startOffset":5763,"endOffset":5910,"count":247},{"startOffset":5779,"endOffset":5853,"count":0},{"startOffset":5869,"endOffset":5910,"count":0},{"startOffset":6032,"endOffset":6086,"count":0},{"startOffset":6095,"endOffset":6136,"count":0},{"startOffset":6169,"endOffset":6234,"count":0},{"startOffset":6243,"endOffset":6409,"count":0},{"startOffset":6423,"endOffset":6494,"count":0},{"startOffset":6741,"endOffset":6789,"count":0},{"startOffset":6797,"endOffset":6850,"count":0},{"startOffset":6856,"endOffset":7186,"count":0},{"startOffset":7343,"endOffset":7801,"count":0},{"startOffset":8281,"endOffset":8306,"count":0},{"startOffset":8617,"endOffset":8658,"count":0},{"startOffset":9179,"endOffset":10609,"count":134},{"startOffset":9225,"endOffset":9239,"count":0},{"startOffset":9248,"endOffset":9268,"count":0},{"startOffset":9277,"endOffset":9482,"count":0},{"startOffset":9491,"endOffset":9507,"count":0},{"startOffset":9516,"endOffset":9539,"count":0},{"startOffset":9548,"endOffset":9566,"count":0},{"startOffset":9575,"endOffset":9598,"count":0},{"startOffset":9607,"endOffset":9627,"count":0},{"startOffset":9636,"endOffset":9665,"count":0},{"startOffset":9674,"endOffset":9704,"count":0},{"startOffset":9713,"endOffset":9738,"count":0},{"startOffset":9747,"endOffset":9775,"count":0},{"startOffset":9784,"endOffset":9807,"count":0},{"startOffset":9816,"endOffset":9845,"count":0},{"startOffset":9854,"endOffset":9878,"count":0},{"startOffset":9887,"endOffset":10069,"count":0},{"startOffset":10078,"endOffset":10093,"count":0},{"startOffset":10102,"endOffset":10126,"count":8},{"startOffset":10135,"endOffset":10321,"count":8},{"startOffset":10330,"endOffset":10554,"count":0},{"startOffset":10597,"endOffset":10603,"count":8},{"startOffset":10648,"endOffset":10742,"count":0},{"startOffset":10767,"endOffset":10828,"count":1},{"startOffset":10828,"endOffset":10921,"count":8},{"startOffset":11118,"endOffset":11137,"count":0},{"startOffset":11471,"endOffset":11504,"count":0},{"startOffset":11668,"endOffset":11787,"count":0},{"startOffset":12882,"endOffset":12935,"count":0},{"startOffset":12993,"endOffset":12997,"count":0},{"startOffset":13027,"endOffset":13032,"count":0},{"startOffset":13168,"endOffset":13289,"count":0},{"startOffset":13675,"endOffset":13909,"count":67},{"startOffset":13742,"endOffset":13814,"count":0},{"startOffset":13852,"endOffset":13873,"count":0},{"startOffset":13875,"endOffset":13905,"count":0},{"startOffset":13937,"endOffset":14275,"count":0},{"startOffset":14303,"endOffset":14431,"count":0},{"startOffset":14481,"endOffset":14525,"count":0},{"startOffset":14561,"endOffset":14574,"count":0},{"startOffset":14642,"endOffset":14663,"count":8},{"startOffset":14667,"endOffset":14741,"count":0},{"startOffset":14822,"endOffset":14852,"count":1},{"startOffset":14903,"endOffset":14917,"count":0},{"startOffset":14949,"endOffset":14954,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":15134,"endOffset":15645,"count":9},{"startOffset":15223,"endOffset":15628,"count":81},{"startOffset":15528,"endOffset":15624,"count":0}],"isBlockCoverage":true},{"functionName":"autoEscapeStr","ranges":[{"startOffset":16702,"endOffset":17408,"count":9},{"startOffset":16819,"endOffset":17185,"count":67},{"startOffset":16970,"endOffset":17181,"count":0},{"startOffset":17260,"endOffset":17407,"count":0}],"isBlockCoverage":true},{"functionName":"urlFormat","ranges":[{"startOffset":17454,"endOffset":18164,"count":9},{"startOffset":17714,"endOffset":17756,"count":0},{"startOffset":17819,"endOffset":17941,"count":0},{"startOffset":18044,"endOffset":18083,"count":0},{"startOffset":18133,"endOffset":18163,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":18872,"endOffset":21249,"count":18},{"startOffset":18934,"endOffset":19008,"count":0},{"startOffset":19041,"endOffset":19046,"count":0},{"startOffset":19079,"endOffset":19084,"count":0},{"startOffset":19169,"endOffset":19446,"count":9},{"startOffset":19284,"endOffset":19317,"count":0},{"startOffset":19318,"endOffset":19353,"count":0},{"startOffset":19474,"endOffset":19507,"count":9},{"startOffset":19509,"endOffset":19561,"count":0},{"startOffset":19600,"endOffset":19616,"count":0},{"startOffset":19704,"endOffset":19720,"count":0},{"startOffset":19809,"endOffset":20215,"count":136},{"startOffset":19855,"endOffset":20022,"count":0},{"startOffset":20029,"endOffset":20205,"count":0},{"startOffset":20235,"endOffset":20372,"count":0},{"startOffset":20503,"endOffset":20535,"count":9},{"startOffset":20560,"endOffset":20567,"count":9},{"startOffset":20648,"endOffset":20674,"count":0},{"startOffset":20706,"endOffset":20988,"count":0},{"startOffset":21046,"endOffset":21081,"count":0},{"startOffset":21087,"endOffset":21105,"count":0},{"startOffset":21119,"endOffset":21165,"count":0},{"startOffset":21171,"endOffset":21193,"count":0}],"isBlockCoverage":true},{"functionName":"parseHost","ranges":[{"startOffset":30804,"endOffset":31077,"count":9}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2274,"endOffset":2343,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3541,"endOffset":3632,"count":1},{"startOffset":3588,"endOffset":3624,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3681,"endOffset":3724,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3765,"endOffset":3819,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4939,"endOffset":5349,"count":2075},{"startOffset":5037,"endOffset":5131,"count":1884},{"startOffset":5113,"endOffset":5127,"count":516},{"startOffset":5131,"endOffset":5204,"count":1559},{"startOffset":5204,"endOffset":5218,"count":1368},{"startOffset":5220,"endOffset":5330,"count":421},{"startOffset":5330,"endOffset":5348,"count":1559}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5581,"endOffset":5777,"count":778},{"startOffset":5653,"endOffset":5663,"count":763},{"startOffset":5680,"endOffset":5733,"count":763},{"startOffset":5690,"endOffset":5732,"count":425},{"startOffset":5739,"endOffset":5775,"count":745}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":5779,"endOffset":5935,"count":1285},{"startOffset":5860,"endOffset":5875,"count":0},{"startOffset":5877,"endOffset":5933,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":5937,"endOffset":6176,"count":16},{"startOffset":6038,"endOffset":6053,"count":0},{"startOffset":6055,"endOffset":6174,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6123,"endOffset":6165,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":6223,"endOffset":6854,"count":348},{"startOffset":6536,"endOffset":6546,"count":0},{"startOffset":6564,"endOffset":6802,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8357,"endOffset":8382,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":8491,"endOffset":10080,"count":1},{"startOffset":8690,"endOffset":8883,"count":0},{"startOffset":8931,"endOffset":9124,"count":0},{"startOffset":9283,"endOffset":9430,"count":322},{"startOffset":9318,"endOffset":9371,"count":68},{"startOffset":9373,"endOffset":9426,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9509,"endOffset":9535,"count":67}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9594,"endOffset":9641,"count":1}],"isBlockCoverage":true},{"functionName":"isBuiltin","ranges":[{"startOffset":9740,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":10349,"endOffset":11101,"count":2509},{"startOffset":10529,"endOffset":10545,"count":2333},{"startOffset":10545,"endOffset":10643,"count":176},{"startOffset":10643,"endOffset":10649,"count":0},{"startOffset":10650,"endOffset":10665,"count":176},{"startOffset":10693,"endOffset":10759,"count":71},{"startOffset":10759,"endOffset":10984,"count":105},{"startOffset":10984,"endOffset":11099,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":11389,"endOffset":11933,"count":935},{"startOffset":11524,"endOffset":11870,"count":2173},{"startOffset":11731,"endOffset":11744,"count":0},{"startOffset":11809,"endOffset":11866,"count":935},{"startOffset":11870,"endOffset":11932,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":11935,"endOffset":13215,"count":158},{"startOffset":12058,"endOffset":12139,"count":91},{"startOffset":12139,"endOffset":12233,"count":67},{"startOffset":12233,"endOffset":12277,"count":15},{"startOffset":12278,"endOffset":12345,"count":2},{"startOffset":12371,"endOffset":13196,"count":0},{"startOffset":13196,"endOffset":13214,"count":67}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":13560,"endOffset":13792,"count":855},{"startOffset":13649,"endOffset":13656,"count":534},{"startOffset":13656,"endOffset":13701,"count":321},{"startOffset":13701,"endOffset":13711,"count":0},{"startOffset":13713,"endOffset":13756,"count":0},{"startOffset":13756,"endOffset":13791,"count":321}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":13794,"endOffset":13925,"count":499}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14000,"endOffset":14206,"count":429},{"startOffset":14082,"endOffset":14188,"count":775},{"startOffset":14154,"endOffset":14184,"count":256},{"startOffset":14188,"endOffset":14205,"count":173}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14295,"endOffset":14763,"count":348},{"startOffset":14519,"endOffset":14745,"count":350},{"startOffset":14570,"endOffset":14579,"count":0},{"startOffset":14717,"endOffset":14741,"count":348},{"startOffset":14745,"endOffset":14762,"count":0}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":14765,"endOffset":15054,"count":599},{"startOffset":14817,"endOffset":14830,"count":6},{"startOffset":14830,"endOffset":14888,"count":593},{"startOffset":14888,"endOffset":15052,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":15056,"endOffset":15980,"count":599},{"startOffset":15115,"endOffset":15128,"count":6},{"startOffset":15128,"endOffset":15198,"count":593},{"startOffset":15198,"endOffset":15203,"count":0},{"startOffset":15216,"endOffset":15244,"count":593},{"startOffset":15246,"endOffset":15259,"count":566},{"startOffset":15259,"endOffset":15296,"count":27},{"startOffset":15296,"endOffset":15309,"count":0},{"startOffset":15309,"endOffset":15356,"count":27},{"startOffset":15356,"endOffset":15382,"count":0},{"startOffset":15382,"endOffset":15548,"count":27},{"startOffset":15444,"endOffset":15519,"count":0},{"startOffset":15548,"endOffset":15978,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":16141,"endOffset":16936,"count":507},{"startOffset":16348,"endOffset":16363,"count":329},{"startOffset":16382,"endOffset":16389,"count":329},{"startOffset":16389,"endOffset":16491,"count":178},{"startOffset":16501,"endOffset":16934,"count":13},{"startOffset":16781,"endOffset":16930,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":17204,"endOffset":21159,"count":600},{"startOffset":17314,"endOffset":17337,"count":8},{"startOffset":17337,"endOffset":17400,"count":592},{"startOffset":17377,"endOffset":17400,"count":0},{"startOffset":17537,"endOffset":17550,"count":102},{"startOffset":17550,"endOffset":18133,"count":498},{"startOffset":17693,"endOffset":18132,"count":495},{"startOffset":17772,"endOffset":18126,"count":0},{"startOffset":18208,"endOffset":18664,"count":329},{"startOffset":18314,"endOffset":18399,"count":69},{"startOffset":18334,"endOffset":18398,"count":0},{"startOffset":18400,"endOffset":18658,"count":69},{"startOffset":18569,"endOffset":18656,"count":0},{"startOffset":18709,"endOffset":18863,"count":329},{"startOffset":18826,"endOffset":18859,"count":75},{"startOffset":18863,"endOffset":18925,"count":498},{"startOffset":18925,"endOffset":21140,"count":801},{"startOffset":19057,"endOffset":19067,"count":726},{"startOffset":19068,"endOffset":19089,"count":719},{"startOffset":19091,"endOffset":19100,"count":287},{"startOffset":19100,"endOffset":19128,"count":514},{"startOffset":19128,"endOffset":19258,"count":507},{"startOffset":19229,"endOffset":19252,"count":13},{"startOffset":19258,"endOffset":19388,"count":501},{"startOffset":19388,"endOffset":20617,"count":498},{"startOffset":19410,"endOffset":20394,"count":177},{"startOffset":19443,"endOffset":19632,"count":176},{"startOffset":19498,"endOffset":19558,"count":0},{"startOffset":19632,"endOffset":20386,"count":1},{"startOffset":19686,"endOffset":20326,"count":0},{"startOffset":20417,"endOffset":20611,"count":321},{"startOffset":20507,"endOffset":20545,"count":306},{"startOffset":20617,"endOffset":20637,"count":501},{"startOffset":20637,"endOffset":20648,"count":174},{"startOffset":20650,"endOffset":20866,"count":158},{"startOffset":20760,"endOffset":20798,"count":3},{"startOffset":20866,"endOffset":20886,"count":501},{"startOffset":20886,"endOffset":20962,"count":485},{"startOffset":20962,"endOffset":21140,"count":16},{"startOffset":21140,"endOffset":21158,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23012,"endOffset":24152,"count":360},{"startOffset":23290,"endOffset":23315,"count":0},{"startOffset":23608,"endOffset":24030,"count":27544},{"startOffset":23704,"endOffset":23900,"count":2989},{"startOffset":23741,"endOffset":23859,"count":2625},{"startOffset":23900,"endOffset":24024,"count":24555},{"startOffset":23920,"endOffset":24024,"count":7900},{"startOffset":23955,"endOffset":23981,"count":5275},{"startOffset":23981,"endOffset":24016,"count":2625}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":24186,"endOffset":25644,"count":599},{"startOffset":24270,"endOffset":24345,"count":0},{"startOffset":24403,"endOffset":24459,"count":0},{"startOffset":24465,"endOffset":24531,"count":0},{"startOffset":24616,"endOffset":24815,"count":411},{"startOffset":24696,"endOffset":24746,"count":292},{"startOffset":24747,"endOffset":24814,"count":0},{"startOffset":24817,"endOffset":25116,"count":188},{"startOffset":24849,"endOffset":24864,"count":182},{"startOffset":24866,"endOffset":24976,"count":182},{"startOffset":24976,"endOffset":25016,"count":6},{"startOffset":25105,"endOffset":25111,"count":0},{"startOffset":25116,"endOffset":25184,"count":411},{"startOffset":25185,"endOffset":25204,"count":411},{"startOffset":25206,"endOffset":25455,"count":0},{"startOffset":25455,"endOffset":25643,"count":411}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":26668,"endOffset":27312,"count":4},{"startOffset":26837,"endOffset":27130,"count":2},{"startOffset":27132,"endOffset":27284,"count":1}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":27725,"endOffset":30861,"count":943},{"startOffset":27808,"endOffset":28624,"count":937},{"startOffset":28267,"endOffset":28620,"count":174},{"startOffset":28457,"endOffset":28507,"count":2},{"startOffset":28507,"endOffset":28552,"count":172},{"startOffset":28552,"endOffset":28620,"count":0},{"startOffset":28624,"endOffset":28677,"count":769},{"startOffset":28677,"endOffset":28939,"count":1},{"startOffset":28847,"endOffset":28907,"count":0},{"startOffset":28939,"endOffset":29092,"count":768},{"startOffset":29092,"endOffset":29452,"count":256},{"startOffset":29172,"endOffset":29400,"count":11},{"startOffset":29268,"endOffset":29295,"count":9},{"startOffset":29305,"endOffset":29355,"count":2},{"startOffset":29355,"endOffset":29400,"count":9},{"startOffset":29400,"endOffset":29448,"count":245},{"startOffset":29452,"endOffset":29515,"count":521},{"startOffset":29515,"endOffset":29537,"count":173},{"startOffset":29538,"endOffset":29597,"count":173},{"startOffset":29599,"endOffset":29628,"count":173},{"startOffset":29628,"endOffset":29727,"count":348},{"startOffset":29727,"endOffset":29758,"count":339},{"startOffset":29775,"endOffset":29898,"count":1},{"startOffset":29898,"endOffset":30002,"count":348},{"startOffset":30002,"endOffset":30071,"count":343},{"startOffset":30071,"endOffset":30833,"count":348},{"startOffset":30176,"endOffset":30579,"count":0},{"startOffset":30761,"endOffset":30829,"count":0},{"startOffset":30833,"endOffset":30860,"count":348}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30890,"endOffset":34178,"count":772},{"startOffset":30998,"endOffset":31075,"count":0},{"startOffset":31137,"endOffset":31195,"count":173},{"startOffset":31206,"endOffset":31231,"count":173},{"startOffset":31231,"endOffset":31281,"count":599},{"startOffset":31281,"endOffset":31300,"count":0},{"startOffset":31302,"endOffset":32379,"count":0},{"startOffset":32379,"endOffset":32474,"count":599},{"startOffset":32474,"endOffset":32522,"count":0},{"startOffset":32524,"endOffset":33119,"count":0},{"startOffset":33119,"endOffset":33280,"count":599},{"startOffset":33280,"endOffset":33476,"count":0},{"startOffset":33476,"endOffset":33632,"count":599},{"startOffset":33632,"endOffset":34177,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":34181,"endOffset":34750,"count":13},{"startOffset":34383,"endOffset":34502,"count":0},{"startOffset":34615,"endOffset":34749,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":35131,"endOffset":35968,"count":348},{"startOffset":35466,"endOffset":35496,"count":0},{"startOffset":35502,"endOffset":35544,"count":0},{"startOffset":35824,"endOffset":35872,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":36167,"endOffset":36466,"count":937},{"startOffset":36227,"endOffset":36345,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":36656,"endOffset":38335,"count":341},{"startOffset":36729,"endOffset":37465,"count":0},{"startOffset":37997,"endOffset":38095,"count":16},{"startOffset":38129,"endOffset":38333,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":36956,"endOffset":37195,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":37649,"endOffset":37902,"count":3}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":38535,"endOffset":40353,"count":341},{"startOffset":38626,"endOffset":38636,"count":0},{"startOffset":38654,"endOffset":38807,"count":0},{"startOffset":38940,"endOffset":38964,"count":0},{"startOffset":38966,"endOffset":39702,"count":0},{"startOffset":39925,"endOffset":39951,"count":6},{"startOffset":39976,"endOffset":40115,"count":0},{"startOffset":40317,"endOffset":40334,"count":6}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":40412,"endOffset":42172,"count":341},{"startOffset":40573,"endOffset":40581,"count":9},{"startOffset":40583,"endOffset":40648,"count":9},{"startOffset":40648,"endOffset":40708,"count":332},{"startOffset":40898,"endOffset":42128,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":42236,"endOffset":42642,"count":7},{"startOffset":42346,"endOffset":42356,"count":0},{"startOffset":42374,"endOffset":42476,"count":0},{"startOffset":42559,"endOffset":42640,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":44234,"endOffset":45199,"count":1},{"startOffset":44275,"endOffset":44300,"count":0},{"startOffset":44352,"endOffset":44375,"count":0},{"startOffset":44583,"endOffset":44625,"count":0},{"startOffset":44924,"endOffset":45066,"count":0}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":357,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1529,"endOffset":1703,"count":27},{"startOffset":1602,"endOffset":1673,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1705,"endOffset":2349,"count":1},{"startOffset":1916,"endOffset":2070,"count":0},{"startOffset":2113,"endOffset":2319,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2351,"endOffset":2951,"count":16},{"startOffset":2653,"endOffset":2686,"count":0},{"startOffset":2739,"endOffset":2875,"count":0},{"startOffset":2877,"endOffset":2950,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":2953,"endOffset":3396,"count":10},{"startOffset":3274,"endOffset":3302,"count":0},{"startOffset":3350,"endOffset":3395,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3398,"endOffset":5168,"count":26},{"startOffset":3600,"endOffset":3620,"count":0},{"startOffset":3623,"endOffset":3630,"count":0},{"startOffset":3764,"endOffset":3888,"count":0},{"startOffset":3924,"endOffset":3990,"count":10},{"startOffset":4079,"endOffset":4096,"count":10},{"startOffset":4096,"endOffset":4268,"count":16},{"startOffset":4269,"endOffset":4283,"count":0},{"startOffset":4310,"endOffset":4495,"count":0},{"startOffset":4495,"endOffset":5166,"count":16},{"startOffset":4524,"endOffset":4789,"count":0},{"startOffset":5108,"endOffset":5162,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5763,"endOffset":6283,"count":16},{"startOffset":5900,"endOffset":5975,"count":0},{"startOffset":5982,"endOffset":6062,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6473,"endOffset":6818,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6775,"endOffset":6814,"count":7577}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6820,"endOffset":7100,"count":16},{"startOffset":7048,"endOffset":7098,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8050,"endOffset":8377,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8128,"endOffset":8234,"count":16}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":1049},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":600,"endOffset":731,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":1048},{"startOffset":1084,"endOffset":1185,"count":8},{"startOffset":1185,"endOffset":1225,"count":1040}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1718,"endOffset":1776,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1780,"endOffset":1835,"count":1}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/vm","functions":[{"functionName":"internalCompileFunction","ranges":[{"startOffset":556,"endOffset":2879,"count":341},{"startOffset":1151,"endOffset":1200,"count":0},{"startOffset":1304,"endOffset":1566,"count":0},{"startOffset":2045,"endOffset":2118,"count":0},{"startOffset":2145,"endOffset":2202,"count":0},{"startOffset":2258,"endOffset":2331,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1675,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2813,"endOffset":2846,"count":3}],"isBlockCoverage":true}]},{"scriptId":"57","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":901,"endOffset":926,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":949,"endOffset":1341,"count":1},{"startOffset":1128,"endOffset":1132,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":1343,"endOffset":1470,"count":13},{"startOffset":1408,"endOffset":1444,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":1472,"endOffset":1781,"count":523},{"startOffset":1576,"endOffset":1598,"count":175},{"startOffset":1600,"endOffset":1779,"count":175}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":2030,"endOffset":4173,"count":341},{"startOffset":2144,"endOffset":3469,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":2287,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3491,"endOffset":3631,"count":937}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3640,"endOffset":3786,"count":1}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":3820,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":4358,"endOffset":4513,"count":7},{"startOffset":4440,"endOffset":4493,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":6543,"endOffset":6731,"count":29},{"startOffset":6650,"endOffset":6696,"count":19},{"startOffset":6696,"endOffset":6730,"count":10}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":279,"endOffset":955,"count":191},{"startOffset":332,"endOffset":369,"count":8},{"startOffset":369,"endOffset":602,"count":183},{"startOffset":602,"endOffset":905,"count":106},{"startOffset":636,"endOffset":770,"count":1},{"startOffset":695,"endOffset":748,"count":0},{"startOffset":798,"endOffset":901,"count":0},{"startOffset":905,"endOffset":954,"count":183}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/modules/esm/utils","functions":[{"functionName":"setCallbackForWrap","ranges":[{"startOffset":538,"endOffset":612,"count":351}],"isBlockCoverage":true},{"functionName":"getDefaultConditions","ranges":[{"startOffset":637,"endOffset":743,"count":70}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":771,"endOffset":886,"count":35}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":966,"endOffset":1348,"count":1},{"startOffset":1149,"endOffset":1153,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":1418,"endOffset":1777,"count":35},{"startOffset":1531,"endOffset":1739,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":2046,"endOffset":2435,"count":3},{"startOffset":2379,"endOffset":2434,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":2437,"endOffset":2755,"count":1}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/vm/module","functions":[{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11495,"endOffset":11974,"count":341}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11600,"endOffset":11930,"count":3},{"startOffset":11751,"endOffset":11788,"count":0},{"startOffset":11790,"endOffset":11929,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12096,"endOffset":12131,"count":3}],"isBlockCoverage":true}]},{"scriptId":"62","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":155,"endOffset":666,"count":1},{"startOffset":495,"endOffset":502,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":668,"endOffset":1558,"count":1},{"startOffset":1184,"endOffset":1196,"count":0},{"startOffset":1378,"endOffset":1390,"count":0},{"startOffset":1457,"endOffset":1470,"count":0}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2382,"endOffset":2780,"count":1},{"startOffset":2562,"endOffset":2605,"count":0}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":506,"endOffset":595,"count":2}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":957,"endOffset":1104,"count":1}],"isBlockCoverage":true},{"functionName":"validateTries","ranges":[{"startOffset":1106,"endOffset":1241,"count":1}],"isBlockCoverage":true},{"functionName":"ResolverBase","ranges":[{"startOffset":1635,"endOffset":1984,"count":1},{"startOffset":1878,"endOffset":1935,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1988,"endOffset":2124,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDns","ranges":[{"startOffset":5427,"endOffset":5813,"count":1},{"startOffset":5570,"endOffset":5680,"count":0},{"startOffset":5728,"endOffset":5812,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5753,"endOffset":5809,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6074,"endOffset":6355,"count":2},{"startOffset":6280,"endOffset":6327,"count":1}],"isBlockCoverage":true},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6430,"endOffset":6652,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6563,"endOffset":6648,"count":30}],"isBlockCoverage":true},{"functionName":"validateHints","ranges":[{"startOffset":6654,"endOffset":6873,"count":1},{"startOffset":6813,"endOffset":6871,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7274,"endOffset":7342,"count":87}],"isBlockCoverage":true},{"functionName":"createResolverClass","ranges":[{"startOffset":7470,"endOffset":8577,"count":2}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":997,"endOffset":1270,"count":314}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1272,"endOffset":1545,"count":271}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":1547,"endOffset":1633,"count":314},{"startOffset":1583,"endOffset":1592,"count":43},{"startOffset":1592,"endOffset":1610,"count":271},{"startOffset":1610,"endOffset":1619,"count":131},{"startOffset":1619,"endOffset":1632,"count":140}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":778,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1158,"endOffset":3262,"count":1},{"startOffset":2050,"endOffset":2154,"count":0},{"startOffset":3042,"endOffset":3204,"count":0}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":3264,"endOffset":3553,"count":1}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":3555,"endOffset":3611,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":3613,"endOffset":5724,"count":1},{"startOffset":4393,"endOffset":4445,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":5726,"endOffset":6007,"count":13},{"startOffset":5847,"endOffset":6005,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":6009,"endOffset":6529,"count":1},{"startOffset":6384,"endOffset":6523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6413,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":6565,"endOffset":7716,"count":1},{"startOffset":6696,"endOffset":6713,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":6731,"endOffset":6876,"count":12},{"startOffset":6771,"endOffset":6799,"count":11},{"startOffset":6799,"endOffset":6875,"count":1}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":6880,"endOffset":6975,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":7027,"endOffset":7268,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7128,"endOffset":7178,"count":12}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7186,"endOffset":7256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7601,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":7822,"endOffset":8785,"count":1},{"startOffset":7968,"endOffset":7985,"count":0},{"startOffset":8474,"endOffset":8783,"count":0}],"isBlockCoverage":true},{"functionName":"cryptoThisCheck","ranges":[{"startOffset":8159,"endOffset":8335,"count":0}],"isBlockCoverage":false},{"functionName":"get crypto","ranges":[{"startOffset":8636,"endOffset":8735,"count":0}],"isBlockCoverage":false},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":8787,"endOffset":9308,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":9416,"endOffset":9704,"count":1},{"startOffset":9566,"endOffset":9583,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":9706,"endOffset":9931,"count":1},{"startOffset":9808,"endOffset":9930,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":9933,"endOffset":10182,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10078,"endOffset":10173,"count":11}],"isBlockCoverage":true},{"functionName":"setupDebugEnv","ranges":[{"startOffset":10184,"endOffset":10417,"count":1},{"startOffset":10335,"endOffset":10415,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":10479,"endOffset":10667,"count":1},{"startOffset":10567,"endOffset":10665,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":10669,"endOffset":11250,"count":1},{"startOffset":10804,"endOffset":11248,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":10917,"endOffset":10978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11170,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":11252,"endOffset":11511,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":11513,"endOffset":11596,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":11598,"endOffset":12180,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":12375,"endOffset":14327,"count":1},{"startOffset":13087,"endOffset":13389,"count":16},{"startOffset":13132,"endOffset":13364,"count":0},{"startOffset":13706,"endOffset":13903,"count":0},{"startOffset":13931,"endOffset":14325,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":14329,"endOffset":14894,"count":1},{"startOffset":14405,"endOffset":14892,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":14896,"endOffset":15166,"count":1},{"startOffset":14983,"endOffset":15164,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":15168,"endOffset":16993,"count":1},{"startOffset":15296,"endOffset":16991,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":16995,"endOffset":17226,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":17228,"endOffset":17349,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":17351,"endOffset":17898,"count":1},{"startOffset":17651,"endOffset":17896,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":17900,"endOffset":18187,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":18189,"endOffset":18446,"count":1},{"startOffset":18274,"endOffset":18444,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":18448,"endOffset":18796,"count":1},{"startOffset":18642,"endOffset":18794,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":18798,"endOffset":18892,"count":1}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3324,"endOffset":3427,"count":5},{"startOffset":3376,"endOffset":3405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"384","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/bin/jasmine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":519,"count":1}],"isBlockCoverage":true}]},{"scriptId":"386","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9577,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2047,"endOffset":2288,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2106,"endOffset":2284,"count":1},{"startOffset":2218,"endOffset":2264,"count":0}],"isBlockCoverage":true},{"functionName":"getOSRelease","ranges":[{"startOffset":2670,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2732,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2794,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2857,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2918,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2983,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3036,"endOffset":3055,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3091,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3144,"endOffset":3161,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3197,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3251,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3309,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3368,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3420,"endOffset":3437,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3575,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3958,"endOffset":4385,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4416,"endOffset":4458,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4485,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4535,"endOffset":4585,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4616,"endOffset":4638,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4670,"endOffset":5275,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5304,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5355,"endOffset":5402,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5435,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5540,"endOffset":5793,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5795,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6742,"endOffset":7434,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7518,"endOffset":7807,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":7865,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8424,"endOffset":8712,"count":1},{"startOffset":8600,"endOffset":8632,"count":0},{"startOffset":8651,"endOffset":8694,"count":0}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10485,"count":1}],"isBlockCoverage":true},{"functionName":"Command","ranges":[{"startOffset":542,"endOffset":1824,"count":1},{"startOffset":734,"endOffset":761,"count":0}],"isBlockCoverage":true},{"functionName":"Command.run","ranges":[{"startOffset":867,"endOffset":1821,"count":1},{"startOffset":1282,"endOffset":1450,"count":0},{"startOffset":1553,"endOffset":1720,"count":0},{"startOffset":1803,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":985,"endOffset":1256,"count":4},{"startOffset":1083,"endOffset":1130,"count":0},{"startOffset":1160,"endOffset":1201,"count":2},{"startOffset":1203,"endOffset":1250,"count":0}],"isBlockCoverage":true},{"functionName":"isFileArg","ranges":[{"startOffset":1826,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"parseOptions","ranges":[{"startOffset":1920,"endOffset":4052,"count":1},{"startOffset":2106,"endOffset":2114,"count":0},{"startOffset":2255,"endOffset":3763,"count":2},{"startOffset":2287,"endOffset":2315,"count":0},{"startOffset":2344,"endOffset":2371,"count":0},{"startOffset":2406,"endOffset":2460,"count":0},{"startOffset":2495,"endOffset":2554,"count":0},{"startOffset":2590,"endOffset":2651,"count":0},{"startOffset":2684,"endOffset":3759,"count":1},{"startOffset":2749,"endOffset":2814,"count":0},{"startOffset":2847,"endOffset":2897,"count":0},{"startOffset":2990,"endOffset":3759,"count":0},{"startOffset":3798,"endOffset":3874,"count":0}],"isBlockCoverage":true},{"functionName":"runJasmine","ranges":[{"startOffset":4054,"endOffset":5281,"count":1},{"startOffset":4177,"endOffset":4283,"count":0},{"startOffset":4401,"endOffset":4435,"count":0},{"startOffset":4648,"endOffset":4684,"count":0},{"startOffset":4722,"endOffset":4770,"count":0},{"startOffset":4835,"endOffset":4892,"count":0},{"startOffset":4959,"endOffset":5006,"count":0},{"startOffset":5046,"endOffset":5105,"count":0},{"startOffset":5208,"endOffset":5279,"count":0}],"isBlockCoverage":true},{"functionName":"registerReporter","ranges":[{"startOffset":5283,"endOffset":5903,"count":0}],"isBlockCoverage":false},{"functionName":"resolveReporter","ranges":[{"startOffset":5905,"endOffset":6089,"count":0}],"isBlockCoverage":false},{"functionName":"initJasmine","ranges":[{"startOffset":6091,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"installExamples","ranges":[{"startOffset":6546,"endOffset":7443,"count":0}],"isBlockCoverage":false},{"functionName":"help","ranges":[{"startOffset":7445,"endOffset":9153,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":9155,"endOffset":9366,"count":0}],"isBlockCoverage":false},{"functionName":"lPad","ranges":[{"startOffset":9368,"endOffset":9495,"count":0}],"isBlockCoverage":false},{"functionName":"copyFiles","ranges":[{"startOffset":9497,"endOffset":9773,"count":0}],"isBlockCoverage":false},{"functionName":"makeDirStructure","ranges":[{"startOffset":9775,"endOffset":10097,"count":0}],"isBlockCoverage":false},{"functionName":"isEnvironmentVariable","ranges":[{"startOffset":10099,"endOffset":10220,"count":2},{"startOffset":10184,"endOffset":10219,"count":0}],"isBlockCoverage":true},{"functionName":"setEnvironmentVariables","ranges":[{"startOffset":10222,"endOffset":10484,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10278,"endOffset":10480,"count":2},{"startOffset":10367,"endOffset":10476,"count":0}],"isBlockCoverage":true}]},{"scriptId":"388","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13259,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1019,"endOffset":1922,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2015,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3016,"endOffset":3193,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3195,"endOffset":4192,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4194,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6126,"endOffset":6181,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6185,"endOffset":6242,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6277,"endOffset":6302,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6478,"endOffset":7609,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7644,"endOffset":8205,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8237,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8403,"endOffset":8437,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8465,"endOffset":10256,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10448,"endOffset":10503,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10507,"endOffset":10564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10600,"endOffset":10625,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":10807,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11313,"endOffset":11953,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":11989,"endOffset":12550,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12583,"endOffset":12965,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13147,"endOffset":13181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6757,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":358,"endOffset":669,"count":78},{"startOffset":402,"endOffset":667,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":779,"endOffset":1566,"count":39},{"startOffset":948,"endOffset":952,"count":9},{"startOffset":962,"endOffset":973,"count":30},{"startOffset":991,"endOffset":1068,"count":0},{"startOffset":1253,"endOffset":1282,"count":30},{"startOffset":1401,"endOffset":1508,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1427,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1568,"endOffset":2182,"count":39},{"startOffset":2143,"endOffset":2180,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1628,"endOffset":2087,"count":39},{"startOffset":1670,"endOffset":1691,"count":0},{"startOffset":1822,"endOffset":1852,"count":30},{"startOffset":1930,"endOffset":1952,"count":0},{"startOffset":1967,"endOffset":2027,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2184,"endOffset":2271,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2273,"endOffset":2521,"count":39},{"startOffset":2378,"endOffset":2410,"count":30},{"startOffset":2461,"endOffset":2472,"count":30},{"startOffset":2490,"endOffset":2519,"count":9}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2523,"endOffset":2798,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2800,"endOffset":3490,"count":91}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3492,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4413,"endOffset":4819,"count":112},{"startOffset":4510,"endOffset":4818,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":4821,"endOffset":5503,"count":0}],"isBlockCoverage":false},{"functionName":"emitConstructNT","ranges":[{"startOffset":5505,"endOffset":5568,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5570,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":5668,"endOffset":5728,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":5730,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":5885,"endOffset":6665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7987,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":437,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":856,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1078,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1279,"endOffset":1550,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1552,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":1768,"endOffset":1936,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":1938,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2107,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2221,"endOffset":2551,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2553,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":2838,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3157,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":3583,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":3909,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4259,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":4561,"endOffset":4785,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":4787,"endOffset":5101,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5103,"endOffset":5315,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5317,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":5531,"endOffset":6036,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6038,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6292,"endOffset":6419,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":6421,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":6611,"endOffset":6949,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":6951,"endOffset":7096,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7098,"endOffset":7403,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27057,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2940,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3094,"endOffset":3177,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3179,"endOffset":8200,"count":10}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3320,"endOffset":3497,"count":10},{"startOffset":3434,"endOffset":3438,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3501,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3562,"endOffset":3598,"count":20}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3602,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3688,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3748,"endOffset":3812,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3816,"endOffset":3868,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3872,"endOffset":3916,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3920,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":4033,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4118,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4189,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4336,"endOffset":4396,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4400,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4468,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4546,"endOffset":4657,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4661,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4748,"endOffset":4829,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4841,"endOffset":5633,"count":10},{"startOffset":4875,"endOffset":4913,"count":0},{"startOffset":4944,"endOffset":4985,"count":0},{"startOffset":5211,"endOffset":5572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5153,"endOffset":5195,"count":10}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5296,"endOffset":5408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5411,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":5772,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":6835,"endOffset":6986,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":7235,"endOffset":7389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7393,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7796,"endOffset":7849,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7853,"endOffset":7940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7944,"endOffset":7977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7981,"endOffset":8198,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":8202,"endOffset":8573,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8313,"endOffset":8372,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8359,"endOffset":8371,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8378,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":8575,"endOffset":9035,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":9037,"endOffset":9157,"count":40},{"startOffset":9081,"endOffset":9090,"count":0},{"startOffset":9096,"endOffset":9155,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":9159,"endOffset":10301,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":10303,"endOffset":12442,"count":10},{"startOffset":10455,"endOffset":10485,"count":0},{"startOffset":10765,"endOffset":10803,"count":0},{"startOffset":10836,"endOffset":10884,"count":0},{"startOffset":10917,"endOffset":10955,"count":0},{"startOffset":11197,"endOffset":11269,"count":0},{"startOffset":11413,"endOffset":11417,"count":0},{"startOffset":11502,"endOffset":11558,"count":0},{"startOffset":11652,"endOffset":11663,"count":0},{"startOffset":11720,"endOffset":11780,"count":0},{"startOffset":11828,"endOffset":11842,"count":0},{"startOffset":11844,"endOffset":11954,"count":0},{"startOffset":11985,"endOffset":12436,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":12595,"endOffset":12816,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":12818,"endOffset":13087,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":13089,"endOffset":13447,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":13567,"endOffset":13892,"count":10}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":13894,"endOffset":15265,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":15267,"endOffset":15604,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15606,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":16857,"endOffset":17299,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":17301,"endOffset":17607,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":17609,"endOffset":17742,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":17744,"endOffset":17903,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":17905,"endOffset":18109,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":18111,"endOffset":18482,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":18484,"endOffset":18573,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":18575,"endOffset":18656,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":18658,"endOffset":19134,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":19136,"endOffset":19584,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":19586,"endOffset":19825,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":19827,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":20553,"endOffset":20731,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":20733,"endOffset":21003,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":21005,"endOffset":21272,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":21274,"endOffset":21548,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":21550,"endOffset":21873,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":21875,"endOffset":22013,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":22015,"endOffset":22148,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":22150,"endOffset":22336,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":22338,"endOffset":22566,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":22568,"endOffset":22844,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":22846,"endOffset":23043,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":23045,"endOffset":23318,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":23320,"endOffset":23592,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":23594,"endOffset":23793,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":23795,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":24074,"endOffset":24247,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":24249,"endOffset":24497,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":24499,"endOffset":25174,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":25176,"endOffset":25290,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":25292,"endOffset":25533,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":25535,"endOffset":25879,"count":10},{"startOffset":25652,"endOffset":25658,"count":0},{"startOffset":25699,"endOffset":25736,"count":0}],"isBlockCoverage":true},{"functionName":"_watch","ranges":[{"startOffset":25881,"endOffset":26546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7453,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1174,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1637,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2498,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2936,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3237,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3927,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4128,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4814,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5446,"endOffset":6943,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6946,"endOffset":7393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6836,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1197,"endOffset":2011,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":2015,"endOffset":2058,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2062,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2133,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3517,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4324,"endOffset":5013,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":5017,"endOffset":5394,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5398,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5841,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6422,"endOffset":6780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5219,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2130,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"StringDecoder","ranges":[{"startOffset":2709,"endOffset":2908,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3234,"endOffset":3619,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":3899,"endOffset":4090,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":4301,"endOffset":4458,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4596,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4900,"endOffset":4963,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5055,"endOffset":5170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11040,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1417,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1467,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1817,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2562,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3616,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3870,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4240,"endOffset":4667,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4698,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5013,"endOffset":5263,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5267,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6771,"endOffset":7680,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7897,"endOffset":7905,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8028,"endOffset":8365,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8394,"endOffset":8463,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8494,"endOffset":8565,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8568,"endOffset":8620,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8844,"endOffset":8880,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8884,"endOffset":8925,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8931,"endOffset":10908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"node:internal/fs/recursive_watch","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7482,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFsPromises","ranges":[{"startOffset":812,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadFsSync","ranges":[{"startOffset":921,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":1009,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1592,"endOffset":7428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39632,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3801,"endOffset":9464,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9705,"endOffset":9805,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9808,"endOffset":9920,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":10029,"endOffset":10080,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10174,"endOffset":10217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10221,"endOffset":10412,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10551,"endOffset":10805,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10809,"endOffset":11116,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11120,"endOffset":11362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11366,"endOffset":11453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11457,"endOffset":11625,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11629,"endOffset":11826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11830,"endOffset":13008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13012,"endOffset":14017,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14101,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14353,"endOffset":14484,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14576,"endOffset":14712,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14983,"endOffset":15142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15146,"endOffset":16880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16884,"endOffset":17553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17557,"endOffset":17956,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17960,"endOffset":20168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20172,"endOffset":20633,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20637,"endOffset":20895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20899,"endOffset":21381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21385,"endOffset":21866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21870,"endOffset":22630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22634,"endOffset":23061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23065,"endOffset":23343,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23347,"endOffset":23605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23609,"endOffset":23869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23873,"endOffset":24028,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24032,"endOffset":24707,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24711,"endOffset":24860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24864,"endOffset":25018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25022,"endOffset":25209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25213,"endOffset":25521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25525,"endOffset":25833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26268,"endOffset":26902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26906,"endOffset":27614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27689,"endOffset":28629,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28806,"endOffset":28975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29094,"endOffset":29651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29688,"endOffset":37725,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38033,"endOffset":39051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11903,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11347,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11377,"endOffset":11790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4489,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2226,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2807,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3813,"endOffset":3845,"count":13}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3942,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4075,"endOffset":4116,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4280,"endOffset":4487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10097,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":905,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1487,"endOffset":4244,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4246,"endOffset":4719,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":4721,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":4871,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5201,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5345,"endOffset":5715,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5717,"endOffset":6044,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6260,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6378,"endOffset":7788,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":7790,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8221,"endOffset":8415,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8417,"endOffset":8739,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":8741,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9291,"endOffset":9869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10125,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1475,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1610,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2088,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2348,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3055,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3494,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3591,"endOffset":3674,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3707,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":3790,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3910,"endOffset":4038,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4114,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4336,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4602,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5201,"endOffset":5415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5419,"endOffset":6026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6030,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6286,"endOffset":6734,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":6738,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":6867,"endOffset":6875,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":7325,"endOffset":7681,"count":0}],"isBlockCoverage":false},{"functionName":"abortSignal","ranges":[{"startOffset":7683,"endOffset":7908,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7910,"endOffset":8563,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":8711,"endOffset":8903,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":8975,"endOffset":9064,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":9158,"endOffset":9676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8214,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":847,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":956,"endOffset":964,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":967,"endOffset":6858,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":6860,"endOffset":7694,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7696,"endOffset":8154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3531,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":412,"endOffset":3529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11957,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":997,"endOffset":1426,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1428,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1758,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2046,"endOffset":2220,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2222,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3267,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3867,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":3962,"endOffset":10273,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10275,"endOffset":11910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4938,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":47},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2266,"endOffset":2402,"count":0},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3811,"endOffset":4023,"count":1232},{"startOffset":3909,"endOffset":3940,"count":0},{"startOffset":3984,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4029,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4364,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4547,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4683,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4805,"endOffset":4936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41570,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1777,"endOffset":1802,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2555,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":2607,"endOffset":6336,"count":56},{"startOffset":3006,"endOffset":3049,"count":0},{"startOffset":3249,"endOffset":3334,"count":47},{"startOffset":3582,"endOffset":3618,"count":0},{"startOffset":6235,"endOffset":6334,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6339,"endOffset":7227,"count":56},{"startOffset":6407,"endOffset":6436,"count":0},{"startOffset":6759,"endOffset":6785,"count":0},{"startOffset":6840,"endOffset":6872,"count":0},{"startOffset":6929,"endOffset":6965,"count":0},{"startOffset":6990,"endOffset":7002,"count":0},{"startOffset":7010,"endOffset":7047,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7114,"endOffset":7223,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":7364,"endOffset":7396,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7447,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7714,"endOffset":7800,"count":520}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":7896,"endOffset":7981,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7984,"endOffset":10325,"count":520},{"startOffset":8198,"endOffset":8662,"count":0},{"startOffset":8697,"endOffset":8725,"count":481},{"startOffset":8725,"endOffset":8972,"count":39},{"startOffset":8764,"endOffset":8841,"count":0},{"startOffset":8866,"endOffset":8972,"count":0},{"startOffset":8989,"endOffset":9027,"count":0},{"startOffset":9053,"endOffset":9116,"count":39},{"startOffset":9116,"endOffset":10041,"count":481},{"startOffset":9197,"endOffset":9434,"count":0},{"startOffset":9457,"endOffset":9527,"count":0},{"startOffset":9571,"endOffset":9598,"count":0},{"startOffset":9659,"endOffset":9671,"count":0},{"startOffset":9673,"endOffset":9880,"count":0},{"startOffset":9952,"endOffset":10041,"count":0},{"startOffset":10257,"endOffset":10322,"count":481},{"startOffset":10300,"endOffset":10321,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":10327,"endOffset":11058,"count":481},{"startOffset":10438,"endOffset":10479,"count":474},{"startOffset":10481,"endOffset":10772,"count":474},{"startOffset":10608,"endOffset":10654,"count":0},{"startOffset":10772,"endOffset":11024,"count":7},{"startOffset":10848,"endOffset":10851,"count":0},{"startOffset":10894,"endOffset":10922,"count":0},{"startOffset":10999,"endOffset":11020,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11090,"endOffset":11202,"count":44}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11266,"endOffset":11827,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11888,"endOffset":12239,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12352,"endOffset":12746,"count":666},{"startOffset":12400,"endOffset":12438,"count":99},{"startOffset":12423,"endOffset":12437,"count":92},{"startOffset":12444,"endOffset":12453,"count":615},{"startOffset":12453,"endOffset":12482,"count":51},{"startOffset":12482,"endOffset":12491,"count":0},{"startOffset":12491,"endOffset":12664,"count":51},{"startOffset":12600,"endOffset":12635,"count":7},{"startOffset":12635,"endOffset":12664,"count":44},{"startOffset":12664,"endOffset":12739,"count":0},{"startOffset":12740,"endOffset":12743,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":12843,"endOffset":17331,"count":666},{"startOffset":13027,"endOffset":13045,"count":99},{"startOffset":13045,"endOffset":13112,"count":567},{"startOffset":13076,"endOffset":13112,"count":0},{"startOffset":13277,"endOffset":13326,"count":0},{"startOffset":13347,"endOffset":13377,"count":99},{"startOffset":13563,"endOffset":13590,"count":567},{"startOffset":13591,"endOffset":13724,"count":475},{"startOffset":13674,"endOffset":13700,"count":0},{"startOffset":13726,"endOffset":13911,"count":0},{"startOffset":14020,"endOffset":14034,"count":659},{"startOffset":14036,"endOffset":14111,"count":96},{"startOffset":14072,"endOffset":14090,"count":89},{"startOffset":14111,"endOffset":15387,"count":570},{"startOffset":15387,"endOffset":15428,"count":7},{"startOffset":15430,"endOffset":15732,"count":570},{"startOffset":15732,"endOffset":15748,"count":563},{"startOffset":15749,"endOffset":15767,"count":518},{"startOffset":15768,"endOffset":15784,"count":518},{"startOffset":15785,"endOffset":15812,"count":518},{"startOffset":15814,"endOffset":15892,"count":52},{"startOffset":15892,"endOffset":16498,"count":518},{"startOffset":16206,"endOffset":16258,"count":0},{"startOffset":16462,"endOffset":16494,"count":0},{"startOffset":16498,"endOffset":16528,"count":570},{"startOffset":16528,"endOffset":16553,"count":7},{"startOffset":16553,"endOffset":16576,"count":563},{"startOffset":16576,"endOffset":16598,"count":570},{"startOffset":16598,"endOffset":16676,"count":563},{"startOffset":16676,"endOffset":16839,"count":7},{"startOffset":16738,"endOffset":16784,"count":0},{"startOffset":16839,"endOffset":17183,"count":570},{"startOffset":17016,"endOffset":17042,"count":563},{"startOffset":17139,"endOffset":17153,"count":51},{"startOffset":17161,"endOffset":17179,"count":7},{"startOffset":17183,"endOffset":17204,"count":570},{"startOffset":17204,"endOffset":17226,"count":7},{"startOffset":17227,"endOffset":17249,"count":7},{"startOffset":17251,"endOffset":17314,"count":7},{"startOffset":17314,"endOffset":17330,"count":570}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":17334,"endOffset":18154,"count":39},{"startOffset":17413,"endOffset":17420,"count":0},{"startOffset":17442,"endOffset":17616,"count":0},{"startOffset":17658,"endOffset":17860,"count":9},{"startOffset":17860,"endOffset":18152,"count":30}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":18355,"endOffset":18682,"count":9}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":18684,"endOffset":19338,"count":39},{"startOffset":19257,"endOffset":19276,"count":0},{"startOffset":19277,"endOffset":19319,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":19688,"endOffset":19865,"count":481},{"startOffset":19753,"endOffset":19773,"count":474},{"startOffset":19775,"endOffset":19863,"count":474}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19867,"endOffset":21659,"count":474},{"startOffset":21397,"endOffset":21447,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":21930,"endOffset":21996,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":22025,"endOffset":26503,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":26506,"endOffset":27151,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":27182,"endOffset":27883,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":28009,"endOffset":28916,"count":474},{"startOffset":28141,"endOffset":28473,"count":61},{"startOffset":28473,"endOffset":28899,"count":413},{"startOffset":28502,"endOffset":28899,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":29011,"endOffset":29576,"count":145},{"startOffset":29173,"endOffset":29559,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29679,"endOffset":30273,"count":43}],"isBlockCoverage":true},{"functionName":"updateReadableListening","ranges":[{"startOffset":30276,"endOffset":30786,"count":43},{"startOffset":30651,"endOffset":30784,"count":0}],"isBlockCoverage":true},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30788,"endOffset":30876,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":31030,"endOffset":31355,"count":70},{"startOffset":31102,"endOffset":31312,"count":53}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":31358,"endOffset":31508,"count":53}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":31510,"endOffset":31761,"count":53},{"startOffset":31600,"endOffset":31625,"count":10},{"startOffset":31744,"endOffset":31759,"count":9}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":31790,"endOffset":32057,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":32060,"endOffset":32207,"count":92},{"startOffset":32178,"endOffset":32203,"count":99},{"startOffset":32204,"endOffset":32205,"count":7}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":32391,"endOffset":33412,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33457,"endOffset":33509,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":33542,"endOffset":33685,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":33688,"endOffset":33937,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":33939,"endOffset":35015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35234,"endOffset":35623,"count":53}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35629,"endOffset":35759,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35841,"endOffset":35905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35987,"endOffset":36195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36283,"endOffset":36349,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":36430,"endOffset":36512,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36594,"endOffset":36654,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36665,"endOffset":36774,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36850,"endOffset":36904,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36984,"endOffset":37072,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37150,"endOffset":37235,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37304,"endOffset":37388,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37433,"endOffset":37517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37588,"endOffset":37675,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37681,"endOffset":37970,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38045,"endOffset":38133,"count":9},{"startOffset":38119,"endOffset":38126,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38274,"endOffset":38319,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38399,"endOffset":38450,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":38456,"endOffset":38505,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":38811,"endOffset":39373,"count":7},{"startOffset":38894,"endOffset":38906,"count":0},{"startOffset":38947,"endOffset":38974,"count":0},{"startOffset":39081,"endOffset":39109,"count":0},{"startOffset":39183,"endOffset":39239,"count":0},{"startOffset":39269,"endOffset":39356,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":39375,"endOffset":39596,"count":96}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":39598,"endOffset":40518,"count":96},{"startOffset":39816,"endOffset":39837,"count":39},{"startOffset":39839,"endOffset":40516,"count":39},{"startOffset":39919,"endOffset":39952,"count":0},{"startOffset":39954,"endOffset":40008,"count":0},{"startOffset":40240,"endOffset":40445,"count":30},{"startOffset":40408,"endOffset":40436,"count":0}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":40520,"endOffset":40680,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":40698,"endOffset":40767,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":40832,"endOffset":40996,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":41017,"endOffset":41151,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":41171,"endOffset":41305,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":41324,"endOffset":41568,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":126}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1592,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":492,"endOffset":651,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":686,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1042,"endOffset":1590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":56}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":342,"endOffset":529,"count":7},{"startOffset":426,"endOffset":449,"count":0}],"isBlockCoverage":true},{"functionName":"unshift","ranges":[{"startOffset":533,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":695,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":926,"endOffset":994,"count":7}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":998,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1184,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1551,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2009,"endOffset":2049,"count":14}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":2053,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2224,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2932,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3860,"endOffset":4056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":903,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":103},{"startOffset":240,"endOffset":263,"count":9},{"startOffset":264,"endOffset":306,"count":94},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":101},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":832,"count":103},{"startOffset":546,"endOffset":758,"count":12},{"startOffset":590,"endOffset":727,"count":0},{"startOffset":758,"endOffset":831,"count":91}],"isBlockCoverage":true}]},{"scriptId":"412","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":2589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26066,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":185}],"isBlockCoverage":true},{"functionName":"WritableState","ranges":[{"startOffset":2452,"endOffset":6975,"count":56},{"startOffset":2847,"endOffset":2890,"count":0},{"startOffset":3020,"endOffset":3041,"count":47},{"startOffset":3065,"endOffset":3150,"count":47},{"startOffset":3368,"endOffset":3440,"count":47},{"startOffset":3441,"endOffset":3477,"count":9},{"startOffset":4028,"endOffset":4062,"count":47},{"startOffset":4329,"endOffset":4355,"count":47},{"startOffset":6339,"endOffset":6369,"count":47},{"startOffset":6475,"endOffset":6507,"count":47}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6977,"endOffset":7109,"count":65}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7147,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7332,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7404,"endOffset":8932,"count":56},{"startOffset":8045,"endOffset":8099,"count":9},{"startOffset":8105,"endOffset":8134,"count":0},{"startOffset":8220,"endOffset":8719,"count":47},{"startOffset":8273,"endOffset":8301,"count":0},{"startOffset":8355,"endOffset":8385,"count":0},{"startOffset":8440,"endOffset":8472,"count":0},{"startOffset":8525,"endOffset":8553,"count":0},{"startOffset":8610,"endOffset":8646,"count":0},{"startOffset":8678,"endOffset":8715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8782,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9014,"endOffset":9218,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9319,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9390,"endOffset":10734,"count":691},{"startOffset":9515,"endOffset":9577,"count":495},{"startOffset":9577,"endOffset":9813,"count":196},{"startOffset":9610,"endOffset":9643,"count":187},{"startOffset":9643,"endOffset":9759,"count":9},{"startOffset":9718,"endOffset":9759,"count":0},{"startOffset":9800,"endOffset":9809,"count":185},{"startOffset":9837,"endOffset":9882,"count":0},{"startOffset":9948,"endOffset":10081,"count":193},{"startOffset":9991,"endOffset":10075,"count":0},{"startOffset":10081,"endOffset":10384,"count":498},{"startOffset":10150,"endOffset":10384,"count":0},{"startOffset":10421,"endOffset":10470,"count":0},{"startOffset":10497,"endOffset":10547,"count":0},{"startOffset":10560,"endOffset":10651,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":10763,"endOffset":10849,"count":691}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":10878,"endOffset":10924,"count":9}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":10955,"endOffset":11110,"count":12}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11153,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":11668,"endOffset":12681,"count":691},{"startOffset":11766,"endOffset":11769,"count":0},{"startOffset":11988,"endOffset":12011,"count":0},{"startOffset":12049,"endOffset":12065,"count":679},{"startOffset":12066,"endOffset":12087,"count":679},{"startOffset":12089,"endOffset":12321,"count":12},{"startOffset":12172,"endOffset":12196,"count":9},{"startOffset":12198,"endOffset":12237,"count":9},{"startOffset":12281,"endOffset":12317,"count":9},{"startOffset":12321,"endOffset":12512,"count":679}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":12683,"endOffset":13061,"count":9},{"startOffset":12869,"endOffset":12918,"count":0},{"startOffset":12942,"endOffset":12979,"count":3},{"startOffset":12979,"endOffset":13037,"count":6}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":13063,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":13450,"endOffset":15089,"count":688},{"startOffset":13608,"endOffset":13682,"count":0},{"startOffset":13800,"endOffset":14356,"count":0},{"startOffset":14417,"endOffset":14458,"count":8},{"startOffset":14474,"endOffset":15030,"count":687},{"startOffset":14773,"endOffset":14820,"count":46},{"startOffset":14822,"endOffset":14873,"count":45},{"startOffset":14873,"endOffset":15024,"count":642},{"startOffset":15030,"endOffset":15083,"count":1}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15091,"endOffset":15230,"count":642}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15232,"endOffset":15611,"count":643},{"startOffset":15314,"endOffset":15334,"count":613},{"startOffset":15335,"endOffset":15356,"count":613},{"startOffset":15357,"endOffset":15379,"count":613},{"startOffset":15398,"endOffset":15458,"count":0},{"startOffset":15482,"endOffset":15524,"count":688},{"startOffset":15549,"endOffset":15578,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":15683,"endOffset":16240,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16306,"endOffset":17800,"count":20},{"startOffset":16395,"endOffset":16419,"count":12},{"startOffset":16420,"endOffset":16447,"count":12},{"startOffset":16449,"endOffset":16466,"count":8},{"startOffset":16466,"endOffset":16607,"count":12},{"startOffset":16607,"endOffset":16624,"count":3},{"startOffset":16624,"endOffset":16710,"count":9},{"startOffset":16710,"endOffset":16727,"count":3},{"startOffset":16729,"endOffset":17292,"count":3},{"startOffset":16810,"endOffset":16815,"count":0},{"startOffset":17087,"endOffset":17097,"count":0},{"startOffset":17098,"endOffset":17114,"count":0},{"startOffset":17292,"endOffset":17764,"count":6},{"startOffset":17423,"endOffset":17426,"count":0},{"startOffset":17545,"endOffset":17562,"count":0},{"startOffset":17630,"endOffset":17760,"count":0},{"startOffset":17764,"endOffset":17799,"count":9}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":16818,"endOffset":16927,"count":3},{"startOffset":16877,"endOffset":16921,"count":6}],"isBlockCoverage":true},{"functionName":"Writable._write","ranges":[{"startOffset":17830,"endOffset":17999,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18063,"endOffset":19448,"count":30},{"startOffset":18168,"endOffset":18228,"count":0},{"startOffset":18270,"endOffset":18315,"count":0},{"startOffset":18374,"endOffset":18481,"count":0},{"startOffset":18530,"endOffset":18576,"count":0},{"startOffset":18589,"endOffset":18615,"count":0},{"startOffset":19066,"endOffset":19222,"count":0},{"startOffset":19256,"endOffset":19430,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":19451,"endOffset":19791,"count":703},{"startOffset":19503,"endOffset":19532,"count":90},{"startOffset":19533,"endOffset":19563,"count":90},{"startOffset":19564,"endOffset":19595,"count":90},{"startOffset":19596,"endOffset":19623,"count":90},{"startOffset":19624,"endOffset":19664,"count":90},{"startOffset":19665,"endOffset":19693,"count":90},{"startOffset":19694,"endOffset":19721,"count":90},{"startOffset":19722,"endOffset":19754,"count":90},{"startOffset":19755,"endOffset":19787,"count":90}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":19793,"endOffset":20739,"count":30},{"startOffset":20678,"endOffset":20714,"count":0}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":19854,"endOffset":20592,"count":30},{"startOffset":19895,"endOffset":19978,"count":0},{"startOffset":20035,"endOffset":20253,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":20741,"endOffset":21046,"count":60},{"startOffset":20825,"endOffset":21044,"count":30},{"startOffset":20963,"endOffset":21040,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":21048,"endOffset":21547,"count":673},{"startOffset":21117,"endOffset":21545,"count":60},{"startOffset":21180,"endOffset":21541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21252,"endOffset":21414,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":21549,"endOffset":22279,"count":30},{"startOffset":21740,"endOffset":21777,"count":0},{"startOffset":22242,"endOffset":22273,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22364,"endOffset":22448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22496,"endOffset":22583,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22589,"endOffset":22771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22818,"endOffset":23210,"count":110},{"startOffset":23192,"endOffset":23203,"count":80}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":23216,"endOffset":23350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23405,"endOffset":23491,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23548,"endOffset":23636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23689,"endOffset":23771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23823,"endOffset":23907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23963,"endOffset":24121,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24181,"endOffset":24265,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24318,"endOffset":24398,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24451,"endOffset":24528,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":24597,"endOffset":24681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24763,"endOffset":24969,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":25047,"endOffset":25344,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":25432,"endOffset":25464,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":25515,"endOffset":25553,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":25618,"endOffset":25782,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":25803,"endOffset":25937,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":25957,"endOffset":26064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5747,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5749,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6195,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6348,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6475,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7049,"endOffset":7174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/unWindows.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"unWindows","ranges":[{"startOffset":170,"endOffset":231,"count":4}],"isBlockCoverage":true}]},{"scriptId":"418","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2996,"count":1}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":748,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"loadModulesInIsolation","ranges":[{"startOffset":1993,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":2658,"endOffset":2994,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26009,"count":1}],"isBlockCoverage":false},{"functionName":"newModuleMap","ranges":[{"startOffset":987,"endOffset":1104,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1254,"endOffset":1376,"count":18}],"isBlockCoverage":true},{"functionName":"nextHookFactory","ranges":[{"startOffset":3284,"endOffset":5366,"count":52},{"startOffset":3885,"endOffset":4125,"count":0}],"isBlockCoverage":true},{"functionName":"chainAdvancedTooFar","ranges":[{"startOffset":4203,"endOffset":4371,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectDefineProperty.__proto__","ranges":[{"startOffset":4413,"endOffset":5300,"count":52},{"startOffset":5241,"endOffset":5272,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5589,"endOffset":25926,"count":1}],"isBlockCoverage":false},{"functionName":"ESMLoader","ranges":[{"startOffset":6961,"endOffset":7217,"count":1},{"startOffset":7037,"endOffset":7097,"count":0},{"startOffset":7156,"endOffset":7213,"count":0}],"isBlockCoverage":true},{"functionName":"pluckHooks","ranges":[{"startOffset":7311,"endOffset":8593,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomLoaders","ranges":[{"startOffset":8870,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":9673,"endOffset":10570,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":11305,"endOffset":12238,"count":35},{"startOffset":11521,"endOffset":11777,"count":0},{"startOffset":12042,"endOffset":12104,"count":0},{"startOffset":12133,"endOffset":12217,"count":17}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":12876,"endOffset":13934,"count":17},{"startOffset":13467,"endOffset":13507,"count":0},{"startOffset":13562,"endOffset":13577,"count":0},{"startOffset":13579,"endOffset":13633,"count":0}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":12964,"endOffset":13409,"count":17},{"startOffset":13239,"endOffset":13319,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":14644,"endOffset":15976,"count":3},{"startOffset":15752,"endOffset":15975,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15562,"endOffset":15580,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15596,"endOffset":15633,"count":3}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":16466,"endOffset":19714,"count":17},{"startOffset":18070,"endOffset":18101,"count":0},{"startOffset":18131,"endOffset":18154,"count":0},{"startOffset":18156,"endOffset":18227,"count":0},{"startOffset":18363,"endOffset":18395,"count":0},{"startOffset":18531,"endOffset":18611,"count":0},{"startOffset":18665,"endOffset":18855,"count":0},{"startOffset":18881,"endOffset":19104,"count":0},{"startOffset":19142,"endOffset":19297,"count":0},{"startOffset":19329,"endOffset":19364,"count":10},{"startOffset":19365,"endOffset":19399,"count":10},{"startOffset":19400,"endOffset":19435,"count":10},{"startOffset":19442,"endOffset":19619,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":16745,"endOffset":17498,"count":17},{"startOffset":16823,"endOffset":17077,"count":0},{"startOffset":17243,"endOffset":17415,"count":0}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":17527,"endOffset":17764,"count":34},{"startOffset":17617,"endOffset":17758,"count":0}],"isBlockCoverage":true},{"functionName":"preload","ranges":[{"startOffset":19718,"endOffset":22436,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":22440,"endOffset":22529,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23210,"endOffset":25924,"count":35},{"startOffset":23398,"endOffset":23432,"count":0},{"startOffset":23439,"endOffset":23560,"count":0},{"startOffset":24799,"endOffset":24830,"count":0},{"startOffset":24860,"endOffset":24883,"count":0},{"startOffset":24885,"endOffset":24956,"count":0},{"startOffset":25095,"endOffset":25243,"count":0},{"startOffset":25278,"endOffset":25531,"count":0},{"startOffset":25635,"endOffset":25851,"count":17},{"startOffset":25679,"endOffset":25845,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgs","ranges":[{"startOffset":23926,"endOffset":24195,"count":35}],"isBlockCoverage":true},{"functionName":"validateOutput","ranges":[{"startOffset":24224,"endOffset":24461,"count":70},{"startOffset":24314,"endOffset":24455,"count":0}],"isBlockCoverage":true}]},{"scriptId":"420","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37022,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2067,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":2695,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":3536,"endOffset":4634,"count":2},{"startOffset":3698,"endOffset":4632,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":4767,"endOffset":4833,"count":61},{"startOffset":4819,"endOffset":4833,"count":18}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":4895,"endOffset":4993,"count":10},{"startOffset":4982,"endOffset":4990,"count":0}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5381,"endOffset":7220,"count":10},{"startOffset":5500,"endOffset":6729,"count":8},{"startOffset":5720,"endOffset":6705,"count":0},{"startOffset":6729,"endOffset":6795,"count":2},{"startOffset":6795,"endOffset":6979,"count":0},{"startOffset":6979,"endOffset":7097,"count":2},{"startOffset":7097,"endOffset":7219,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeResolution","ranges":[{"startOffset":7400,"endOffset":8611,"count":32},{"startOffset":7540,"endOffset":7683,"count":0},{"startOffset":7789,"endOffset":7825,"count":0},{"startOffset":7862,"endOffset":7989,"count":0},{"startOffset":8016,"endOffset":8271,"count":0},{"startOffset":8516,"endOffset":8521,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":8723,"endOffset":8934,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":9044,"endOffset":9239,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":9406,"endOffset":9789,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":9791,"endOffset":10169,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":10892,"endOffset":13684,"count":14},{"startOffset":11061,"endOffset":11072,"count":0},{"startOffset":11073,"endOffset":11109,"count":0},{"startOffset":11115,"endOffset":11189,"count":0},{"startOffset":11239,"endOffset":11851,"count":0},{"startOffset":11943,"endOffset":12553,"count":0},{"startOffset":12776,"endOffset":12850,"count":0},{"startOffset":12890,"endOffset":13683,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11626,"endOffset":11639,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12152,"endOffset":12165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12298,"endOffset":12311,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13025,"endOffset":13038,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13265,"endOffset":13278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13618,"endOffset":13631,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":13739,"endOffset":13879,"count":34},{"startOffset":13831,"endOffset":13876,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":14143,"endOffset":16391,"count":38},{"startOffset":14336,"endOffset":14490,"count":14},{"startOffset":14490,"endOffset":16274,"count":24},{"startOffset":14522,"endOffset":15360,"count":5},{"startOffset":14553,"endOffset":14579,"count":0},{"startOffset":14899,"endOffset":15047,"count":0},{"startOffset":15087,"endOffset":15114,"count":0},{"startOffset":15149,"endOffset":15206,"count":0},{"startOffset":15240,"endOffset":15302,"count":0},{"startOffset":15310,"endOffset":15360,"count":0},{"startOffset":15360,"endOffset":16274,"count":19},{"startOffset":15513,"endOffset":15741,"count":34},{"startOffset":15571,"endOffset":15735,"count":0},{"startOffset":15784,"endOffset":16199,"count":33},{"startOffset":15841,"endOffset":15863,"count":21},{"startOffset":15865,"endOffset":16193,"count":19},{"startOffset":16146,"endOffset":16155,"count":0},{"startOffset":16199,"endOffset":16274,"count":0},{"startOffset":16274,"endOffset":16390,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":16576,"endOffset":17511,"count":14},{"startOffset":16708,"endOffset":16720,"count":0},{"startOffset":16776,"endOffset":16789,"count":0},{"startOffset":16929,"endOffset":17480,"count":32},{"startOffset":17039,"endOffset":17096,"count":14},{"startOffset":17096,"endOffset":17476,"count":18},{"startOffset":17152,"endOffset":17476,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":17721,"endOffset":20280,"count":14},{"startOffset":17933,"endOffset":17960,"count":1},{"startOffset":18362,"endOffset":18436,"count":0},{"startOffset":18467,"endOffset":20279,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":20282,"endOffset":20813,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":20942,"endOffset":23399,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":23504,"endOffset":23617,"count":34}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":23779,"endOffset":24831,"count":11},{"startOffset":23970,"endOffset":24198,"count":0},{"startOffset":24260,"endOffset":24312,"count":0},{"startOffset":24489,"endOffset":24514,"count":0},{"startOffset":24541,"endOffset":24660,"count":0},{"startOffset":24721,"endOffset":24774,"count":0}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":24993,"endOffset":27085,"count":14},{"startOffset":25100,"endOffset":25160,"count":3},{"startOffset":25162,"endOffset":25208,"count":3},{"startOffset":25208,"endOffset":25715,"count":11},{"startOffset":25512,"endOffset":25558,"count":0},{"startOffset":25559,"endOffset":25592,"count":0},{"startOffset":25594,"endOffset":25711,"count":0},{"startOffset":25715,"endOffset":25886,"count":11},{"startOffset":25886,"endOffset":26876,"count":29},{"startOffset":26068,"endOffset":26345,"count":18},{"startOffset":26145,"endOffset":26182,"count":0},{"startOffset":26345,"endOffset":26491,"count":11},{"startOffset":26491,"endOffset":26524,"count":1},{"startOffset":26526,"endOffset":26643,"count":1},{"startOffset":26643,"endOffset":26785,"count":10},{"startOffset":26785,"endOffset":26876,"count":0},{"startOffset":26876,"endOffset":27084,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":27146,"endOffset":27256,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":27258,"endOffset":27529,"count":70},{"startOffset":27328,"endOffset":27511,"count":36},{"startOffset":27386,"endOffset":27398,"count":8},{"startOffset":27398,"endOffset":27507,"count":28},{"startOffset":27511,"endOffset":27528,"count":34}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":27531,"endOffset":27714,"count":70},{"startOffset":27617,"endOffset":27630,"count":0},{"startOffset":27659,"endOffset":27671,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":27907,"endOffset":28698,"count":35},{"startOffset":28233,"endOffset":28279,"count":18},{"startOffset":28279,"endOffset":28569,"count":17},{"startOffset":28324,"endOffset":28396,"count":0},{"startOffset":28457,"endOffset":28565,"count":14},{"startOffset":28607,"endOffset":28633,"count":3},{"startOffset":28633,"endOffset":28697,"count":32}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":28844,"endOffset":30301,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":30363,"endOffset":31558,"count":35},{"startOffset":30564,"endOffset":31552,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLProtocol","ranges":[{"startOffset":31560,"endOffset":31758,"count":35},{"startOffset":31637,"endOffset":31664,"count":3},{"startOffset":31665,"endOffset":31698,"count":3},{"startOffset":31700,"endOffset":31756,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":31760,"endOffset":32275,"count":35},{"startOffset":31853,"endOffset":31887,"count":21},{"startOffset":31888,"endOffset":31922,"count":0},{"startOffset":31923,"endOffset":32066,"count":0},{"startOffset":32071,"endOffset":32273,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":32277,"endOffset":36271,"count":35},{"startOffset":32402,"endOffset":32412,"count":0},{"startOffset":32414,"endOffset":33223,"count":0},{"startOffset":33327,"endOffset":33366,"count":0},{"startOffset":33454,"endOffset":33513,"count":18},{"startOffset":33513,"endOffset":33561,"count":17},{"startOffset":33561,"endOffset":33746,"count":21},{"startOffset":33636,"endOffset":33738,"count":0},{"startOffset":33753,"endOffset":33812,"count":0},{"startOffset":33817,"endOffset":33852,"count":14},{"startOffset":34186,"endOffset":34205,"count":0},{"startOffset":34270,"endOffset":34300,"count":21},{"startOffset":34302,"endOffset":34345,"count":0},{"startOffset":34471,"endOffset":34992,"count":0},{"startOffset":35148,"endOffset":35170,"count":0},{"startOffset":35202,"endOffset":36006,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":36615,"endOffset":37018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3630,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":808,"endOffset":2394,"count":120},{"startOffset":936,"endOffset":962,"count":105},{"startOffset":962,"endOffset":1122,"count":15},{"startOffset":1122,"endOffset":1397,"count":8},{"startOffset":1397,"endOffset":1467,"count":7},{"startOffset":1467,"endOffset":1647,"count":0},{"startOffset":1647,"endOffset":1830,"count":7},{"startOffset":1830,"endOffset":1851,"count":1},{"startOffset":1852,"endOffset":1863,"count":6},{"startOffset":1899,"endOffset":1918,"count":0},{"startOffset":1920,"endOffset":1983,"count":7},{"startOffset":1983,"endOffset":2010,"count":2},{"startOffset":2010,"endOffset":2043,"count":7},{"startOffset":2043,"endOffset":2070,"count":0},{"startOffset":2070,"endOffset":2148,"count":7},{"startOffset":2148,"endOffset":2170,"count":6},{"startOffset":2172,"endOffset":2196,"count":6},{"startOffset":2196,"endOffset":2393,"count":7}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":2467,"endOffset":3560,"count":45},{"startOffset":2585,"endOffset":3231,"count":109},{"startOffset":2719,"endOffset":2739,"count":0},{"startOffset":2855,"endOffset":2890,"count":45},{"startOffset":2890,"endOffset":3207,"count":64},{"startOffset":3207,"endOffset":3227,"count":0},{"startOffset":3231,"endOffset":3559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"422","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3897,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":885,"endOffset":916,"count":3}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":981,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":1321,"endOffset":2531,"count":34},{"startOffset":1527,"endOffset":1537,"count":21},{"startOffset":1538,"endOffset":1550,"count":13},{"startOffset":1555,"endOffset":1823,"count":0},{"startOffset":1825,"endOffset":2530,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":2667,"endOffset":3012,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3171,"endOffset":3415,"count":37},{"startOffset":3334,"endOffset":3346,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":3574,"endOffset":3798,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":854,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":468,"endOffset":792,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2791,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":829,"endOffset":2086,"count":10},{"startOffset":1103,"endOffset":1950,"count":0},{"startOffset":1963,"endOffset":1973,"count":0},{"startOffset":1975,"endOffset":2033,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":2198,"endOffset":2752,"count":17},{"startOffset":2376,"endOffset":2432,"count":0},{"startOffset":2520,"endOffset":2548,"count":16},{"startOffset":2553,"endOffset":2577,"count":7},{"startOffset":2577,"endOffset":2671,"count":10}],"isBlockCoverage":true}]},{"scriptId":"425","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1279,"endOffset":1317,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1738,"endOffset":2900,"count":17},{"startOffset":1920,"endOffset":2065,"count":0},{"startOffset":2330,"endOffset":2390,"count":0},{"startOffset":2396,"endOffset":2504,"count":0},{"startOffset":2510,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3132,"endOffset":3546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":981,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":289,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":729,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1434,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":185,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"ModuleMap","ranges":[{"startOffset":429,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":506,"endOffset":649,"count":35},{"startOffset":636,"endOffset":644,"count":18}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":652,"endOffset":1243,"count":17},{"startOffset":871,"endOffset":907,"count":0},{"startOffset":909,"endOffset":979,"count":0},{"startOffset":1063,"endOffset":1069,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1246,"endOffset":1403,"count":52},{"startOffset":1376,"endOffset":1384,"count":18}],"isBlockCoverage":true}]},{"scriptId":"428","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10799,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":381,"endOffset":493,"count":20},{"startOffset":427,"endOffset":441,"count":19},{"startOffset":441,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":931,"endOffset":956,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1437,"endOffset":1835,"count":4},{"startOffset":1511,"endOffset":1586,"count":0},{"startOffset":1744,"endOffset":1829,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":1969,"endOffset":2390,"count":20},{"startOffset":2046,"endOffset":2073,"count":10},{"startOffset":2075,"endOffset":2092,"count":0},{"startOffset":2186,"endOffset":2211,"count":0},{"startOffset":2230,"endOffset":2309,"count":0},{"startOffset":2310,"endOffset":2314,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":2392,"endOffset":2666,"count":10},{"startOffset":2451,"endOffset":2463,"count":0},{"startOffset":2603,"endOffset":2622,"count":1},{"startOffset":2623,"endOffset":2632,"count":9}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2668,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2815,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3035,"endOffset":3547,"count":10}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":3436,"endOffset":3492,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3714,"endOffset":4253,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4384,"endOffset":5822,"count":6},{"startOffset":4626,"endOffset":4684,"count":0},{"startOffset":4703,"endOffset":4724,"count":4},{"startOffset":4849,"endOffset":4871,"count":1},{"startOffset":4872,"endOffset":4901,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4962,"endOffset":5818,"count":6},{"startOffset":5081,"endOffset":5195,"count":1},{"startOffset":5195,"endOffset":5383,"count":5},{"startOffset":5287,"endOffset":5377,"count":0},{"startOffset":5427,"endOffset":5774,"count":48},{"startOffset":5538,"endOffset":5547,"count":1},{"startOffset":5547,"endOffset":5671,"count":47},{"startOffset":5671,"endOffset":5727,"count":0},{"startOffset":5727,"endOffset":5774,"count":47}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5826,"endOffset":7346,"count":9},{"startOffset":5929,"endOffset":6054,"count":0},{"startOffset":6353,"endOffset":6401,"count":0},{"startOffset":6483,"endOffset":6488,"count":0},{"startOffset":6496,"endOffset":6545,"count":0},{"startOffset":6729,"endOffset":6826,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6862,"endOffset":7307,"count":3},{"startOffset":6975,"endOffset":7002,"count":0},{"startOffset":7061,"endOffset":7078,"count":0},{"startOffset":7079,"endOffset":7109,"count":0},{"startOffset":7275,"endOffset":7297,"count":28}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":7470,"endOffset":7853,"count":1},{"startOffset":7726,"endOffset":7778,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":7917,"endOffset":9794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9860,"endOffset":10796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/jasmine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6550,"count":1}],"isBlockCoverage":true},{"functionName":"Jasmine","ranges":[{"startOffset":1309,"endOffset":2222,"count":1},{"startOffset":1354,"endOffset":1359,"count":0},{"startOffset":1489,"endOffset":1550,"count":0}],"isBlockCoverage":true},{"functionName":"Jasmine.coreVersion","ranges":[{"startOffset":2097,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"randomizeTests","ranges":[{"startOffset":2387,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"seed","ranges":[{"startOffset":2579,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"addReporter","ranges":[{"startOffset":2675,"endOffset":2765,"count":1}],"isBlockCoverage":true},{"functionName":"clearReporters","ranges":[{"startOffset":2805,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"provideFallbackReporter","ranges":[{"startOffset":3106,"endOffset":3193,"count":0}],"isBlockCoverage":false},{"functionName":"addMatchers","ranges":[{"startOffset":3530,"endOffset":3593,"count":0}],"isBlockCoverage":false},{"functionName":"loadSpecs","ranges":[{"startOffset":3597,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"loadHelpers","ranges":[{"startOffset":3667,"endOffset":3737,"count":1}],"isBlockCoverage":true},{"functionName":"_loadFiles","ranges":[{"startOffset":3741,"endOffset":3844,"count":3}],"isBlockCoverage":true},{"functionName":"loadRequires","ranges":[{"startOffset":3848,"endOffset":3916,"count":1}],"isBlockCoverage":true},{"functionName":"configureEnv","ranges":[{"startOffset":3920,"endOffset":3984,"count":2}],"isBlockCoverage":true},{"functionName":"stopSpecOnExpectationFailure","ranges":[{"startOffset":4227,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"stopOnSpecFailure","ranges":[{"startOffset":4579,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":5241,"endOffset":6446,"count":1},{"startOffset":5560,"endOffset":5786,"count":0},{"startOffset":5823,"endOffset":5922,"count":0},{"startOffset":6415,"endOffset":6445,"count":0}],"isBlockCoverage":true},{"functionName":"specFilter","ranges":[{"startOffset":5694,"endOffset":5777,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5973,"endOffset":5991,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6100,"endOffset":6203,"count":1}],"isBlockCoverage":true}]},{"scriptId":"430","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/exit_handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"ExitHandler","ranges":[{"startOffset":22,"endOffset":74,"count":1}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":78,"endOffset":131,"count":1}],"isBlockCoverage":true},{"functionName":"uninstall","ranges":[{"startOffset":135,"endOffset":202,"count":1}],"isBlockCoverage":true}]},{"scriptId":"431","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/filters/console_spec_filter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"ConsoleSpecFilter","ranges":[{"startOffset":47,"endOffset":277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/runner_base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16437,"count":1}],"isBlockCoverage":true},{"functionName":"RunnerBase","ranges":[{"startOffset":792,"endOffset":1534,"count":1},{"startOffset":967,"endOffset":1032,"count":0}],"isBlockCoverage":true},{"functionName":"showColors","ranges":[{"startOffset":1703,"endOffset":1758,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysListPendingSpecs","ranges":[{"startOffset":1958,"endOffset":2035,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfigFile","ranges":[{"startOffset":2368,"endOffset":3263,"count":1},{"startOffset":2496,"endOffset":3259,"count":0}],"isBlockCoverage":true},{"functionName":"loadSpecificConfigFile_","ranges":[{"startOffset":3267,"endOffset":3476,"count":1}],"isBlockCoverage":true},{"functionName":"loadConfig","ranges":[{"startOffset":3623,"endOffset":10900,"count":1},{"startOffset":3953,"endOffset":3968,"count":0},{"startOffset":4212,"endOffset":4299,"count":0},{"startOffset":4554,"endOffset":4645,"count":0},{"startOffset":4877,"endOffset":4946,"count":0},{"startOffset":5218,"endOffset":5291,"count":0},{"startOffset":5481,"endOffset":5528,"count":0},{"startOffset":5580,"endOffset":5653,"count":0},{"startOffset":6119,"endOffset":6408,"count":0},{"startOffset":7099,"endOffset":7147,"count":0},{"startOffset":8103,"endOffset":8325,"count":0},{"startOffset":9209,"endOffset":9262,"count":0},{"startOffset":9537,"endOffset":9604,"count":0},{"startOffset":10480,"endOffset":10539,"count":0},{"startOffset":10823,"endOffset":10896,"count":0}],"isBlockCoverage":true},{"functionName":"addSpecFile","ranges":[{"startOffset":11108,"endOffset":11170,"count":0}],"isBlockCoverage":false},{"functionName":"addHelperFile","ranges":[{"startOffset":11382,"endOffset":11448,"count":0}],"isBlockCoverage":false},{"functionName":"addRequires","ranges":[{"startOffset":11452,"endOffset":11592,"count":0}],"isBlockCoverage":false},{"functionName":"configureDefaultReporter","ranges":[{"startOffset":11806,"endOffset":12141,"count":1},{"startOffset":12046,"endOffset":12052,"count":0}],"isBlockCoverage":true},{"functionName":"options.print","ranges":[{"startOffset":11879,"endOffset":11961,"count":33}],"isBlockCoverage":true},{"functionName":"withinGlobalSetup_","ranges":[{"startOffset":12145,"endOffset":12652,"count":1},{"startOffset":12357,"endOffset":12642,"count":0}],"isBlockCoverage":true},{"functionName":"runGlobalSetup_","ranges":[{"startOffset":12656,"endOffset":12847,"count":1},{"startOffset":12709,"endOffset":12843,"count":0}],"isBlockCoverage":true},{"functionName":"runGlobalTeardown_","ranges":[{"startOffset":12851,"endOffset":13057,"count":1},{"startOffset":12910,"endOffset":13053,"count":0}],"isBlockCoverage":true},{"functionName":"flushOutput","ranges":[{"startOffset":13061,"endOffset":13586,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13459,"endOffset":13546,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13496,"endOffset":13538,"count":2}],"isBlockCoverage":true},{"functionName":"addFiles","ranges":[{"startOffset":14880,"endOffset":16127,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14915,"endOffset":16124,"count":2}],"isBlockCoverage":true},{"functionName":"files.reduce.includeFiles","ranges":[{"startOffset":15021,"endOffset":15344,"count":2},{"startOffset":15114,"endOffset":15157,"count":0},{"startOffset":15246,"endOffset":15250,"count":0},{"startOffset":15315,"endOffset":15323,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15476,"endOffset":16118,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15595,"endOffset":15760,"count":3},{"startOffset":15643,"endOffset":15678,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15778,"endOffset":15859,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16050,"endOffset":16110,"count":3}],"isBlockCoverage":true},{"functionName":"RunnerBase.exitCodeForStatus","ranges":[{"startOffset":16160,"endOffset":16405,"count":1},{"startOffset":16238,"endOffset":16272,"count":0},{"startOffset":16277,"endOffset":16307,"count":0},{"startOffset":16312,"endOffset":16399,"count":0}],"isBlockCoverage":true}]},{"scriptId":"433","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12934,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1877,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2664,"endOffset":3455,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3781,"endOffset":4605,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":4933,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5380,"endOffset":9360,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9380,"endOffset":12896,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6228,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5800,"endOffset":5970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"node:internal/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16693,"count":1}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1208,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1335,"endOffset":1460,"count":10},{"startOffset":1416,"endOffset":1458,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8206,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8706,"endOffset":8885,"count":1},{"startOffset":8817,"endOffset":8884,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":8956,"endOffset":9002,"count":3}],"isBlockCoverage":true},{"functionName":"get encoding","ranges":[{"startOffset":9006,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9077,"endOffset":9169,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9173,"endOffset":9483,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9487,"endOffset":9883,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10255,"endOffset":12221,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10393,"endOffset":11330,"count":1},{"startOffset":10703,"endOffset":10750,"count":0},{"startOffset":10834,"endOffset":10857,"count":0},{"startOffset":10898,"endOffset":10926,"count":0},{"startOffset":11281,"endOffset":11324,"count":0}],"isBlockCoverage":true},{"functionName":"#prepareConverter","ranges":[{"startOffset":11336,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11607,"endOffset":12192,"count":10},{"startOffset":11842,"endOffset":12191,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":12223,"endOffset":15058,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":15155,"endOffset":15230,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":15235,"endOffset":15356,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":15361,"endOffset":15510,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":15515,"endOffset":16098,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10569,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":866,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2641,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3059,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3288,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3530,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8986,"endOffset":10365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2860,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":508,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":662,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":800,"endOffset":904,"count":2}],"isBlockCoverage":true},{"functionName":"glob_","ranges":[{"startOffset":934,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"globIterateSync","ranges":[{"startOffset":1038,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":1196,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1859,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1974,"endOffset":2018,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2125,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2284,"endOffset":2331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40340,"count":1},{"startOffset":3263,"endOffset":3272,"count":0},{"startOffset":3407,"endOffset":3423,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":729,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":1166,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":1247,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":1309,"endOffset":1421,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":1455,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1607,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1680,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1780,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1874,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1939,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":2057,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":2277,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":2494,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2644,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2796,"endOffset":2894,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2923,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":4110,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":4269,"endOffset":4307,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":4326,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":6266,"endOffset":6670,"count":2},{"startOffset":6616,"endOffset":6669,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":7419,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":7570,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7956,"endOffset":8008,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8010,"endOffset":39593,"count":2}],"isBlockCoverage":true},{"functionName":"Minimatch","ranges":[{"startOffset":8290,"endOffset":9487,"count":2},{"startOffset":8421,"endOffset":8426,"count":0},{"startOffset":8533,"endOffset":8551,"count":0},{"startOffset":8764,"endOffset":8836,"count":0},{"startOffset":9260,"endOffset":9288,"count":0},{"startOffset":9325,"endOffset":9339,"count":0}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":9492,"endOffset":9819,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":9824,"endOffset":9839,"count":8}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":9844,"endOffset":12674,"count":2},{"startOffset":10014,"endOffset":10042,"count":0},{"startOffset":10044,"endOffset":10108,"count":0},{"startOffset":10131,"endOffset":10193,"count":0},{"startOffset":10384,"endOffset":10457,"count":0},{"startOffset":12238,"endOffset":12624,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":10411,"endOffset":10446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11087,"endOffset":11110,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11284,"endOffset":11992,"count":2},{"startOffset":11331,"endOffset":11357,"count":0},{"startOffset":11359,"endOffset":11934,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11749,"endOffset":11769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11879,"endOffset":11899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11960,"endOffset":11980,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12127,"endOffset":12155,"count":2}],"isBlockCoverage":true},{"functionName":"preprocess","ranges":[{"startOffset":12975,"endOffset":13984,"count":2},{"startOffset":13102,"endOffset":13387,"count":0},{"startOffset":13685,"endOffset":13952,"count":0}],"isBlockCoverage":true},{"functionName":"adjascentGlobstarOptimize","ranges":[{"startOffset":14034,"endOffset":14474,"count":0}],"isBlockCoverage":false},{"functionName":"levelOneOptimize","ranges":[{"startOffset":14534,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"levelTwoFileOptimize","ranges":[{"startOffset":15194,"endOffset":16682,"count":0}],"isBlockCoverage":false},{"functionName":"firstPhasePreProcess","ranges":[{"startOffset":17513,"endOffset":20750,"count":2},{"startOffset":17949,"endOffset":18068,"count":0},{"startOffset":18235,"endOffset":18314,"count":0},{"startOffset":18524,"endOffset":18588,"count":0},{"startOffset":18589,"endOffset":18626,"count":0},{"startOffset":18627,"endOffset":18657,"count":0},{"startOffset":18658,"endOffset":18695,"count":0},{"startOffset":18696,"endOffset":18734,"count":0},{"startOffset":18736,"endOffset":19115,"count":0},{"startOffset":19284,"endOffset":19724,"count":1},{"startOffset":19436,"endOffset":19454,"count":0},{"startOffset":19484,"endOffset":19493,"count":0},{"startOffset":19545,"endOffset":19702,"count":0},{"startOffset":19766,"endOffset":19811,"count":0},{"startOffset":19812,"endOffset":19876,"count":0},{"startOffset":19878,"endOffset":19983,"count":0},{"startOffset":20151,"endOffset":20672,"count":0}],"isBlockCoverage":true},{"functionName":"secondPhasePreProcess","ranges":[{"startOffset":21092,"endOffset":21567,"count":2},{"startOffset":21182,"endOffset":21511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21544,"endOffset":21559,"count":2}],"isBlockCoverage":true},{"functionName":"partsMatch","ranges":[{"startOffset":21572,"endOffset":23149,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":23154,"endOffset":23578,"count":2},{"startOffset":23216,"endOffset":23384,"count":0},{"startOffset":23391,"endOffset":23577,"count":0}],"isBlockCoverage":true},{"functionName":"matchOne","ranges":[{"startOffset":23821,"endOffset":31955,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":31960,"endOffset":32050,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":32055,"endOffset":33648,"count":5},{"startOffset":32241,"endOffset":32265,"count":2},{"startOffset":32265,"endOffset":32306,"count":3},{"startOffset":32306,"endOffset":32316,"count":0},{"startOffset":32316,"endOffset":32533,"count":3},{"startOffset":32533,"endOffset":32605,"count":0},{"startOffset":32605,"endOffset":33493,"count":3},{"startOffset":32658,"endOffset":32942,"count":0},{"startOffset":32991,"endOffset":33256,"count":0},{"startOffset":33310,"endOffset":33396,"count":0},{"startOffset":33446,"endOffset":33493,"count":0},{"startOffset":33493,"endOffset":33597,"count":3},{"startOffset":33597,"endOffset":33636,"count":0},{"startOffset":33637,"endOffset":33641,"count":3}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":33653,"endOffset":37010,"count":0}],"isBlockCoverage":false},{"functionName":"slashSplit","ranges":[{"startOffset":37015,"endOffset":37584,"count":2},{"startOffset":37309,"endOffset":37353,"count":0},{"startOffset":37386,"endOffset":37410,"count":0},{"startOffset":37412,"endOffset":37518,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":37589,"endOffset":39500,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":39512,"endOffset":39591,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39746,"endOffset":39782,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39895,"endOffset":39937,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40056,"endOffset":40102,"count":1}],"isBlockCoverage":true}]},{"scriptId":"439","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4992,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":179,"endOffset":393,"count":9},{"startOffset":231,"endOffset":286,"count":0},{"startOffset":332,"endOffset":391,"count":0}],"isBlockCoverage":true}]},{"scriptId":"442","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22766,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":316,"endOffset":335,"count":29}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":1090,"endOffset":1142,"count":20}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1541,"endOffset":22715,"count":7}],"isBlockCoverage":true},{"functionName":"AST","ranges":[{"startOffset":1848,"endOffset":2417,"count":7},{"startOffset":1989,"endOffset":2011,"count":2},{"startOffset":2077,"endOffset":2097,"count":4},{"startOffset":2098,"endOffset":2104,"count":3},{"startOffset":2150,"endOffset":2159,"count":3},{"startOffset":2160,"endOffset":2181,"count":4},{"startOffset":2224,"endOffset":2228,"count":3},{"startOffset":2229,"endOffset":2247,"count":4},{"startOffset":2274,"endOffset":2300,"count":0},{"startOffset":2314,"endOffset":2336,"count":0},{"startOffset":2378,"endOffset":2406,"count":4},{"startOffset":2407,"endOffset":2410,"count":3}],"isBlockCoverage":true},{"functionName":"get hasMagic","ranges":[{"startOffset":2422,"endOffset":2892,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2929,"endOffset":3286,"count":10},{"startOffset":2996,"endOffset":3018,"count":3},{"startOffset":3018,"endOffset":3043,"count":7},{"startOffset":3043,"endOffset":3134,"count":5},{"startOffset":3134,"endOffset":3280,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3098,"endOffset":3112,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3237,"endOffset":3251,"count":2}],"isBlockCoverage":true},{"functionName":"#fillNegs","ranges":[{"startOffset":3291,"endOffset":4480,"count":3},{"startOffset":3380,"endOffset":3424,"count":0},{"startOffset":3467,"endOffset":3479,"count":0},{"startOffset":3670,"endOffset":4453,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4485,"endOffset":4857,"count":11},{"startOffset":4577,"endOffset":4586,"count":0},{"startOffset":4659,"endOffset":4703,"count":4},{"startOffset":4705,"endOffset":4775,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4862,"endOffset":5332,"count":0}],"isBlockCoverage":false},{"functionName":"isStart","ranges":[{"startOffset":5337,"endOffset":5935,"count":26},{"startOffset":5394,"endOffset":5406,"count":14},{"startOffset":5406,"endOffset":5500,"count":12},{"startOffset":5516,"endOffset":5529,"count":4},{"startOffset":5529,"endOffset":5579,"count":8},{"startOffset":5579,"endOffset":5591,"count":0},{"startOffset":5591,"endOffset":5908,"count":8},{"startOffset":5832,"endOffset":5850,"count":0},{"startOffset":5908,"endOffset":5934,"count":0}],"isBlockCoverage":true},{"functionName":"isEnd","ranges":[{"startOffset":5940,"endOffset":6427,"count":12},{"startOffset":5995,"endOffset":6007,"count":8},{"startOffset":6007,"endOffset":6038,"count":4},{"startOffset":6060,"endOffset":6072,"count":0},{"startOffset":6072,"endOffset":6105,"count":4},{"startOffset":6121,"endOffset":6171,"count":2},{"startOffset":6171,"endOffset":6200,"count":0},{"startOffset":6200,"endOffset":6342,"count":2},{"startOffset":6343,"endOffset":6346,"count":0}],"isBlockCoverage":true},{"functionName":"copyIn","ranges":[{"startOffset":6432,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":6578,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"#parseAST","ranges":[{"startOffset":6749,"endOffset":10733,"count":5},{"startOffset":6930,"endOffset":8519,"count":3},{"startOffset":7084,"endOffset":8460,"count":29},{"startOffset":7292,"endOffset":7413,"count":0},{"startOffset":7443,"endOffset":7861,"count":3},{"startOffset":7491,"endOffset":7639,"count":1},{"startOffset":7545,"endOffset":7617,"count":0},{"startOffset":7639,"endOffset":7783,"count":2},{"startOffset":7679,"endOffset":7717,"count":1},{"startOffset":7705,"endOffset":7716,"count":0},{"startOffset":7719,"endOffset":7783,"count":1},{"startOffset":7861,"endOffset":8087,"count":26},{"startOffset":7898,"endOffset":8087,"count":1},{"startOffset":8087,"endOffset":8138,"count":25},{"startOffset":8139,"endOffset":8163,"count":7},{"startOffset":8165,"endOffset":8420,"count":2},{"startOffset":8420,"endOffset":8460,"count":23},{"startOffset":8519,"endOffset":8744,"count":2},{"startOffset":8744,"endOffset":10455,"count":4},{"startOffset":8936,"endOffset":9041,"count":0},{"startOffset":9067,"endOffset":9441,"count":0},{"startOffset":9474,"endOffset":9639,"count":0},{"startOffset":9673,"endOffset":9697,"count":0},{"startOffset":9699,"endOffset":9929,"count":0},{"startOffset":9957,"endOffset":10133,"count":0},{"startOffset":10161,"endOffset":10423,"count":2},{"startOffset":10194,"endOffset":10220,"count":0},{"startOffset":10222,"endOffset":10283,"count":0},{"startOffset":10423,"endOffset":10455,"count":2},{"startOffset":10455,"endOffset":10732,"count":0}],"isBlockCoverage":true},{"functionName":"fromGlob","ranges":[{"startOffset":10745,"endOffset":10908,"count":3}],"isBlockCoverage":true},{"functionName":"toMMPattern","ranges":[{"startOffset":11008,"endOffset":11979,"count":3},{"startOffset":11140,"endOffset":11172,"count":0},{"startOffset":11536,"endOffset":11565,"count":1},{"startOffset":11566,"endOffset":11714,"count":1},{"startOffset":11653,"endOffset":11713,"count":0},{"startOffset":11739,"endOffset":11775,"count":1},{"startOffset":11775,"endOffset":11825,"count":2},{"startOffset":11826,"endOffset":11830,"count":0},{"startOffset":11841,"endOffset":11846,"count":0},{"startOffset":11847,"endOffset":11851,"count":2}],"isBlockCoverage":true},{"functionName":"toRegExpSource","ranges":[{"startOffset":15422,"endOffset":20542,"count":7},{"startOffset":15478,"endOffset":15500,"count":5},{"startOffset":15547,"endOffset":15564,"count":3},{"startOffset":15589,"endOffset":18228,"count":5},{"startOffset":15634,"endOffset":15649,"count":3},{"startOffset":16143,"endOffset":17713,"count":3},{"startOffset":16576,"endOffset":16607,"count":1},{"startOffset":16982,"endOffset":17007,"count":0},{"startOffset":17138,"endOffset":17163,"count":0},{"startOffset":17299,"endOffset":17324,"count":0},{"startOffset":17610,"endOffset":17628,"count":0},{"startOffset":17641,"endOffset":17653,"count":2},{"startOffset":17654,"endOffset":17658,"count":1},{"startOffset":17843,"endOffset":17884,"count":3},{"startOffset":17885,"endOffset":17930,"count":3},{"startOffset":17916,"endOffset":17922,"count":0},{"startOffset":17932,"endOffset":17982,"count":0},{"startOffset":18228,"endOffset":18485,"count":2},{"startOffset":18559,"endOffset":18572,"count":0},{"startOffset":18573,"endOffset":18580,"count":2},{"startOffset":18654,"endOffset":18669,"count":0},{"startOffset":18670,"endOffset":18678,"count":0},{"startOffset":18679,"endOffset":18699,"count":0},{"startOffset":18701,"endOffset":19056,"count":0},{"startOffset":19056,"endOffset":19140,"count":2},{"startOffset":19140,"endOffset":19151,"count":0},{"startOffset":19152,"endOffset":19158,"count":0},{"startOffset":19159,"endOffset":19173,"count":0},{"startOffset":19186,"endOffset":19190,"count":2},{"startOffset":19203,"endOffset":19230,"count":0},{"startOffset":19269,"endOffset":19313,"count":0},{"startOffset":19313,"endOffset":19342,"count":2},{"startOffset":19342,"endOffset":19410,"count":0},{"startOffset":19410,"endOffset":19528,"count":2},{"startOffset":19528,"endOffset":19545,"count":0},{"startOffset":19547,"endOffset":19636,"count":0},{"startOffset":19636,"endOffset":20368,"count":2},{"startOffset":19712,"endOffset":19931,"count":0},{"startOffset":19988,"endOffset":19993,"count":0},{"startOffset":20089,"endOffset":20315,"count":0},{"startOffset":20368,"endOffset":20541,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15708,"endOffset":16054,"count":9},{"startOffset":15806,"endOffset":15850,"count":7},{"startOffset":15871,"endOffset":15899,"count":2},{"startOffset":15949,"endOffset":15960,"count":5}],"isBlockCoverage":true},{"functionName":"#partsToRegExp","ranges":[{"startOffset":20547,"endOffset":21192,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20613,"endOffset":21094,"count":2},{"startOffset":20753,"endOffset":20833,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21116,"endOffset":21161,"count":2},{"startOffset":21138,"endOffset":21153,"count":0},{"startOffset":21155,"endOffset":21161,"count":0}],"isBlockCoverage":true},{"functionName":"#parseGlob","ranges":[{"startOffset":21204,"endOffset":22713,"count":7},{"startOffset":21374,"endOffset":22632,"count":26},{"startOffset":21440,"endOffset":21574,"count":0},{"startOffset":21603,"endOffset":21819,"count":0},{"startOffset":21847,"endOffset":22217,"count":1},{"startOffset":22146,"endOffset":22154,"count":0},{"startOffset":22217,"endOffset":22245,"count":25},{"startOffset":22245,"endOffset":22456,"count":5},{"startOffset":22312,"endOffset":22330,"count":0},{"startOffset":22456,"endOffset":22484,"count":20},{"startOffset":22484,"endOffset":22587,"count":0},{"startOffset":22587,"endOffset":22632,"count":20}],"isBlockCoverage":true}]},{"scriptId":"443","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5763,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":1000,"endOffset":1037,"count":2}],"isBlockCoverage":true},{"functionName":"regexpEscape","ranges":[{"startOffset":1098,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1236,"endOffset":1263,"count":2}],"isBlockCoverage":true},{"functionName":"parseClass","ranges":[{"startOffset":1621,"endOffset":5683,"count":1},{"startOffset":1729,"endOffset":1790,"count":0},{"startOffset":2062,"endOffset":4333,"count":3},{"startOffset":2135,"endOffset":2151,"count":0},{"startOffset":2153,"endOffset":2230,"count":0},{"startOffset":2253,"endOffset":2264,"count":1},{"startOffset":2265,"endOffset":2277,"count":1},{"startOffset":2279,"endOffset":2337,"count":1},{"startOffset":2337,"endOffset":2387,"count":2},{"startOffset":2387,"endOffset":2592,"count":0},{"startOffset":2592,"endOffset":2615,"count":2},{"startOffset":2615,"endOffset":2627,"count":0},{"startOffset":2629,"endOffset":3322,"count":0},{"startOffset":3322,"endOffset":3430,"count":2},{"startOffset":3430,"endOffset":3833,"count":0},{"startOffset":3833,"endOffset":3993,"count":2},{"startOffset":3993,"endOffset":4093,"count":0},{"startOffset":4093,"endOffset":4135,"count":2},{"startOffset":4135,"endOffset":4216,"count":0},{"startOffset":4216,"endOffset":4333,"count":2},{"startOffset":4354,"endOffset":4518,"count":0},{"startOffset":4682,"endOffset":4697,"count":0},{"startOffset":4699,"endOffset":4761,"count":0},{"startOffset":5125,"endOffset":5160,"count":0},{"startOffset":5161,"endOffset":5179,"count":0},{"startOffset":5181,"endOffset":5326,"count":0},{"startOffset":5361,"endOffset":5366,"count":0},{"startOffset":5437,"endOffset":5441,"count":0},{"startOffset":5533,"endOffset":5568,"count":0},{"startOffset":5627,"endOffset":5634,"count":0}],"isBlockCoverage":true}]},{"scriptId":"444","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":694,"endOffset":906,"count":14},{"startOffset":783,"endOffset":818,"count":0}],"isBlockCoverage":true}]},{"scriptId":"445","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":968,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":553,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8058,"count":1},{"startOffset":540,"endOffset":549,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":614,"endOffset":8004,"count":2}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":1544,"endOffset":5669,"count":2},{"startOffset":1634,"endOffset":1679,"count":0},{"startOffset":2001,"endOffset":2039,"count":0},{"startOffset":2116,"endOffset":2186,"count":0},{"startOffset":2215,"endOffset":2220,"count":0},{"startOffset":2616,"endOffset":2631,"count":0},{"startOffset":2743,"endOffset":2773,"count":0},{"startOffset":2775,"endOffset":2861,"count":0},{"startOffset":3117,"endOffset":3191,"count":0},{"startOffset":3220,"endOffset":3429,"count":0},{"startOffset":3603,"endOffset":3851,"count":0},{"startOffset":3936,"endOffset":3967,"count":0},{"startOffset":4033,"endOffset":4065,"count":0},{"startOffset":4126,"endOffset":4157,"count":0},{"startOffset":4703,"endOffset":4731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3153,"endOffset":3179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3377,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5293,"endOffset":5331,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5383,"endOffset":5506,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5556,"endOffset":5661,"count":2}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":5674,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":6365,"endOffset":6769,"count":2},{"startOffset":6574,"endOffset":6615,"count":0}],"isBlockCoverage":true},{"functionName":"stream","ranges":[{"startOffset":6774,"endOffset":7118,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":7123,"endOffset":7475,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":7595,"endOffset":7669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7674,"endOffset":7736,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":7863,"endOffset":7934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7939,"endOffset":8002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/path-scurry/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":65859,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0},{"startOffset":65412,"endOffset":65423,"count":0},{"startOffset":65718,"endOffset":65735,"count":0},{"startOffset":65807,"endOffset":65824,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":103},{"startOffset":232,"endOffset":247,"count":5},{"startOffset":248,"endOffset":284,"count":98},{"startOffset":264,"endOffset":284,"count":5},{"startOffset":287,"endOffset":363,"count":98}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":1},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":103}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":2193,"endOffset":2448,"count":4},{"startOffset":2243,"endOffset":2267,"count":0},{"startOffset":2288,"endOffset":2448,"count":0}],"isBlockCoverage":true},{"functionName":"uncToDrive","ranges":[{"startOffset":2558,"endOffset":2633,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":3666,"endOffset":4085,"count":6},{"startOffset":3688,"endOffset":3695,"count":4},{"startOffset":3700,"endOffset":4085,"count":2},{"startOffset":3742,"endOffset":4085,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":4171,"endOffset":4326,"count":12},{"startOffset":4236,"endOffset":4245,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeNocase","ranges":[{"startOffset":4392,"endOffset":4566,"count":32},{"startOffset":4463,"endOffset":4472,"count":20},{"startOffset":4472,"endOffset":4565,"count":12}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":4709,"endOffset":4759,"count":4}],"isBlockCoverage":true},{"functionName":"ChildrenCache","ranges":[{"startOffset":5687,"endOffset":5857,"count":2}],"isBlockCoverage":true},{"functionName":"sizeCalculation","ranges":[{"startOffset":5821,"endOffset":5838,"count":15}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6508,"endOffset":37890,"count":19}],"isBlockCoverage":true},{"functionName":"get dev","ranges":[{"startOffset":7486,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":7545,"endOffset":7590,"count":0}],"isBlockCoverage":false},{"functionName":"get nlink","ranges":[{"startOffset":7607,"endOffset":7654,"count":0}],"isBlockCoverage":false},{"functionName":"get uid","ranges":[{"startOffset":7669,"endOffset":7712,"count":0}],"isBlockCoverage":false},{"functionName":"get gid","ranges":[{"startOffset":7727,"endOffset":7770,"count":0}],"isBlockCoverage":false},{"functionName":"get rdev","ranges":[{"startOffset":7786,"endOffset":7831,"count":0}],"isBlockCoverage":false},{"functionName":"get blksize","ranges":[{"startOffset":7850,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"get ino","ranges":[{"startOffset":7916,"endOffset":7959,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":7975,"endOffset":8020,"count":0}],"isBlockCoverage":false},{"functionName":"get blocks","ranges":[{"startOffset":8038,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"get atimeMs","ranges":[{"startOffset":8106,"endOffset":8157,"count":0}],"isBlockCoverage":false},{"functionName":"get mtimeMs","ranges":[{"startOffset":8176,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get ctimeMs","ranges":[{"startOffset":8246,"endOffset":8297,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtimeMs","ranges":[{"startOffset":8320,"endOffset":8379,"count":0}],"isBlockCoverage":false},{"functionName":"get atime","ranges":[{"startOffset":8396,"endOffset":8443,"count":0}],"isBlockCoverage":false},{"functionName":"get mtime","ranges":[{"startOffset":8460,"endOffset":8507,"count":0}],"isBlockCoverage":false},{"functionName":"get ctime","ranges":[{"startOffset":8524,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtime","ranges":[{"startOffset":8592,"endOffset":8647,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":9175,"endOffset":9242,"count":0}],"isBlockCoverage":false},{"functionName":"PathBase","ranges":[{"startOffset":9435,"endOffset":10093,"count":19},{"startOffset":9591,"endOffset":9608,"count":0},{"startOffset":9731,"endOffset":9738,"count":2},{"startOffset":9965,"endOffset":10016,"count":17},{"startOffset":10016,"endOffset":10087,"count":2}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":10246,"endOffset":10452,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":10490,"endOffset":10544,"count":17}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":10647,"endOffset":11039,"count":1},{"startOffset":10682,"endOffset":10718,"count":0},{"startOffset":10918,"endOffset":10966,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveParts","ranges":[{"startOffset":11044,"endOffset":11195,"count":1}],"isBlockCoverage":true},{"functionName":"children","ranges":[{"startOffset":11494,"endOffset":11792,"count":16},{"startOffset":11576,"endOffset":11614,"count":1},{"startOffset":11614,"endOffset":11791,"count":15}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":12197,"endOffset":13461,"count":13},{"startOffset":12270,"endOffset":12306,"count":0},{"startOffset":12338,"endOffset":12389,"count":0},{"startOffset":12543,"endOffset":12564,"count":0},{"startOffset":12600,"endOffset":12692,"count":0},{"startOffset":12898,"endOffset":12908,"count":11},{"startOffset":12909,"endOffset":12913,"count":2},{"startOffset":12967,"endOffset":12998,"count":1},{"startOffset":13011,"endOffset":13022,"count":12},{"startOffset":13195,"endOffset":13242,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":13628,"endOffset":13971,"count":26},{"startOffset":13683,"endOffset":13729,"count":14},{"startOffset":13729,"endOffset":13809,"count":12},{"startOffset":13809,"endOffset":13869,"count":0},{"startOffset":13869,"endOffset":13928,"count":12},{"startOffset":13928,"endOffset":13940,"count":0},{"startOffset":13941,"endOffset":13945,"count":12},{"startOffset":13946,"endOffset":13956,"count":0}],"isBlockCoverage":true},{"functionName":"relativePosix","ranges":[{"startOffset":14239,"endOffset":14667,"count":0}],"isBlockCoverage":false},{"functionName":"fullpath","ranges":[{"startOffset":14746,"endOffset":15124,"count":34},{"startOffset":14801,"endOffset":14927,"count":17},{"startOffset":14927,"endOffset":14987,"count":2},{"startOffset":14987,"endOffset":15056,"count":15},{"startOffset":15056,"endOffset":15060,"count":2},{"startOffset":15061,"endOffset":15071,"count":13}],"isBlockCoverage":true},{"functionName":"fullpathPosix","ranges":[{"startOffset":15323,"endOffset":16003,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknown","ranges":[{"startOffset":16274,"endOffset":16341,"count":5}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":16346,"endOffset":16402,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":16407,"endOffset":17189,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":17245,"endOffset":17307,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":17360,"endOffset":17427,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":17487,"endOffset":17560,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":17616,"endOffset":17685,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":17738,"endOffset":17800,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":17850,"endOffset":17915,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":17972,"endOffset":18043,"count":2}],"isBlockCoverage":true},{"functionName":"lstatCached","ranges":[{"startOffset":18295,"endOffset":18377,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkCached","ranges":[{"startOffset":18738,"endOffset":18795,"count":0}],"isBlockCoverage":false},{"functionName":"realpathCached","ranges":[{"startOffset":19161,"endOffset":19216,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCached","ranges":[{"startOffset":19599,"endOffset":19720,"count":0}],"isBlockCoverage":false},{"functionName":"canReadlink","ranges":[{"startOffset":20017,"endOffset":20366,"count":0}],"isBlockCoverage":false},{"functionName":"calledReaddir","ranges":[{"startOffset":20527,"endOffset":20598,"count":2}],"isBlockCoverage":true},{"functionName":"isENOENT","ranges":[{"startOffset":20847,"endOffset":20905,"count":2}],"isBlockCoverage":true},{"functionName":"isNamed","ranges":[{"startOffset":21374,"endOffset":21521,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":21835,"endOffset":22594,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":22660,"endOffset":23406,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirSuccess","ranges":[{"startOffset":23411,"endOffset":23709,"count":1},{"startOffset":23653,"endOffset":23703,"count":0}],"isBlockCoverage":true},{"functionName":"#markENOENT","ranges":[{"startOffset":23714,"endOffset":23921,"count":1},{"startOffset":23813,"endOffset":23820,"count":0}],"isBlockCoverage":true},{"functionName":"#markChildrenENOENT","ranges":[{"startOffset":23926,"endOffset":24163,"count":1},{"startOffset":24117,"endOffset":24157,"count":0}],"isBlockCoverage":true},{"functionName":"#markENOREALPATH","ranges":[{"startOffset":24168,"endOffset":24258,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOTDIR","ranges":[{"startOffset":24327,"endOffset":24990,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirFail","ranges":[{"startOffset":24995,"endOffset":25334,"count":1},{"startOffset":25134,"endOffset":25178,"count":0},{"startOffset":25258,"endOffset":25328,"count":0}],"isBlockCoverage":true},{"functionName":"#lstatFail","ranges":[{"startOffset":25339,"endOffset":25749,"count":0}],"isBlockCoverage":false},{"functionName":"#readlinkFail","ranges":[{"startOffset":25754,"endOffset":26498,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirAddChild","ranges":[{"startOffset":26503,"endOffset":26634,"count":4}],"isBlockCoverage":true},{"functionName":"#readdirAddNewChild","ranges":[{"startOffset":26639,"endOffset":27066,"count":4}],"isBlockCoverage":true},{"functionName":"#readdirMaybePromoteChild","ranges":[{"startOffset":27071,"endOffset":27475,"count":4},{"startOffset":27160,"endOffset":27469,"count":0}],"isBlockCoverage":true},{"functionName":"#readdirPromoteChild","ranges":[{"startOffset":27480,"endOffset":28166,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":28803,"endOffset":29100,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":29163,"endOffset":29447,"count":2},{"startOffset":29363,"endOffset":29431,"count":0}],"isBlockCoverage":true},{"functionName":"#applyStat","ranges":[{"startOffset":29452,"endOffset":30443,"count":2},{"startOffset":30372,"endOffset":30389,"count":0},{"startOffset":30391,"endOffset":30437,"count":0}],"isBlockCoverage":true},{"functionName":"#callOnReaddirCB","ranges":[{"startOffset":30503,"endOffset":30710,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCB","ranges":[{"startOffset":31476,"endOffset":32962,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":33263,"endOffset":34505,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":34570,"endOffset":35371,"count":2},{"startOffset":34618,"endOffset":34652,"count":0},{"startOffset":34729,"endOffset":34800,"count":0},{"startOffset":35079,"endOffset":35146,"count":4},{"startOffset":35146,"endOffset":35309,"count":1}],"isBlockCoverage":true},{"functionName":"canReaddir","ranges":[{"startOffset":35376,"endOffset":35760,"count":23},{"startOffset":35438,"endOffset":35451,"count":4},{"startOffset":35451,"endOffset":35629,"count":19},{"startOffset":35629,"endOffset":35646,"count":6},{"startOffset":35647,"endOffset":35664,"count":0},{"startOffset":35667,"endOffset":35704,"count":0},{"startOffset":35704,"endOffset":35759,"count":19}],"isBlockCoverage":true},{"functionName":"shouldWalk","ranges":[{"startOffset":35765,"endOffset":35970,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":36289,"endOffset":36690,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":36747,"endOffset":37135,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37289,"endOffset":37888,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38091,"endOffset":39971,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40092,"endOffset":41013,"count":19}],"isBlockCoverage":true},{"functionName":"PathPosix","ranges":[{"startOffset":40473,"endOffset":40615,"count":19}],"isBlockCoverage":true},{"functionName":"getRootString","ranges":[{"startOffset":40653,"endOffset":40728,"count":1},{"startOffset":40711,"endOffset":40716,"count":0}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":40766,"endOffset":40818,"count":0}],"isBlockCoverage":false},{"functionName":"newChild","ranges":[{"startOffset":40856,"endOffset":41011,"count":17}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":41370,"endOffset":62414,"count":2}],"isBlockCoverage":true},{"functionName":"PathScurryBase","ranges":[{"startOffset":42215,"endOffset":44010,"count":2},{"startOffset":42428,"endOffset":42488,"count":0},{"startOffset":43091,"endOffset":43103,"count":0},{"startOffset":43105,"endOffset":43141,"count":0},{"startOffset":43206,"endOffset":43304,"count":0},{"startOffset":43656,"endOffset":43979,"count":12},{"startOffset":43900,"endOffset":43904,"count":10},{"startOffset":43905,"endOffset":43914,"count":2}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":44091,"endOffset":44243,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":44418,"endOffset":44472,"count":2}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":44787,"endOffset":45488,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePosix","ranges":[{"startOffset":45950,"endOffset":46671,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":46772,"endOffset":46935,"count":0}],"isBlockCoverage":false},{"functionName":"relativePosix","ranges":[{"startOffset":47092,"endOffset":47265,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":47352,"endOffset":47509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":47595,"endOffset":47775,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":47780,"endOffset":48312,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":48317,"endOffset":48891,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":49544,"endOffset":49707,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":49776,"endOffset":49941,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":49946,"endOffset":50371,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":50376,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":50802,"endOffset":51227,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":51232,"endOffset":51653,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":51658,"endOffset":53795,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":53800,"endOffset":54988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":55336,"endOffset":55399,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":55404,"endOffset":55974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56118,"endOffset":56180,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":56185,"endOffset":57309,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":57314,"endOffset":60261,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":60266,"endOffset":62231,"count":0}],"isBlockCoverage":false},{"functionName":"chdir","ranges":[{"startOffset":62236,"endOffset":62412,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62634,"endOffset":63750,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":64011,"endOffset":64725,"count":2}],"isBlockCoverage":true},{"functionName":"PathScurryPosix","ranges":[{"startOffset":64138,"endOffset":64320,"count":2}],"isBlockCoverage":true},{"functionName":"parseRootPath","ranges":[{"startOffset":64358,"endOffset":64405,"count":2}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":64443,"endOffset":64580,"count":2}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":64668,"endOffset":64723,"count":0}],"isBlockCoverage":false},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":65034,"endOffset":65166,"count":2}],"isBlockCoverage":true}]},{"scriptId":"448","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/lru-cache/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49524,"count":1},{"startOffset":263,"endOffset":269,"count":0},{"startOffset":387,"endOffset":391,"count":0},{"startOffset":740,"endOffset":2309,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":436,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":768,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":982,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1603,"endOffset":2306,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2350,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2425,"endOffset":2480,"count":54},{"startOffset":2434,"endOffset":2456,"count":37},{"startOffset":2457,"endOffset":2465,"count":37},{"startOffset":2466,"endOffset":2480,"count":37}],"isBlockCoverage":true},{"functionName":"getUintArray","ranges":[{"startOffset":2995,"endOffset":3312,"count":10},{"startOffset":3023,"endOffset":3029,"count":2},{"startOffset":3034,"endOffset":3312,"count":8},{"startOffset":3087,"endOffset":3312,"count":0}],"isBlockCoverage":true},{"functionName":"ZeroArray","ranges":[{"startOffset":3371,"endOffset":3439,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3442,"endOffset":4192,"count":4}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3509,"endOffset":3537,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3550,"endOffset":3791,"count":6},{"startOffset":3641,"endOffset":3651,"count":2},{"startOffset":3651,"endOffset":3790,"count":4}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":3796,"endOffset":4073,"count":4},{"startOffset":3888,"endOffset":3975,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4078,"endOffset":4131,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":4136,"endOffset":4190,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4579,"endOffset":49461,"count":6}],"isBlockCoverage":true},{"functionName":"unsafeExposeInternals","ranges":[{"startOffset":6762,"endOffset":7672,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":7780,"endOffset":7823,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":7900,"endOffset":7951,"count":0}],"isBlockCoverage":false},{"functionName":"get calculatedSize","ranges":[{"startOffset":8037,"endOffset":8102,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8182,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchMethod","ranges":[{"startOffset":8308,"endOffset":8367,"count":0}],"isBlockCoverage":false},{"functionName":"get dispose","ranges":[{"startOffset":8444,"endOffset":8495,"count":0}],"isBlockCoverage":false},{"functionName":"get disposeAfter","ranges":[{"startOffset":8577,"endOffset":8638,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":8643,"endOffset":13058,"count":6},{"startOffset":9037,"endOffset":9054,"count":4},{"startOffset":9056,"endOffset":9144,"count":0},{"startOffset":9175,"endOffset":9194,"count":4},{"startOffset":9195,"endOffset":9202,"count":2},{"startOffset":9228,"endOffset":9297,"count":0},{"startOffset":9497,"endOffset":9837,"count":2},{"startOffset":9530,"endOffset":9551,"count":0},{"startOffset":9553,"endOffset":9675,"count":0},{"startOffset":9736,"endOffset":9827,"count":0},{"startOffset":9876,"endOffset":9924,"count":0},{"startOffset":9926,"endOffset":10017,"count":0},{"startOffset":10522,"endOffset":10570,"count":0},{"startOffset":10619,"endOffset":10710,"count":0},{"startOffset":11359,"endOffset":11780,"count":2},{"startOffset":11446,"endOffset":11557,"count":0},{"startOffset":11618,"endOffset":11726,"count":0},{"startOffset":12038,"endOffset":12060,"count":0},{"startOffset":12109,"endOffset":12112,"count":0},{"startOffset":12209,"endOffset":12400,"count":0},{"startOffset":12481,"endOffset":12498,"count":2},{"startOffset":12499,"endOffset":12521,"count":2},{"startOffset":12523,"endOffset":12619,"count":0},{"startOffset":12665,"endOffset":12682,"count":2},{"startOffset":12684,"endOffset":13052,"count":0}],"isBlockCoverage":true},{"functionName":"getRemainingTTL","ranges":[{"startOffset":13138,"endOffset":13219,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeTTLTracking","ranges":[{"startOffset":13224,"endOffset":15812,"count":0}],"isBlockCoverage":false},{"functionName":"#updateItemAge","ranges":[{"startOffset":15890,"endOffset":15899,"count":0}],"isBlockCoverage":false},{"functionName":"#statusTTL","ranges":[{"startOffset":15918,"endOffset":15927,"count":0}],"isBlockCoverage":false},{"functionName":"#setItemTTL","ranges":[{"startOffset":15947,"endOffset":15956,"count":0}],"isBlockCoverage":false},{"functionName":"#isStale","ranges":[{"startOffset":15998,"endOffset":16009,"count":1}],"isBlockCoverage":true},{"functionName":"#initializeSizeTracking","ranges":[{"startOffset":16015,"endOffset":17881,"count":2}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":16185,"endOffset":16285,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":16315,"endOffset":17354,"count":15},{"startOffset":16517,"endOffset":16558,"count":0},{"startOffset":16696,"endOffset":16802,"count":0},{"startOffset":16894,"endOffset":17022,"count":0},{"startOffset":17040,"endOffset":17305,"count":0}],"isBlockCoverage":true},{"functionName":"#addItemSize","ranges":[{"startOffset":17384,"endOffset":17874,"count":15},{"startOffset":17594,"endOffset":17652,"count":0},{"startOffset":17741,"endOffset":17864,"count":0}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":17904,"endOffset":17913,"count":0}],"isBlockCoverage":false},{"functionName":"#addItemSize","ranges":[{"startOffset":17934,"endOffset":17954,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":17975,"endOffset":18185,"count":0}],"isBlockCoverage":false},{"functionName":"#indexes","ranges":[{"startOffset":18191,"endOffset":18701,"count":0}],"isBlockCoverage":false},{"functionName":"#rindexes","ranges":[{"startOffset":18706,"endOffset":19217,"count":0}],"isBlockCoverage":false},{"functionName":"#isValidIndex","ranges":[{"startOffset":19222,"endOffset":19352,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":19494,"endOffset":19801,"count":0}],"isBlockCoverage":false},{"functionName":"rentries","ranges":[{"startOffset":20007,"endOffset":20316,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":20459,"endOffset":20703,"count":0}],"isBlockCoverage":false},{"functionName":"rkeys","ranges":[{"startOffset":20907,"endOffset":21153,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":21298,"endOffset":21559,"count":0}],"isBlockCoverage":false},{"functionName":"rvalues","ranges":[{"startOffset":21767,"endOffset":22030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22149,"endOffset":22207,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":22377,"endOffset":22811,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":23087,"endOffset":23450,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":23625,"endOffset":23990,"count":0}],"isBlockCoverage":false},{"functionName":"purgeStale","ranges":[{"startOffset":24106,"endOffset":24382,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":24509,"endOffset":25459,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":25680,"endOffset":26325,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26491,"endOffset":30416,"count":15},{"startOffset":26549,"endOffset":26613,"count":0},{"startOffset":27068,"endOffset":27328,"count":0},{"startOffset":27366,"endOffset":27377,"count":2},{"startOffset":27378,"endOffset":27399,"count":13},{"startOffset":27514,"endOffset":27526,"count":2},{"startOffset":27543,"endOffset":27736,"count":13},{"startOffset":27589,"endOffset":27607,"count":0},{"startOffset":27679,"endOffset":27699,"count":0},{"startOffset":28093,"endOffset":28112,"count":0},{"startOffset":28155,"endOffset":29840,"count":0},{"startOffset":29863,"endOffset":29877,"count":0},{"startOffset":29879,"endOffset":29933,"count":0},{"startOffset":29958,"endOffset":30140,"count":0},{"startOffset":30194,"endOffset":30211,"count":0},{"startOffset":30213,"endOffset":30389,"count":0}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":30541,"endOffset":31298,"count":0}],"isBlockCoverage":false},{"functionName":"#evict","ranges":[{"startOffset":31303,"endOffset":32371,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":32671,"endOffset":33608,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":33837,"endOffset":34274,"count":0}],"isBlockCoverage":false},{"functionName":"#backgroundFetch","ranges":[{"startOffset":34279,"endOffset":39405,"count":0}],"isBlockCoverage":false},{"functionName":"#isBackgroundFetch","ranges":[{"startOffset":39410,"endOffset":39684,"count":16},{"startOffset":39494,"endOffset":39571,"count":0},{"startOffset":39572,"endOffset":39627,"count":0},{"startOffset":39628,"endOffset":39676,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":39689,"endOffset":43019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":43205,"endOffset":45341,"count":16},{"startOffset":43461,"endOffset":45265,"count":1},{"startOffset":43612,"endOffset":43643,"count":0},{"startOffset":43682,"endOffset":44489,"count":0},{"startOffset":44557,"endOffset":44576,"count":0},{"startOffset":44992,"endOffset":45066,"count":0},{"startOffset":45144,"endOffset":45211,"count":0},{"startOffset":45265,"endOffset":45335,"count":15},{"startOffset":45291,"endOffset":45335,"count":0}],"isBlockCoverage":true},{"functionName":"#connect","ranges":[{"startOffset":45346,"endOffset":45422,"count":0}],"isBlockCoverage":false},{"functionName":"#moveToTail","ranges":[{"startOffset":45427,"endOffset":46089,"count":1},{"startOffset":45790,"endOffset":46083,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":46210,"endOffset":48139,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":48219,"endOffset":49459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":653,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":755,"endOffset":815,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":819,"endOffset":919,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":923,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1042,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1161,"endOffset":1273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1277,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1524,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"initPerformanceEntry","ranges":[{"startOffset":1968,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceEntry","ranges":[{"startOffset":2150,"endOffset":2359,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2476,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2590,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceNodeEntry","ranges":[{"startOffset":2845,"endOffset":3102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7416,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":884,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":948,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1077,"endOffset":1213,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1217,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1384,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1524,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1684,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1836,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":1984,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":2137,"endOffset":2320,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":2324,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2507,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2687,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2863,"endOffset":3061,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":3065,"endOffset":3254,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":3258,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":3420,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":3584,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":3724,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":3876,"endOffset":4024,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":4028,"endOffset":4282,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4286,"endOffset":5227,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceResourceTiming","ranges":[{"startOffset":6095,"endOffset":6705,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":6774,"endOffset":7341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16740,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2620,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2883,"endOffset":3223,"count":140},{"startOffset":2938,"endOffset":2987,"count":0},{"startOffset":2992,"endOffset":3047,"count":0},{"startOffset":3052,"endOffset":3105,"count":9},{"startOffset":3110,"endOffset":3161,"count":44},{"startOffset":3166,"endOffset":3217,"count":87}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3225,"endOffset":3646,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3648,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceObserverEntryList","ranges":[{"startOffset":4031,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":4095,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":4238,"endOffset":4542,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":4546,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5043,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceObserverEntryList","ranges":[{"startOffset":5642,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5934,"endOffset":9505,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":9987,"endOffset":10189,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":10250,"endOffset":11276,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":11564,"endOffset":12828,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":12916,"endOffset":13188,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":13190,"endOffset":13255,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":13257,"endOffset":13857,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":13859,"endOffset":14747,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":14749,"endOffset":15865,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":15902,"endOffset":16021,"count":140}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":16024,"endOffset":16134,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":16136,"endOffset":16451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6257,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":1212,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1692,"endOffset":2427,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":2431,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2540,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":3107,"endOffset":3167,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":3171,"endOffset":3279,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformanceMeasure","ranges":[{"startOffset":3481,"endOffset":3731,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3733,"endOffset":3874,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":3876,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":5461,"endOffset":5896,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":5898,"endOffset":6153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3503,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":728,"endOffset":2730,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1389,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1600,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1813,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2239,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2459,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2734,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2978,"endOffset":3364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":186,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15419,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3661,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3747,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3887,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4002,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4606,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4840,"endOffset":4966,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5081,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5322,"endOffset":5448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5557,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5924,"endOffset":6242,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6381,"endOffset":6524,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6825,"endOffset":6864,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":6937,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7190,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7458,"endOffset":8085,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8091,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9474,"endOffset":9823,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9827,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10183,"endOffset":10332,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10336,"endOffset":10712,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10716,"endOffset":10895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10899,"endOffset":11146,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11150,"endOffset":11419,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11421,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageEvent","ranges":[{"startOffset":11603,"endOffset":11698,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11700,"endOffset":11786,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11873,"endOffset":12387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12391,"endOffset":12803,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12839,"endOffset":12968,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13005,"endOffset":13403,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13471,"endOffset":13881,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14164,"endOffset":14331,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14616,"endOffset":14787,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6360,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1335,"endOffset":1395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1399,"endOffset":1693,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1697,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1932,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":2145,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2366,"endOffset":2494,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2498,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2759,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":3020,"endOffset":3241,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":3245,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"now","ranges":[{"startOffset":3534,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":3634,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"get timeOrigin","ranges":[{"startOffset":3954,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":4084,"endOffset":4312,"count":0}],"isBlockCoverage":false},{"functionName":"createPerformance","ranges":[{"startOffset":5913,"endOffset":6082,"count":1}],"isBlockCoverage":true},{"functionName":"Performance","ranges":[{"startOffset":5970,"endOffset":6061,"count":1}],"isBlockCoverage":true},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":6126,"endOffset":6263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":153,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"internalEventLoopUtilization","ranges":[{"startOffset":448,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2276,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":609,"endOffset":984,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":986,"endOffset":2247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8268,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":912,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1008,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1072,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1534,"endOffset":1661,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1712,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1902,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2076,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2262,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2436,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2622,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2798,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":2980,"endOffset":3123,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3174,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3374,"endOffset":3723,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3794,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4218,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4470,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4708,"endOffset":4824,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4828,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4988,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5052,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5360,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5489,"endOffset":5960,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":5997,"endOffset":6148,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6204,"endOffset":6477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6481,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6651,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6715,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":6947,"endOffset":6955,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":6958,"endOffset":7197,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7252,"endOffset":7260,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7404,"endOffset":8091,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"node:internal/webidl","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4315,"count":1}],"isBlockCoverage":false},{"functionName":"evenRound","ranges":[{"startOffset":774,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"pow2","ranges":[{"startOffset":1101,"endOffset":1364,"count":0}],"isBlockCoverage":false},{"functionName":"modulo","ranges":[{"startOffset":1476,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"convertToInt","ranges":[{"startOffset":1655,"endOffset":4262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":624,"endOffset":685,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":725,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":976,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1282,"endOffset":1681,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minipass/dist/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33736,"count":1},{"startOffset":374,"endOffset":427,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":715,"endOffset":902,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":1028,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":1404,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2834,"endOffset":2868,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2886,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2917,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":3006,"endOffset":3185,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":3213,"endOffset":3264,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3353,"endOffset":3901,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":4058,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":4163,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":4362,"endOffset":4383,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":4411,"endOffset":4474,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4829,"endOffset":33673,"count":0}],"isBlockCoverage":true}]},{"scriptId":"465","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7298,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":241,"endOffset":263,"count":5}],"isBlockCoverage":true},{"functionName":"isGlobList","ranges":[{"startOffset":284,"endOffset":306,"count":5}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":395,"endOffset":7235,"count":5}],"isBlockCoverage":true},{"functionName":"Pattern","ranges":[{"startOffset":586,"endOffset":2959,"count":5},{"startOffset":681,"endOffset":747,"count":0},{"startOffset":783,"endOffset":846,"count":0},{"startOffset":899,"endOffset":992,"count":0},{"startOffset":1082,"endOffset":1148,"count":0},{"startOffset":1396,"endOffset":2953,"count":2},{"startOffset":1740,"endOffset":2369,"count":0},{"startOffset":2428,"endOffset":2943,"count":0}],"isBlockCoverage":true},{"functionName":"pattern","ranges":[{"startOffset":3034,"endOffset":3098,"count":15}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":3164,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobstar","ranges":[{"startOffset":3315,"endOffset":3407,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3470,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"globString","ranges":[{"startOffset":3638,"endOffset":4000,"count":3},{"startOffset":3775,"endOffset":3925,"count":2},{"startOffset":3819,"endOffset":3874,"count":0},{"startOffset":3946,"endOffset":3991,"count":1}],"isBlockCoverage":true},{"functionName":"hasMore","ranges":[{"startOffset":4080,"endOffset":4143,"count":9}],"isBlockCoverage":true},{"functionName":"rest","ranges":[{"startOffset":4239,"endOffset":4657,"count":13},{"startOffset":4298,"endOffset":4316,"count":8},{"startOffset":4316,"endOffset":4358,"count":5},{"startOffset":4358,"endOffset":4385,"count":2},{"startOffset":4385,"endOffset":4656,"count":3}],"isBlockCoverage":true},{"functionName":"isUNC","ranges":[{"startOffset":4741,"endOffset":5208,"count":4},{"startOffset":4842,"endOffset":4855,"count":2},{"startOffset":4868,"endOffset":5201,"count":2},{"startOffset":4928,"endOffset":4968,"count":0},{"startOffset":4969,"endOffset":5004,"count":0},{"startOffset":5005,"endOffset":5040,"count":0},{"startOffset":5041,"endOffset":5089,"count":0},{"startOffset":5090,"endOffset":5120,"count":0},{"startOffset":5121,"endOffset":5169,"count":0},{"startOffset":5170,"endOffset":5200,"count":0}],"isBlockCoverage":true},{"functionName":"isDrive","ranges":[{"startOffset":5545,"endOffset":5923,"count":4},{"startOffset":5650,"endOffset":5665,"count":2},{"startOffset":5678,"endOffset":5916,"count":2},{"startOffset":5740,"endOffset":5780,"count":0},{"startOffset":5781,"endOffset":5819,"count":0},{"startOffset":5820,"endOffset":5868,"count":0},{"startOffset":5869,"endOffset":5915,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":6156,"endOffset":6449,"count":11},{"startOffset":6267,"endOffset":6285,"count":9},{"startOffset":6298,"endOffset":6442,"count":2},{"startOffset":6350,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":6524,"endOffset":6691,"count":2},{"startOffset":6610,"endOffset":6630,"count":1},{"startOffset":6631,"endOffset":6651,"count":0},{"startOffset":6664,"endOffset":6667,"count":0}],"isBlockCoverage":true},{"functionName":"checkFollowGlobstar","ranges":[{"startOffset":6809,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"markFollowGlobstar","ranges":[{"startOffset":7042,"endOffset":7233,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11532,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":408,"endOffset":589,"count":2},{"startOffset":457,"endOffset":497,"count":0},{"startOffset":581,"endOffset":589,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":661,"endOffset":9170,"count":2}],"isBlockCoverage":true},{"functionName":"GlobUtil","ranges":[{"startOffset":848,"endOffset":1546,"count":2},{"startOffset":1031,"endOffset":1037,"count":0},{"startOffset":1306,"endOffset":1317,"count":0},{"startOffset":1373,"endOffset":1540,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1464,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"#ignored","ranges":[{"startOffset":1551,"endOffset":1644,"count":9}],"isBlockCoverage":true},{"functionName":"#childrenIgnored","ranges":[{"startOffset":1649,"endOffset":1735,"count":2}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":1770,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1818,"endOffset":2096,"count":0}],"isBlockCoverage":false},{"functionName":"onResume","ranges":[{"startOffset":2101,"endOffset":2356,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheck","ranges":[{"startOffset":2474,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheckTest","ranges":[{"startOffset":2914,"endOffset":3207,"count":3},{"startOffset":3001,"endOffset":3030,"count":0},{"startOffset":3055,"endOffset":3072,"count":0},{"startOffset":3107,"endOffset":3126,"count":0},{"startOffset":3189,"endOffset":3200,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckSync","ranges":[{"startOffset":3212,"endOffset":3639,"count":3},{"startOffset":3257,"endOffset":3275,"count":0},{"startOffset":3289,"endOffset":3306,"count":0},{"startOffset":3356,"endOffset":3502,"count":0},{"startOffset":3605,"endOffset":3620,"count":0}],"isBlockCoverage":true},{"functionName":"matchFinish","ranges":[{"startOffset":3644,"endOffset":4484,"count":3},{"startOffset":3713,"endOffset":3720,"count":0},{"startOffset":3785,"endOffset":3805,"count":0},{"startOffset":3869,"endOffset":3887,"count":0},{"startOffset":3888,"endOffset":3899,"count":0},{"startOffset":3980,"endOffset":4022,"count":0},{"startOffset":4045,"endOffset":4172,"count":0},{"startOffset":4228,"endOffset":4247,"count":0},{"startOffset":4310,"endOffset":4346,"count":0},{"startOffset":4363,"endOffset":4380,"count":0},{"startOffset":4435,"endOffset":4447,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":4489,"endOffset":4637,"count":0}],"isBlockCoverage":false},{"functionName":"matchSync","ranges":[{"startOffset":4642,"endOffset":4786,"count":3}],"isBlockCoverage":true},{"functionName":"walkCB","ranges":[{"startOffset":4791,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB2","ranges":[{"startOffset":5028,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB3","ranges":[{"startOffset":6447,"endOffset":7089,"count":0}],"isBlockCoverage":false},{"functionName":"walkCBSync","ranges":[{"startOffset":7094,"endOffset":7334,"count":2},{"startOffset":7182,"endOffset":7191,"count":0},{"startOffset":7205,"endOffset":7210,"count":0}],"isBlockCoverage":true},{"functionName":"walkCB2Sync","ranges":[{"startOffset":7339,"endOffset":8549,"count":2},{"startOffset":7441,"endOffset":7453,"count":0},{"startOffset":7477,"endOffset":7486,"count":0},{"startOffset":7500,"endOffset":7505,"count":0},{"startOffset":7531,"endOffset":7646,"count":0},{"startOffset":8101,"endOffset":8220,"count":0},{"startOffset":8318,"endOffset":8347,"count":0},{"startOffset":8349,"endOffset":8390,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7559,"endOffset":7614,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":7957,"endOffset":8027,"count":4},{"startOffset":8012,"endOffset":8017,"count":2}],"isBlockCoverage":true},{"functionName":"walkCB3Sync","ranges":[{"startOffset":8554,"endOffset":9168,"count":2},{"startOffset":8850,"endOffset":8969,"count":3},{"startOffset":8902,"endOffset":8911,"count":0},{"startOffset":9041,"endOffset":9146,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":8706,"endOffset":8776,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9200,"endOffset":10371,"count":2}],"isBlockCoverage":true},{"functionName":"GlobWalker","ranges":[{"startOffset":9253,"endOffset":9365,"count":2}],"isBlockCoverage":true},{"functionName":"matchEmit","ranges":[{"startOffset":9370,"endOffset":9419,"count":3}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":9424,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":9949,"endOffset":10369,"count":2},{"startOffset":9985,"endOffset":9994,"count":0},{"startOffset":10008,"endOffset":10033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10235,"endOffset":10332,"count":2},{"startOffset":10270,"endOffset":10279,"count":0},{"startOffset":10297,"endOffset":10322,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10405,"endOffset":11464,"count":0}],"isBlockCoverage":true}]},{"scriptId":"467","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3791,"count":1},{"startOffset":531,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":592,"endOffset":3731,"count":2}],"isBlockCoverage":true},{"functionName":"Ignore","ranges":[{"startOffset":683,"endOffset":2850,"count":2},{"startOffset":1968,"endOffset":2844,"count":0}],"isBlockCoverage":true},{"functionName":"ignored","ranges":[{"startOffset":2855,"endOffset":3338,"count":9},{"startOffset":2987,"endOffset":2993,"count":0},{"startOffset":3076,"endOffset":3173,"count":0},{"startOffset":3213,"endOffset":3310,"count":0}],"isBlockCoverage":true},{"functionName":"childrenIgnored","ranges":[{"startOffset":3343,"endOffset":3729,"count":2},{"startOffset":3510,"endOffset":3585,"count":0},{"startOffset":3633,"endOffset":3701,"count":0}],"isBlockCoverage":true}]},{"scriptId":"468","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":357,"endOffset":938,"count":4}],"isBlockCoverage":true},{"functionName":"HasWalkedCache","ranges":[{"startOffset":395,"endOffset":461,"count":4}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":466,"endOffset":536,"count":2}],"isBlockCoverage":true},{"functionName":"hasWalked","ranges":[{"startOffset":541,"endOffset":652,"count":1},{"startOffset":618,"endOffset":623,"count":0}],"isBlockCoverage":true},{"functionName":"storeWalked","ranges":[{"startOffset":657,"endOffset":936,"count":3},{"startOffset":813,"endOffset":846,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1195,"endOffset":1647,"count":4}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1242,"endOffset":1455,"count":3},{"startOffset":1301,"endOffset":1304,"count":0},{"startOffset":1319,"endOffset":1322,"count":0},{"startOffset":1434,"endOffset":1447,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":1490,"endOffset":1645,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1637,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1784,"endOffset":2598,"count":4}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1828,"endOffset":2183,"count":2},{"startOffset":1885,"endOffset":1916,"count":0},{"startOffset":1980,"endOffset":2117,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2009,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2188,"endOffset":2427,"count":2},{"startOffset":2296,"endOffset":2371,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":2432,"endOffset":2510,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2475,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":2515,"endOffset":2596,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2569,"endOffset":2588,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2797,"endOffset":10703,"count":4}],"isBlockCoverage":true},{"functionName":"Processor","ranges":[{"startOffset":2948,"endOffset":3200,"count":4},{"startOffset":3135,"endOffset":3158,"count":2},{"startOffset":3171,"endOffset":3193,"count":2}],"isBlockCoverage":true},{"functionName":"processPatterns","ranges":[{"startOffset":3205,"endOffset":7131,"count":2},{"startOffset":3656,"endOffset":3687,"count":0},{"startOffset":3758,"endOffset":4167,"count":0},{"startOffset":4214,"endOffset":4223,"count":0},{"startOffset":4361,"endOffset":4403,"count":1},{"startOffset":4405,"endOffset":4547,"count":1},{"startOffset":4643,"endOffset":4812,"count":1},{"startOffset":4728,"endOffset":4737,"count":0},{"startOffset":5033,"endOffset":5318,"count":0},{"startOffset":5759,"endOffset":5793,"count":0},{"startOffset":5794,"endOffset":5846,"count":0},{"startOffset":6063,"endOffset":6072,"count":0},{"startOffset":6075,"endOffset":6306,"count":0},{"startOffset":6367,"endOffset":6957,"count":0},{"startOffset":6989,"endOffset":7094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3318,"endOffset":3334,"count":2}],"isBlockCoverage":true},{"functionName":"subwalkTargets","ranges":[{"startOffset":7136,"endOffset":7197,"count":2}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":7202,"endOffset":7279,"count":2}],"isBlockCoverage":true},{"functionName":"filterEntries","ranges":[{"startOffset":7475,"endOffset":8312,"count":2},{"startOffset":7697,"endOffset":8282,"count":4},{"startOffset":8027,"endOffset":8258,"count":0}],"isBlockCoverage":true},{"functionName":"testGlobstar","ranges":[{"startOffset":8317,"endOffset":10191,"count":4},{"startOffset":8447,"endOffset":8516,"count":0},{"startOffset":8549,"endOffset":9424,"count":0},{"startOffset":9617,"endOffset":9702,"count":0},{"startOffset":9703,"endOffset":9731,"count":0},{"startOffset":9732,"endOffset":9761,"count":0},{"startOffset":9763,"endOffset":9841,"count":0},{"startOffset":9876,"endOffset":10053,"count":0}],"isBlockCoverage":true},{"functionName":"testRegExp","ranges":[{"startOffset":10196,"endOffset":10431,"count":4},{"startOffset":10272,"endOffset":10279,"count":1},{"startOffset":10279,"endOffset":10360,"count":3},{"startOffset":10360,"endOffset":10425,"count":0}],"isBlockCoverage":true},{"functionName":"testString","ranges":[{"startOffset":10436,"endOffset":10701,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":748,"endOffset":990,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/reporters/console_reporter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8171,"count":1}],"isBlockCoverage":true},{"functionName":"ConsoleReporter","ranges":[{"startOffset":298,"endOffset":8170,"count":1}],"isBlockCoverage":true},{"functionName":"print","ranges":[{"startOffset":341,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"stackFilter","ranges":[{"startOffset":675,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"ConsoleReporter.setOptions","ranges":[{"startOffset":852,"endOffset":2023,"count":1},{"startOffset":1180,"endOffset":1188,"count":0},{"startOffset":1219,"endOffset":1267,"count":0},{"startOffset":1620,"endOffset":1701,"count":0}],"isBlockCoverage":true},{"functionName":"ConsoleReporter.jasmineStarted","ranges":[{"startOffset":2050,"endOffset":2332,"count":1},{"startOffset":2198,"endOffset":2286,"count":0}],"isBlockCoverage":true},{"functionName":"ConsoleReporter.jasmineDone","ranges":[{"startOffset":2356,"endOffset":4478,"count":1},{"startOffset":2547,"endOffset":2580,"count":0},{"startOffset":2630,"endOffset":2686,"count":0},{"startOffset":2737,"endOffset":2788,"count":0},{"startOffset":2875,"endOffset":2947,"count":0},{"startOffset":2980,"endOffset":3016,"count":0},{"startOffset":3055,"endOffset":3091,"count":0},{"startOffset":3144,"endOffset":3205,"count":0},{"startOffset":3304,"endOffset":3432,"count":0},{"startOffset":3623,"endOffset":3734,"count":0},{"startOffset":3766,"endOffset":3810,"count":0},{"startOffset":3860,"endOffset":3960,"count":0},{"startOffset":4015,"endOffset":4018,"count":0},{"startOffset":4169,"endOffset":4253,"count":0},{"startOffset":4310,"endOffset":4474,"count":0}],"isBlockCoverage":true},{"functionName":"ConsoleReporter.randomSeedReproductionCmd","ranges":[{"startOffset":4516,"endOffset":4587,"count":0}],"isBlockCoverage":false},{"functionName":"ConsoleReporter.specDone","ranges":[{"startOffset":4608,"endOffset":5089,"count":24},{"startOffset":4681,"endOffset":4801,"count":0},{"startOffset":4924,"endOffset":5085,"count":0}],"isBlockCoverage":true},{"functionName":"ConsoleReporter.suiteDone","ranges":[{"startOffset":5111,"endOffset":5271,"count":18},{"startOffset":5205,"endOffset":5267,"count":0}],"isBlockCoverage":true},{"functionName":"printNewline","ranges":[{"startOffset":5341,"endOffset":5387,"count":6}],"isBlockCoverage":true},{"functionName":"colored","ranges":[{"startOffset":5391,"endOffset":5488,"count":24},{"startOffset":5478,"endOffset":5483,"count":0}],"isBlockCoverage":true},{"functionName":"plural","ranges":[{"startOffset":5492,"endOffset":5566,"count":3},{"startOffset":5544,"endOffset":5549,"count":0}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":5570,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":5712,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"specFailureDetails","ranges":[{"startOffset":5957,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"suiteFailureDetails","ranges":[{"startOffset":6406,"endOffset":6551,"count":0}],"isBlockCoverage":false},{"functionName":"printFailedExpectations","ranges":[{"startOffset":6555,"endOffset":7747,"count":0}],"isBlockCoverage":false},{"functionName":"pendingSpecDetails","ranges":[{"startOffset":7751,"endOffset":8168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7269,"count":1}],"isBlockCoverage":true},{"functionName":"Loader","ranges":[{"startOffset":76,"endOffset":342,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":346,"endOffset":1552,"count":4},{"startOffset":426,"endOffset":456,"count":1},{"startOffset":458,"endOffset":1412,"count":3},{"startOffset":1412,"endOffset":1548,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":601,"endOffset":619,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":631,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1445,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"resolveImportSpecifier_","ranges":[{"startOffset":1556,"endOffset":2245,"count":3},{"startOffset":1800,"endOffset":1813,"count":0},{"startOffset":1858,"endOffset":1870,"count":0},{"startOffset":1913,"endOffset":1953,"count":0}],"isBlockCoverage":true},{"functionName":"requireShim","ranges":[{"startOffset":2249,"endOffset":2315,"count":1}],"isBlockCoverage":true},{"functionName":"importShim","ranges":[{"startOffset":2317,"endOffset":2381,"count":3}],"isBlockCoverage":true},{"functionName":"fixupImportException","ranges":[{"startOffset":2384,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"escapeStringForRegexp","ranges":[{"startOffset":6866,"endOffset":7242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/global_setup_or_teardown_runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1495,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":174,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"withGlobalErrorHandling","ranges":[{"startOffset":327,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"withTimeout","ranges":[{"startOffset":1006,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/parallel_runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13895,"count":1}],"isBlockCoverage":true},{"functionName":"ParallelRunner","ranges":[{"startOffset":1453,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"clearReporters","ranges":[{"startOffset":2531,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"randomizeTests","ranges":[{"startOffset":2602,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"seed","ranges":[{"startOffset":2733,"endOffset":2817,"count":0}],"isBlockCoverage":false},{"functionName":"addReporter","ranges":[{"startOffset":2857,"endOffset":3320,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":3899,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"execute2_","ranges":[{"startOffset":4379,"endOffset":6312,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkers_","ranges":[{"startOffset":6316,"endOffset":8063,"count":0}],"isBlockCoverage":false},{"functionName":"shutDownWorkers_","ranges":[{"startOffset":8067,"endOffset":8176,"count":0}],"isBlockCoverage":false},{"functionName":"runSpecFiles_","ranges":[{"startOffset":8180,"endOffset":8435,"count":0}],"isBlockCoverage":false},{"functionName":"runWorker_","ranges":[{"startOffset":8439,"endOffset":10633,"count":0}],"isBlockCoverage":false},{"functionName":"configureEnv","ranges":[{"startOffset":10637,"endOffset":11014,"count":0}],"isBlockCoverage":false},{"functionName":"handleReporterEvent_","ranges":[{"startOffset":11018,"endOffset":11452,"count":0}],"isBlockCoverage":false},{"functionName":"reportJasmineDone_","ranges":[{"startOffset":11456,"endOffset":12416,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError_","ranges":[{"startOffset":12420,"endOffset":13015,"count":0}],"isBlockCoverage":false},{"functionName":"addTopLevelError_","ranges":[{"startOffset":13019,"endOffset":13419,"count":0}],"isBlockCoverage":false},{"functionName":"formatErrorFromWorker","ranges":[{"startOffset":13423,"endOffset":13860,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"node:cluster","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1291,"count":1}],"isBlockCoverage":false}]},{"scriptId":"475","url":"node:internal/cluster/primary","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10121,"count":1}],"isBlockCoverage":false},{"functionName":"cluster.setupPrimary","ranges":[{"startOffset":1837,"endOffset":3454,"count":0}],"isBlockCoverage":false},{"functionName":"setupSettingsNT","ranges":[{"startOffset":3551,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerProcess","ranges":[{"startOffset":3626,"endOffset":4430,"count":0}],"isBlockCoverage":false},{"functionName":"removeWorker","ranges":[{"startOffset":4432,"endOffset":4667,"count":0}],"isBlockCoverage":false},{"functionName":"removeHandlesForWorker","ranges":[{"startOffset":4669,"endOffset":4832,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.fork","ranges":[{"startOffset":4849,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"emitForkNT","ranges":[{"startOffset":6462,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"cluster.disconnect","ranges":[{"startOffset":6548,"endOffset":6919,"count":0}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":7029,"endOffset":7198,"count":0}],"isBlockCoverage":false},{"functionName":"online","ranges":[{"startOffset":7200,"endOffset":7313,"count":0}],"isBlockCoverage":false},{"functionName":"exitedAfterDisconnect","ranges":[{"startOffset":7315,"endOffset":7443,"count":0}],"isBlockCoverage":false},{"functionName":"queryServer","ranges":[{"startOffset":7445,"endOffset":9017,"count":0}],"isBlockCoverage":false},{"functionName":"listening","ranges":[{"startOffset":9019,"endOffset":9299,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9454,"endOffset":9616,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":9618,"endOffset":9722,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.disconnect","ranges":[{"startOffset":9825,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.destroy","ranges":[{"startOffset":10012,"endOffset":10119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26950,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1919,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":3384,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5044,"endOffset":5533,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5535,"endOffset":6031,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6568,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6851,"endOffset":7215,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6872,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7351,"endOffset":8249,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8856,"endOffset":13596,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13739,"endOffset":13939,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":13941,"endOffset":19187,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19189,"endOffset":19409,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":19958,"endOffset":21127,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":21881,"endOffset":23367,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23370,"endOffset":23756,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24263,"endOffset":24727,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25219,"endOffset":25595,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25598,"endOffset":25821,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":25824,"endOffset":25986,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":25989,"endOffset":26177,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26180,"endOffset":26453,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26456,"endOffset":26819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31639,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2479,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2545,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2660,"endOffset":2727,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2734,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2904,"endOffset":4458,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4465,"endOffset":5211,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5218,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5737,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5803,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5921,"endOffset":6041,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":6048,"endOffset":6207,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6216,"endOffset":6631,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6633,"endOffset":8122,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":8245,"endOffset":8723,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8726,"endOffset":8816,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8819,"endOffset":9048,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":9050,"endOffset":9163,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9197,"endOffset":12764,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12768,"endOffset":12829,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12832,"endOffset":12882,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12915,"endOffset":13580,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13613,"endOffset":13667,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13702,"endOffset":13758,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13761,"endOffset":14758,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":14906,"endOffset":27023,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":27058,"endOffset":27368,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":27402,"endOffset":30322,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30325,"endOffset":30641,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30644,"endOffset":30845,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":30847,"endOffset":31514,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61899,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1522,"endOffset":1547,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":3904,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4250,"endOffset":4344,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4346,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":4732,"endOffset":4870,"count":50},{"startOffset":4827,"endOffset":4845,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4873,"endOffset":4956,"count":43}],"isBlockCoverage":true},{"functionName":"createServer","ranges":[{"startOffset":5157,"endOffset":5261,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5484,"endOffset":5885,"count":44},{"startOffset":5712,"endOffset":5776,"count":0},{"startOffset":5800,"endOffset":5845,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":5887,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":5964,"endOffset":6080,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":6574,"endOffset":7300,"count":44},{"startOffset":6642,"endOffset":6723,"count":0},{"startOffset":6800,"endOffset":6816,"count":1},{"startOffset":6818,"endOffset":6871,"count":1},{"startOffset":6871,"endOffset":7119,"count":43},{"startOffset":6899,"endOffset":6954,"count":0},{"startOffset":7193,"endOffset":7215,"count":0}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":7372,"endOffset":7975,"count":91},{"startOffset":7539,"endOffset":7973,"count":47},{"startOffset":7728,"endOffset":7969,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":7977,"endOffset":8317,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8096,"endOffset":8309,"count":30},{"startOffset":8198,"endOffset":8303,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":8569,"endOffset":13111,"count":47},{"startOffset":8629,"endOffset":8656,"count":0},{"startOffset":8684,"endOffset":8813,"count":0},{"startOffset":8883,"endOffset":9131,"count":0},{"startOffset":9193,"endOffset":9389,"count":1},{"startOffset":9337,"endOffset":9385,"count":0},{"startOffset":9951,"endOffset":9977,"count":0},{"startOffset":10383,"endOffset":10491,"count":3},{"startOffset":10491,"endOffset":11730,"count":44},{"startOffset":10527,"endOffset":11730,"count":0},{"startOffset":11817,"endOffset":11894,"count":0},{"startOffset":11895,"endOffset":11941,"count":0},{"startOffset":11943,"endOffset":12158,"count":0},{"startOffset":12662,"endOffset":12691,"count":3},{"startOffset":12693,"endOffset":12958,"count":3},{"startOffset":12726,"endOffset":12895,"count":0},{"startOffset":12927,"endOffset":12954,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":13284,"endOffset":13414,"count":1281},{"startOffset":13386,"endOffset":13408,"count":21}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":13534,"endOffset":14150,"count":30},{"startOffset":13648,"endOffset":13749,"count":0},{"startOffset":13776,"endOffset":13788,"count":0},{"startOffset":14066,"endOffset":14078,"count":0},{"startOffset":14105,"endOffset":14148,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13722,"endOffset":13743,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14153,"endOffset":14299,"count":30}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":14506,"endOffset":15014,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15096,"endOffset":15600,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":15634,"endOffset":16011,"count":43},{"startOffset":15760,"endOffset":15766,"count":0},{"startOffset":15800,"endOffset":15854,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16047,"endOffset":16653,"count":18},{"startOffset":16188,"endOffset":16296,"count":0},{"startOffset":16332,"endOffset":16354,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.address","ranges":[{"startOffset":16684,"endOffset":16728,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16814,"endOffset":16858,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16937,"endOffset":16993,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17103,"endOffset":17418,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17506,"endOffset":17586,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17673,"endOffset":17718,"count":504}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":17725,"endOffset":17971,"count":44},{"startOffset":17925,"endOffset":17969,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":18063,"endOffset":18292,"count":519},{"startOffset":18118,"endOffset":18134,"count":518},{"startOffset":18136,"endOffset":18228,"count":1},{"startOffset":18228,"endOffset":18290,"count":518},{"startOffset":18261,"endOffset":18290,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18203,"endOffset":18222,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":18319,"endOffset":18475,"count":30}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":18513,"endOffset":18863,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":18891,"endOffset":19225,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":19255,"endOffset":19439,"count":61},{"startOffset":19288,"endOffset":19307,"count":0},{"startOffset":19308,"endOffset":19323,"count":0},{"startOffset":19324,"endOffset":19354,"count":0},{"startOffset":19356,"endOffset":19385,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":19467,"endOffset":19653,"count":623},{"startOffset":19501,"endOffset":19520,"count":0},{"startOffset":19521,"endOffset":19536,"count":0},{"startOffset":19537,"endOffset":19567,"count":0},{"startOffset":19569,"endOffset":19598,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":19700,"endOffset":19799,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":19833,"endOffset":19980,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20012,"endOffset":21522,"count":30},{"startOffset":20309,"endOffset":20315,"count":0},{"startOffset":20535,"endOffset":20776,"count":0},{"startOffset":20817,"endOffset":21053,"count":0},{"startOffset":21272,"endOffset":21343,"count":0},{"startOffset":21365,"endOffset":21520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20610,"endOffset":20695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20997,"endOffset":21045,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":21551,"endOffset":21650,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":21685,"endOffset":21982,"count":86},{"startOffset":21767,"endOffset":21805,"count":0},{"startOffset":21832,"endOffset":21955,"count":43},{"startOffset":21914,"endOffset":21925,"count":0}],"isBlockCoverage":true},{"functionName":"protoGetter","ranges":[{"startOffset":21985,"endOffset":22166,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":22193,"endOffset":22284,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":22317,"endOffset":22383,"count":43}],"isBlockCoverage":true},{"functionName":"remoteFamily","ranges":[{"startOffset":22415,"endOffset":22479,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":22509,"endOffset":22569,"count":43}],"isBlockCoverage":true},{"functionName":"Socket._getsockname","ranges":[{"startOffset":22606,"endOffset":22882,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":22914,"endOffset":22979,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23009,"endOffset":23068,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23099,"endOffset":23162,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":23203,"endOffset":23250,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":23286,"endOffset":24198,"count":689},{"startOffset":23508,"endOffset":23852,"count":1},{"startOffset":23852,"endOffset":23933,"count":688},{"startOffset":23933,"endOffset":23989,"count":0},{"startOffset":23989,"endOffset":24043,"count":688},{"startOffset":24043,"endOffset":24079,"count":3},{"startOffset":24079,"endOffset":24136,"count":685},{"startOffset":24136,"endOffset":24158,"count":688},{"startOffset":24158,"endOffset":24196,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":23603,"endOffset":23717,"count":1}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":23724,"endOffset":23803,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":24229,"endOffset":24297,"count":3}],"isBlockCoverage":true},{"functionName":"Socket._write","ranges":[{"startOffset":24327,"endOffset":24408,"count":685}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":24601,"endOffset":24705,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":24737,"endOffset":25666,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":25671,"endOffset":26470,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":26473,"endOffset":28360,"count":44},{"startOffset":26728,"endOffset":27354,"count":0},{"startOffset":27380,"endOffset":27400,"count":0},{"startOffset":27627,"endOffset":27674,"count":0},{"startOffset":27742,"endOffset":27901,"count":0},{"startOffset":27914,"endOffset":28162,"count":0},{"startOffset":28191,"endOffset":28211,"count":0},{"startOffset":28236,"endOffset":28358,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":28363,"endOffset":30494,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":30523,"endOffset":31974,"count":44},{"startOffset":30932,"endOffset":30981,"count":0},{"startOffset":31127,"endOffset":31150,"count":0},{"startOffset":31156,"endOffset":31212,"count":0},{"startOffset":31263,"endOffset":31299,"count":0},{"startOffset":31323,"endOffset":31407,"count":0},{"startOffset":31537,"endOffset":31575,"count":0},{"startOffset":31765,"endOffset":31909,"count":0}],"isBlockCoverage":true},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":31977,"endOffset":32123,"count":1},{"startOffset":32038,"endOffset":32066,"count":0},{"startOffset":32071,"endOffset":32099,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":32125,"endOffset":35902,"count":44},{"startOffset":32243,"endOffset":32257,"count":0},{"startOffset":32355,"endOffset":32377,"count":0},{"startOffset":32379,"endOffset":32436,"count":0},{"startOffset":32455,"endOffset":32512,"count":0},{"startOffset":32613,"endOffset":32739,"count":0},{"startOffset":32815,"endOffset":32887,"count":0},{"startOffset":32994,"endOffset":33192,"count":0},{"startOffset":33348,"endOffset":33653,"count":43},{"startOffset":33653,"endOffset":33689,"count":1},{"startOffset":33689,"endOffset":33740,"count":0},{"startOffset":33740,"endOffset":33885,"count":1},{"startOffset":33909,"endOffset":33938,"count":1},{"startOffset":33939,"endOffset":33968,"count":1},{"startOffset":33969,"endOffset":33997,"count":1},{"startOffset":33999,"endOffset":34187,"count":1},{"startOffset":34217,"endOffset":34240,"count":1},{"startOffset":34241,"endOffset":34257,"count":1},{"startOffset":34258,"endOffset":34277,"count":1},{"startOffset":34279,"endOffset":34554,"count":0},{"startOffset":34554,"endOffset":35901,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33422,"endOffset":33635,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34608,"endOffset":35898,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":34647,"endOffset":35892,"count":1},{"startOffset":34935,"endOffset":34942,"count":0},{"startOffset":34959,"endOffset":35254,"count":0},{"startOffset":35275,"endOffset":35383,"count":0},{"startOffset":35433,"endOffset":35672,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":35904,"endOffset":38951,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":38953,"endOffset":39012,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":39038,"endOffset":39225,"count":8},{"startOffset":39072,"endOffset":39130,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.unref","ranges":[{"startOffset":39254,"endOffset":39447,"count":9},{"startOffset":39288,"endOffset":39348,"count":0}],"isBlockCoverage":true},{"functionName":"afterConnect","ranges":[{"startOffset":39451,"endOffset":41032,"count":44},{"startOffset":39621,"endOffset":39638,"count":0},{"startOffset":39804,"endOffset":39853,"count":0},{"startOffset":39890,"endOffset":39915,"count":0},{"startOffset":39967,"endOffset":39993,"count":1},{"startOffset":39995,"endOffset":40039,"count":1},{"startOffset":40069,"endOffset":40097,"count":1},{"startOffset":40099,"endOffset":40178,"count":1},{"startOffset":40448,"endOffset":40469,"count":0},{"startOffset":40471,"endOffset":40529,"count":0},{"startOffset":40533,"endOffset":41030,"count":0}],"isBlockCoverage":true},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":41034,"endOffset":42735,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":42737,"endOffset":42867,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":42869,"endOffset":43309,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":43311,"endOffset":44583,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":44694,"endOffset":44759,"count":43},{"startOffset":44749,"endOffset":44756,"count":0}],"isBlockCoverage":true},{"functionName":"createServerHandle","ranges":[{"startOffset":44827,"endOffset":46279,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":46281,"endOffset":48632,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":48699,"endOffset":48761,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":48764,"endOffset":48879,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":48882,"endOffset":50142,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":50171,"endOffset":53997,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":54000,"endOffset":54412,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":54494,"endOffset":54537,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":54612,"endOffset":54901,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":54904,"endOffset":56708,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":56857,"endOffset":57610,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":57639,"endOffset":58506,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":58548,"endOffset":58934,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":58938,"endOffset":59021,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":59080,"endOffset":59242,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59464,"endOffset":59500,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":59504,"endOffset":59545,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59624,"endOffset":59655,"count":2969}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":59659,"endOffset":59695,"count":77}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":59733,"endOffset":59974,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":60000,"endOffset":60098,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":60126,"endOffset":60225,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":60367,"endOffset":61036,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":61075,"endOffset":61316,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":61445,"endOffset":61547,"count":4}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":61551,"endOffset":61673,"count":4}],"isBlockCoverage":true}]},{"scriptId":"479","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7037,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1007,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1151,"endOffset":2006,"count":685},{"startOffset":1251,"endOffset":1418,"count":495},{"startOffset":1376,"endOffset":1394,"count":0},{"startOffset":1423,"endOffset":1437,"count":6},{"startOffset":1442,"endOffset":1506,"count":6},{"startOffset":1511,"endOffset":1523,"count":184},{"startOffset":1528,"endOffset":1589,"count":184},{"startOffset":1594,"endOffset":1656,"count":0},{"startOffset":1661,"endOffset":1673,"count":0},{"startOffset":1678,"endOffset":1691,"count":0},{"startOffset":1696,"endOffset":1711,"count":0},{"startOffset":1716,"endOffset":1780,"count":0},{"startOffset":1785,"endOffset":2000,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2008,"endOffset":2693,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2695,"endOffset":2933,"count":688}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2935,"endOffset":3574,"count":3},{"startOffset":3096,"endOffset":3193,"count":0},{"startOffset":3285,"endOffset":3398,"count":6}],"isBlockCoverage":true},{"functionName":"writeGeneric","ranges":[{"startOffset":3576,"endOffset":3781,"count":685}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3783,"endOffset":4086,"count":688},{"startOffset":3950,"endOffset":4001,"count":0}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4088,"endOffset":6019,"count":504},{"startOffset":4282,"endOffset":4302,"count":474},{"startOffset":4304,"endOffset":5040,"count":474},{"startOffset":4389,"endOffset":4648,"count":0},{"startOffset":4832,"endOffset":5019,"count":0},{"startOffset":5040,"endOffset":5061,"count":30},{"startOffset":5061,"endOffset":5078,"count":0},{"startOffset":5078,"endOffset":5409,"count":30},{"startOffset":5409,"endOffset":5598,"count":0},{"startOffset":5598,"endOffset":5683,"count":30},{"startOffset":5683,"endOffset":5750,"count":0},{"startOffset":5750,"endOffset":6017,"count":30},{"startOffset":5795,"endOffset":5835,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6021,"endOffset":6831,"count":19},{"startOffset":6092,"endOffset":6104,"count":0},{"startOffset":6410,"endOffset":6549,"count":9},{"startOffset":6549,"endOffset":6814,"count":10},{"startOffset":6654,"endOffset":6685,"count":0},{"startOffset":6719,"endOffset":6810,"count":0}],"isBlockCoverage":true}]},{"scriptId":"480","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3095,"count":1}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":524,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":666,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1114,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":1161,"endOffset":1462,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":1484,"endOffset":1564,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1575,"endOffset":1760,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":1764,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":1916,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1957,"endOffset":2001,"count":62}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":2005,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":2060,"endOffset":2433,"count":18},{"startOffset":2141,"endOffset":2161,"count":0},{"startOffset":2177,"endOffset":2192,"count":0},{"startOffset":2225,"endOffset":2252,"count":0},{"startOffset":2254,"endOffset":2334,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":2435,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2568,"endOffset":2818,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":2820,"endOffset":3004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28023,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2807,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3014,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4524,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4605,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5050,"endOffset":5615,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5617,"endOffset":5909,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5977,"endOffset":6387,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6413,"endOffset":9854,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9884,"endOffset":10680,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10684,"endOffset":11030,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11033,"endOffset":11675,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11708,"endOffset":12015,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12120,"endOffset":12561,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12565,"endOffset":13325,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13328,"endOffset":13712,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13715,"endOffset":14142,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14145,"endOffset":14283,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14286,"endOffset":14410,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14413,"endOffset":14610,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15181,"endOffset":18074,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18077,"endOffset":19216,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19218,"endOffset":19395,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19422,"endOffset":19990,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":19994,"endOffset":20048,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20078,"endOffset":20268,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20304,"endOffset":20614,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":20650,"endOffset":20798,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":20828,"endOffset":21002,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21041,"endOffset":21233,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21277,"endOffset":21477,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21522,"endOffset":21784,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":21820,"endOffset":22194,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22232,"endOffset":22609,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":22659,"endOffset":23266,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23318,"endOffset":23931,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":23935,"endOffset":24098,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24101,"endOffset":24265,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24268,"endOffset":24522,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24525,"endOffset":24640,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":24666,"endOffset":24773,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":24802,"endOffset":24911,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":24952,"endOffset":25009,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25050,"endOffset":25107,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25148,"endOffset":25205,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25246,"endOffset":25303,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25342,"endOffset":25411,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25451,"endOffset":25521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25640,"endOffset":25694,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25767,"endOffset":25823,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25975,"endOffset":26032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26108,"endOffset":26167,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26322,"endOffset":26379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26455,"endOffset":26514,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26665,"endOffset":26718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26790,"endOffset":26845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26996,"endOffset":27053,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27129,"endOffset":27188,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27294,"endOffset":27329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27438,"endOffset":27475,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27760,"endOffset":27796,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27800,"endOffset":27841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1849,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":477,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":581,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":678,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1325,"endOffset":1773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"node:internal/cluster/round_robin_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3453,"count":1}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle","ranges":[{"startOffset":376,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.add","ranges":[{"startOffset":1352,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.remove","ranges":[{"startOffset":2020,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.distribute","ranges":[{"startOffset":2422,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"RoundRobinHandle.handoff","ranges":[{"startOffset":2882,"endOffset":3451,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"node:internal/cluster/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1053,"count":1}],"isBlockCoverage":false},{"functionName":"sendHelper","ranges":[{"startOffset":163,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"internal","ranges":[{"startOffset":643,"endOffset":1052,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"node:internal/cluster/shared_handle","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1102,"count":1}],"isBlockCoverage":false},{"functionName":"SharedHandle","ranges":[{"startOffset":192,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.add","ranges":[{"startOffset":701,"endOffset":845,"count":0}],"isBlockCoverage":false},{"functionName":"SharedHandle.remove","ranges":[{"startOffset":880,"endOffset":1100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"node:internal/cluster/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1379,"count":1}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":280,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.kill","ranges":[{"startOffset":1009,"endOffset":1070,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.send","ranges":[{"startOffset":1097,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isDead","ranges":[{"startOffset":1207,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"Worker.isConnected","ranges":[{"startOffset":1330,"endOffset":1377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine/lib/randomize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"randomOrder","ranges":[{"startOffset":17,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"generateSeed","ranges":[{"startOffset":221,"endOffset":290,"count":0}],"isBlockCoverage":false},{"functionName":"jenkinsHash","ranges":[{"startOffset":551,"endOffset":801,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5055,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1640,"count":13}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1642,"endOffset":2110,"count":1},{"startOffset":1718,"endOffset":1753,"count":0},{"startOffset":1790,"endOffset":1819,"count":0},{"startOffset":1901,"endOffset":1946,"count":0}],"isBlockCoverage":true},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2259,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2479,"endOffset":3450,"count":2},{"startOffset":2548,"endOffset":2575,"count":0},{"startOffset":2612,"endOffset":2641,"count":0},{"startOffset":2723,"endOffset":2768,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3741,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4233,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4410,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4592,"endOffset":4731,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4773,"endOffset":4908,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4948,"endOffset":4998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6483,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2548,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3159,"endOffset":6155,"count":1},{"startOffset":3363,"endOffset":3721,"count":0},{"startOffset":4062,"endOffset":4088,"count":0},{"startOffset":4126,"endOffset":4684,"count":0},{"startOffset":4702,"endOffset":4730,"count":0},{"startOffset":4746,"endOffset":5009,"count":0},{"startOffset":5044,"endOffset":5174,"count":0},{"startOffset":5210,"endOffset":5411,"count":0},{"startOffset":5416,"endOffset":5433,"count":0},{"startOffset":5438,"endOffset":5478,"count":0},{"startOffset":5483,"endOffset":5530,"count":0},{"startOffset":5602,"endOffset":5630,"count":0},{"startOffset":5744,"endOffset":6034,"count":0},{"startOffset":6038,"endOffset":6154,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5947,"endOffset":6000,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6157,"endOffset":6430,"count":1},{"startOffset":6244,"endOffset":6292,"count":0},{"startOffset":6333,"endOffset":6384,"count":0}],"isBlockCoverage":true}]},{"scriptId":"491","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine-core/lib/jasmine-core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2537,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":175,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"bootWithoutGlobals","ranges":[{"startOffset":231,"endOffset":561,"count":1},{"startOffset":301,"endOffset":325,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports.boot","ranges":[{"startOffset":928,"endOffset":1111,"count":1},{"startOffset":1048,"endOffset":1090,"count":23}],"isBlockCoverage":true},{"functionName":"module.exports.noGlobals","ranges":[{"startOffset":1592,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2014,"endOffset":2310,"count":6},{"startOffset":2085,"endOffset":2308,"count":5},{"startOffset":2126,"endOffset":2180,"count":1},{"startOffset":2187,"endOffset":2298,"count":4},{"startOffset":2244,"endOffset":2285,"count":1}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/jasmine-core/lib/jasmine-core/jasmine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309372,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1145,"endOffset":4982,"count":1},{"startOffset":1377,"endOffset":1416,"count":0},{"startOffset":1450,"endOffset":1705,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequire","ranges":[{"startOffset":1709,"endOffset":1770,"count":102}],"isBlockCoverage":true},{"functionName":"getJasmineRequire.core","ranges":[{"startOffset":1801,"endOffset":4950,"count":1}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.requireMatchers","ranges":[{"startOffset":5033,"endOffset":5963,"count":1},{"startOffset":5895,"endOffset":5941,"count":32}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.base","ranges":[{"startOffset":5996,"endOffset":22473,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7790,"endOffset":7847,"count":64}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":7858,"endOffset":8004,"count":0}],"isBlockCoverage":false},{"functionName":"j$.getGlobal","ranges":[{"startOffset":8029,"endOffset":8071,"count":175}],"isBlockCoverage":true},{"functionName":"j$.getEnv","ranges":[{"startOffset":8234,"endOffset":8405,"count":2},{"startOffset":8303,"endOffset":8325,"count":1}],"isBlockCoverage":true},{"functionName":"j$.isArray_","ranges":[{"startOffset":8424,"endOffset":8481,"count":176}],"isBlockCoverage":true},{"functionName":"j$.isObject_","ranges":[{"startOffset":8501,"endOffset":8622,"count":40},{"startOffset":8566,"endOffset":8583,"count":20},{"startOffset":8584,"endOffset":8611,"count":20}],"isBlockCoverage":true},{"functionName":"j$.isString_","ranges":[{"startOffset":8642,"endOffset":8700,"count":54}],"isBlockCoverage":true},{"functionName":"j$.isNumber_","ranges":[{"startOffset":8720,"endOffset":8778,"count":1}],"isBlockCoverage":true},{"functionName":"j$.isFunction_","ranges":[{"startOffset":8800,"endOffset":8860,"count":196}],"isBlockCoverage":true},{"functionName":"j$.isAsyncFunction_","ranges":[{"startOffset":8887,"endOffset":8952,"count":28}],"isBlockCoverage":true},{"functionName":"j$.isGeneratorFunction_","ranges":[{"startOffset":8983,"endOffset":9052,"count":0}],"isBlockCoverage":false},{"functionName":"j$.isTypedArray_","ranges":[{"startOffset":9076,"endOffset":9468,"count":44}],"isBlockCoverage":true},{"functionName":"j$.isA_","ranges":[{"startOffset":9483,"endOffset":9577,"count":1057}],"isBlockCoverage":true},{"functionName":"j$.isError_","ranges":[{"startOffset":9596,"endOffset":9803,"count":52},{"startOffset":9657,"endOffset":9798,"count":0}],"isBlockCoverage":true},{"functionName":"j$.isAsymmetricEqualityTester_","ranges":[{"startOffset":9841,"endOffset":9927,"count":174},{"startOffset":9872,"endOffset":9914,"count":168},{"startOffset":9915,"endOffset":9922,"count":6}],"isBlockCoverage":true},{"functionName":"j$.getType_","ranges":[{"startOffset":9946,"endOffset":10018,"count":1057}],"isBlockCoverage":true},{"functionName":"j$.isDomNode","ranges":[{"startOffset":10038,"endOffset":10383,"count":96},{"startOffset":10161,"endOffset":10196,"count":0},{"startOffset":10255,"endOffset":10300,"count":84},{"startOffset":10301,"endOffset":10346,"count":0}],"isBlockCoverage":true},{"functionName":"j$.isMap","ranges":[{"startOffset":10399,"endOffset":10540,"count":59}],"isBlockCoverage":true},{"functionName":"j$.isSet","ranges":[{"startOffset":10556,"endOffset":10697,"count":69}],"isBlockCoverage":true},{"functionName":"j$.isWeakMap","ranges":[{"startOffset":10717,"endOffset":10862,"count":0}],"isBlockCoverage":false},{"functionName":"j$.isURL","ranges":[{"startOffset":10878,"endOffset":11019,"count":15}],"isBlockCoverage":true},{"functionName":"j$.isIterable_","ranges":[{"startOffset":11041,"endOffset":11108,"count":10}],"isBlockCoverage":true},{"functionName":"j$.isDataView","ranges":[{"startOffset":11129,"endOffset":11275,"count":0}],"isBlockCoverage":false},{"functionName":"j$.isPromise","ranges":[{"startOffset":11295,"endOffset":11377,"count":52}],"isBlockCoverage":true},{"functionName":"j$.isPromiseLike","ranges":[{"startOffset":11401,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"j$.fnNameFor","ranges":[{"startOffset":11486,"endOffset":11754,"count":6},{"startOffset":11553,"endOffset":11699,"count":0},{"startOffset":11721,"endOffset":11733,"count":0},{"startOffset":11734,"endOffset":11749,"count":0}],"isBlockCoverage":true},{"functionName":"j$.isPending_","ranges":[{"startOffset":11775,"endOffset":12017,"count":0}],"isBlockCoverage":false},{"functionName":"j$.any","ranges":[{"startOffset":12532,"endOffset":12583,"count":0}],"isBlockCoverage":false},{"functionName":"j$.anything","ranges":[{"startOffset":13024,"endOffset":13070,"count":0}],"isBlockCoverage":false},{"functionName":"j$.truthy","ranges":[{"startOffset":13502,"endOffset":13546,"count":0}],"isBlockCoverage":false},{"functionName":"j$.falsy","ranges":[{"startOffset":14004,"endOffset":14047,"count":0}],"isBlockCoverage":false},{"functionName":"j$.empty","ranges":[{"startOffset":14457,"endOffset":14500,"count":0}],"isBlockCoverage":false},{"functionName":"j$.is","ranges":[{"startOffset":14818,"endOffset":14870,"count":0}],"isBlockCoverage":false},{"functionName":"j$.notEmpty","ranges":[{"startOffset":15290,"endOffset":15336,"count":0}],"isBlockCoverage":false},{"functionName":"j$.objectContaining","ranges":[{"startOffset":15882,"endOffset":15948,"count":0}],"isBlockCoverage":false},{"functionName":"j$.stringMatching","ranges":[{"startOffset":16441,"endOffset":16509,"count":0}],"isBlockCoverage":false},{"functionName":"j$.stringContaining","ranges":[{"startOffset":16999,"endOffset":17069,"count":0}],"isBlockCoverage":false},{"functionName":"j$.arrayContaining","ranges":[{"startOffset":17566,"endOffset":17631,"count":0}],"isBlockCoverage":false},{"functionName":"j$.arrayWithExactContents","ranges":[{"startOffset":18153,"endOffset":18225,"count":0}],"isBlockCoverage":false},{"functionName":"j$.mapContaining","ranges":[{"startOffset":18830,"endOffset":18893,"count":0}],"isBlockCoverage":false},{"functionName":"j$.setContaining","ranges":[{"startOffset":19478,"endOffset":19541,"count":0}],"isBlockCoverage":false},{"functionName":"j$.isSpy","ranges":[{"startOffset":19774,"endOffset":19972,"count":104},{"startOffset":19820,"endOffset":19847,"count":0},{"startOffset":19909,"endOffset":19961,"count":16}],"isBlockCoverage":true},{"functionName":"j$.debugLog","ranges":[{"startOffset":20422,"endOffset":20472,"count":0}],"isBlockCoverage":false},{"functionName":"j$.spyOnGlobalErrorsAsync","ranges":[{"startOffset":22391,"endOffset":22470,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.util","ranges":[{"startOffset":22506,"endOffset":24990,"count":1}],"isBlockCoverage":true},{"functionName":"util.isUndefined","ranges":[{"startOffset":22562,"endOffset":22608,"count":171}],"isBlockCoverage":true},{"functionName":"util.clone","ranges":[{"startOffset":22626,"endOffset":22906,"count":254},{"startOffset":22709,"endOffset":22742,"count":84},{"startOffset":22742,"endOffset":22795,"count":170},{"startOffset":22795,"endOffset":22882,"count":502},{"startOffset":22882,"endOffset":22905,"count":170}],"isBlockCoverage":true},{"functionName":"util.cloneArgs","ranges":[{"startOffset":22928,"endOffset":23404,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22977,"endOffset":23398,"count":44},{"startOffset":23229,"endOffset":23258,"count":0},{"startOffset":23293,"endOffset":23342,"count":0}],"isBlockCoverage":true},{"functionName":"util.getPropertyDescriptor","ranges":[{"startOffset":23438,"endOffset":23693,"count":0}],"isBlockCoverage":false},{"functionName":"util.has","ranges":[{"startOffset":23709,"endOffset":23792,"count":175}],"isBlockCoverage":true},{"functionName":"errorWithStack","ranges":[{"startOffset":23819,"endOffset":24078,"count":1}],"isBlockCoverage":true},{"functionName":"callerFile","ranges":[{"startOffset":24083,"endOffset":24203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24227,"endOffset":24373,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24268,"endOffset":24368,"count":45},{"startOffset":24300,"endOffset":24340,"count":1}],"isBlockCoverage":true},{"functionName":"util.validateTimeout","ranges":[{"startOffset":24404,"endOffset":24971,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Spec","ranges":[{"startOffset":25023,"endOffset":35200,"count":1}],"isBlockCoverage":true},{"functionName":"Spec","ranges":[{"startOffset":25040,"endOffset":26309,"count":24},{"startOffset":25232,"endOffset":25248,"count":0},{"startOffset":25397,"endOffset":25402,"count":0},{"startOffset":25505,"endOffset":25578,"count":0},{"startOffset":25627,"endOffset":25675,"count":0},{"startOffset":25710,"endOffset":25726,"count":0},{"startOffset":25801,"endOffset":25807,"count":0},{"startOffset":25884,"endOffset":25932,"count":0},{"startOffset":25975,"endOffset":25991,"count":0},{"startOffset":26207,"endOffset":26224,"count":0},{"startOffset":26257,"endOffset":26286,"count":0}],"isBlockCoverage":true},{"functionName":"Spec.resultCallback","ranges":[{"startOffset":25235,"endOffset":25248,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.beforeAndAfterFns","ranges":[{"startOffset":25514,"endOffset":25578,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.userContext","ranges":[{"startOffset":25636,"endOffset":25675,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.onStart","ranges":[{"startOffset":25713,"endOffset":25726,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.getSpecName","ranges":[{"startOffset":25893,"endOffset":25932,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.onLateError","ranges":[{"startOffset":25978,"endOffset":25991,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.catchingExceptions","ranges":[{"startOffset":26063,"endOffset":26104,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.addExpectationResult","ranges":[{"startOffset":26351,"endOffset":26988,"count":45},{"startOffset":26534,"endOffset":26984,"count":0}],"isBlockCoverage":true},{"functionName":"Spec.setSpecProperty","ranges":[{"startOffset":27026,"endOffset":27152,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.execute","ranges":[{"startOffset":27182,"endOffset":29118,"count":24},{"startOffset":28935,"endOffset":28980,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":27306,"endOffset":27385,"count":24}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":27427,"endOffset":27801,"count":24}],"isBlockCoverage":true},{"functionName":"onException","ranges":[{"startOffset":28017,"endOffset":28045,"count":0}],"isBlockCoverage":false},{"functionName":"onMultipleDone","ranges":[{"startOffset":28069,"endOffset":28592,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":28612,"endOffset":28789,"count":24},{"startOffset":28665,"endOffset":28740,"count":0}],"isBlockCoverage":true},{"functionName":"Spec.reset","ranges":[{"startOffset":29146,"endOffset":31147,"count":24}],"isBlockCoverage":true},{"functionName":"handleException","ranges":[{"startOffset":31185,"endOffset":31589,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.pend","ranges":[{"startOffset":31713,"endOffset":31835,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.exclude","ranges":[{"startOffset":32068,"endOffset":32215,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.getResult","ranges":[{"startOffset":32247,"endOffset":32327,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.status","ranges":[{"startOffset":32356,"endOffset":32799,"count":24},{"startOffset":32432,"endOffset":32464,"count":0},{"startOffset":32494,"endOffset":32525,"count":0},{"startOffset":32621,"endOffset":32735,"count":0},{"startOffset":32743,"endOffset":32773,"count":0}],"isBlockCoverage":true},{"functionName":"Spec.getFullName","ranges":[{"startOffset":32833,"endOffset":32884,"count":24}],"isBlockCoverage":true},{"functionName":"Spec.addDeprecationWarning","ranges":[{"startOffset":32928,"endOffset":33144,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.debugLog","ranges":[{"startOffset":33175,"endOffset":33630,"count":0}],"isBlockCoverage":false},{"functionName":"extractCustomPendingMessage","ranges":[{"startOffset":33671,"endOffset":33944,"count":0}],"isBlockCoverage":false},{"functionName":"Spec.isPendingSpecException","ranges":[{"startOffset":34038,"endOffset":34176,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34328,"endOffset":35176,"count":24}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Order","ranges":[{"startOffset":35234,"endOffset":36406,"count":1}],"isBlockCoverage":true},{"functionName":"Order","ranges":[{"startOffset":35249,"endOffset":36387,"count":1},{"startOffset":35330,"endOffset":35336,"count":0},{"startOffset":35429,"endOffset":35442,"count":0}],"isBlockCoverage":true},{"functionName":"naturalOrder","ranges":[{"startOffset":35464,"endOffset":35520,"count":19}],"isBlockCoverage":true},{"functionName":"randomOrder","ranges":[{"startOffset":35526,"endOffset":35725,"count":0}],"isBlockCoverage":false},{"functionName":"generateSeed","ranges":[{"startOffset":35731,"endOffset":35808,"count":1}],"isBlockCoverage":true},{"functionName":"jenkinsHash","ranges":[{"startOffset":36089,"endOffset":36383,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Env","ranges":[{"startOffset":36438,"endOffset":66176,"count":1}],"isBlockCoverage":true},{"functionName":"Env","ranges":[{"startOffset":36685,"endOffset":65871,"count":1},{"startOffset":36731,"endOffset":36736,"count":0},{"startOffset":41322,"endOffset":41750,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37012,"endOffset":37082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37203,"endOffset":37383,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37258,"endOffset":37376,"count":1}],"isBlockCoverage":true},{"functionName":"getCurrentRunableId","ranges":[{"startOffset":37471,"endOffset":37566,"count":783},{"startOffset":37551,"endOffset":37557,"count":0}],"isBlockCoverage":true},{"functionName":"specFilter","ranges":[{"startOffset":40060,"endOffset":40101,"count":24}],"isBlockCoverage":true},{"functionName":"loadtimeErrorHandler","ranges":[{"startOffset":41385,"endOffset":41742,"count":0}],"isBlockCoverage":false},{"functionName":"Env.configure","ranges":[{"startOffset":41942,"endOffset":42925,"count":2},{"startOffset":42000,"endOffset":42111,"count":0},{"startOffset":42536,"endOffset":42599,"count":0},{"startOffset":42654,"endOffset":42705,"count":0},{"startOffset":42770,"endOffset":42919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42356,"endOffset":42496,"count":12},{"startOffset":42429,"endOffset":42488,"count":4}],"isBlockCoverage":true},{"functionName":"Env.configuration","ranges":[{"startOffset":43135,"endOffset":43291,"count":43},{"startOffset":43210,"endOffset":43264,"count":387}],"isBlockCoverage":true},{"functionName":"Env.setDefaultSpyStrategy","ranges":[{"startOffset":43327,"endOffset":43427,"count":0}],"isBlockCoverage":false},{"functionName":"Env.addSpyStrategy","ranges":[{"startOffset":43456,"endOffset":43539,"count":0}],"isBlockCoverage":false},{"functionName":"Env.addCustomEqualityTester","ranges":[{"startOffset":43577,"endOffset":43662,"count":0}],"isBlockCoverage":false},{"functionName":"Env.addMatchers","ranges":[{"startOffset":43688,"endOffset":43776,"count":0}],"isBlockCoverage":false},{"functionName":"Env.addAsyncMatchers","ranges":[{"startOffset":43807,"endOffset":43900,"count":0}],"isBlockCoverage":false},{"functionName":"Env.addCustomObjectFormatter","ranges":[{"startOffset":43939,"endOffset":44031,"count":0}],"isBlockCoverage":false},{"functionName":"expectationFactory","ranges":[{"startOffset":44174,"endOffset":44566,"count":45}],"isBlockCoverage":true},{"functionName":"addExpectationResult","ranges":[{"startOffset":44447,"endOffset":44560,"count":45}],"isBlockCoverage":true},{"functionName":"handleThrowUnlessFailure","ranges":[{"startOffset":44606,"endOffset":45743,"count":0}],"isBlockCoverage":false},{"functionName":"throwUnlessFactory","ranges":[{"startOffset":45777,"endOffset":46052,"count":0}],"isBlockCoverage":false},{"functionName":"throwUnlessAsyncFactory","ranges":[{"startOffset":46091,"endOffset":46381,"count":0}],"isBlockCoverage":false},{"functionName":"recordLateError","ranges":[{"startOffset":46538,"endOffset":46947,"count":0}],"isBlockCoverage":false},{"functionName":"recordLateExpectation","ranges":[{"startOffset":46953,"endOffset":47949,"count":0}],"isBlockCoverage":false},{"functionName":"routeLateFailure","ranges":[{"startOffset":47955,"endOffset":48678,"count":0}],"isBlockCoverage":false},{"functionName":"asyncExpectationFactory","ranges":[{"startOffset":48716,"endOffset":49254,"count":0}],"isBlockCoverage":false},{"functionName":"Env.deprecated","ranges":[{"startOffset":50181,"endOffset":50349,"count":0}],"isBlockCoverage":false},{"functionName":"queueRunnerFactory","ranges":[{"startOffset":50356,"endOffset":50852,"count":129},{"startOffset":50697,"endOffset":50799,"count":86}],"isBlockCoverage":true},{"functionName":"options.onException","ranges":[{"startOffset":50708,"endOffset":50799,"count":0}],"isBlockCoverage":false},{"functionName":"Env.topSuite","ranges":[{"startOffset":51408,"endOffset":51495,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51744,"endOffset":51864,"count":86}],"isBlockCoverage":true},{"functionName":"totalSpecsDefined","ranges":[{"startOffset":51966,"endOffset":52002,"count":1}],"isBlockCoverage":true},{"functionName":"focusedRunables","ranges":[{"startOffset":52027,"endOffset":52061,"count":2}],"isBlockCoverage":true},{"functionName":"getConfig","ranges":[{"startOffset":52146,"endOffset":52158,"count":1}],"isBlockCoverage":true},{"functionName":"Env.setParallelLoadingState","ranges":[{"startOffset":52225,"endOffset":52284,"count":0}],"isBlockCoverage":false},{"functionName":"Env.parallelReset","ranges":[{"startOffset":52312,"endOffset":52396,"count":0}],"isBlockCoverage":false},{"functionName":"Env.execute","ranges":[{"startOffset":53562,"endOffset":53811,"count":1},{"startOffset":53656,"endOffset":53702,"count":0}],"isBlockCoverage":true},{"functionName":"Env.addReporter","ranges":[{"startOffset":54069,"endOffset":54265,"count":1},{"startOffset":54127,"endOffset":54215,"count":0}],"isBlockCoverage":true},{"functionName":"Env.provideFallbackReporter","ranges":[{"startOffset":54555,"endOffset":54641,"count":0}],"isBlockCoverage":false},{"functionName":"Env.clearReporters","ranges":[{"startOffset":54793,"endOffset":54968,"count":0}],"isBlockCoverage":false},{"functionName":"Env.allowRespy","ranges":[{"startOffset":55347,"endOffset":55424,"count":0}],"isBlockCoverage":false},{"functionName":"Env.spyOn","ranges":[{"startOffset":55444,"endOffset":55582,"count":0}],"isBlockCoverage":false},{"functionName":"Env.spyOnProperty","ranges":[{"startOffset":55610,"endOffset":55756,"count":0}],"isBlockCoverage":false},{"functionName":"Env.spyOnAllFunctions","ranges":[{"startOffset":55788,"endOffset":55938,"count":0}],"isBlockCoverage":false},{"functionName":"Env.createSpy","ranges":[{"startOffset":55962,"endOffset":56066,"count":0}],"isBlockCoverage":false},{"functionName":"Env.createSpyObj","ranges":[{"startOffset":56093,"endOffset":56272,"count":20}],"isBlockCoverage":true},{"functionName":"Env.spyOnGlobalErrorsAsync","ranges":[{"startOffset":56309,"endOffset":57411,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIsNotNested","ranges":[{"startOffset":57418,"endOffset":57678,"count":49},{"startOffset":57555,"endOffset":57672,"count":0}],"isBlockCoverage":true},{"functionName":"ensureNonParallel","ranges":[{"startOffset":57684,"endOffset":57842,"count":0}],"isBlockCoverage":false},{"functionName":"ensureNonParallelOrInDescribe","ranges":[{"startOffset":57848,"endOffset":58001,"count":2},{"startOffset":57925,"endOffset":57954,"count":0},{"startOffset":57956,"endOffset":57995,"count":0}],"isBlockCoverage":true},{"functionName":"ensureNonParallelOrInHelperOrInDescribe","ranges":[{"startOffset":58007,"endOffset":58308,"count":5},{"startOffset":58109,"endOffset":58138,"count":0},{"startOffset":58140,"endOffset":58302,"count":0}],"isBlockCoverage":true},{"functionName":"validateConfigForParallel","ranges":[{"startOffset":58314,"endOffset":58615,"count":0}],"isBlockCoverage":false},{"functionName":"Env.describe","ranges":[{"startOffset":58637,"endOffset":58855,"count":18}],"isBlockCoverage":true},{"functionName":"Env.xdescribe","ranges":[{"startOffset":58879,"endOffset":59099,"count":0}],"isBlockCoverage":false},{"functionName":"Env.fdescribe","ranges":[{"startOffset":59123,"endOffset":59381,"count":0}],"isBlockCoverage":false},{"functionName":"specResultCallback","ranges":[{"startOffset":59388,"endOffset":59652,"count":24},{"startOffset":59559,"endOffset":59603,"count":0}],"isBlockCoverage":true},{"functionName":"specStarted","ranges":[{"startOffset":59658,"endOffset":59848,"count":24}],"isBlockCoverage":true},{"functionName":"reportSpecDone","ranges":[{"startOffset":59854,"endOffset":59981,"count":24}],"isBlockCoverage":true},{"functionName":"Env.it","ranges":[{"startOffset":59997,"endOffset":60192,"count":24}],"isBlockCoverage":true},{"functionName":"Env.xit","ranges":[{"startOffset":60210,"endOffset":60407,"count":0}],"isBlockCoverage":false},{"functionName":"Env.fit","ranges":[{"startOffset":60425,"endOffset":60654,"count":0}],"isBlockCoverage":false},{"functionName":"Env.setSpecProperty","ranges":[{"startOffset":60997,"endOffset":61312,"count":0}],"isBlockCoverage":false},{"functionName":"Env.setSuiteProperty","ranges":[{"startOffset":61658,"endOffset":61896,"count":0}],"isBlockCoverage":false},{"functionName":"Env.debugLog","ranges":[{"startOffset":61919,"endOffset":62158,"count":0}],"isBlockCoverage":false},{"functionName":"Env.expect","ranges":[{"startOffset":62179,"endOffset":62491,"count":45},{"startOffset":62266,"endOffset":62426,"count":0}],"isBlockCoverage":true},{"functionName":"Env.expectAsync","ranges":[{"startOffset":62517,"endOffset":62839,"count":0}],"isBlockCoverage":false},{"functionName":"Env.throwUnless","ranges":[{"startOffset":62865,"endOffset":62986,"count":0}],"isBlockCoverage":false},{"functionName":"Env.throwUnlessAsync","ranges":[{"startOffset":63017,"endOffset":63143,"count":0}],"isBlockCoverage":false},{"functionName":"Env.beforeEach","ranges":[{"startOffset":63168,"endOffset":63373,"count":3}],"isBlockCoverage":true},{"functionName":"Env.beforeAll","ranges":[{"startOffset":63397,"endOffset":63869,"count":2}],"isBlockCoverage":true},{"functionName":"Env.afterEach","ranges":[{"startOffset":63893,"endOffset":64093,"count":2}],"isBlockCoverage":true},{"functionName":"Env.afterAll","ranges":[{"startOffset":64116,"endOffset":64589,"count":0}],"isBlockCoverage":false},{"functionName":"Env.pending","ranges":[{"startOffset":64611,"endOffset":64783,"count":0}],"isBlockCoverage":false},{"functionName":"Env.fail","ranges":[{"startOffset":64802,"endOffset":65757,"count":0}],"isBlockCoverage":false},{"functionName":"Env.cleanup_","ranges":[{"startOffset":65780,"endOffset":65866,"count":1}],"isBlockCoverage":true},{"functionName":"callerCallerFilename","ranges":[{"startOffset":65875,"endOffset":66159,"count":42}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.JsApiReporter","ranges":[{"startOffset":66218,"endOffset":69470,"count":1}],"isBlockCoverage":true},{"functionName":"JsApiReporter","ranges":[{"startOffset":66492,"endOffset":69443,"count":1},{"startOffset":66558,"endOffset":66575,"count":0}],"isBlockCoverage":true},{"functionName":"JsApiReporter.jasmineStarted","ranges":[{"startOffset":66711,"endOffset":66803,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.jasmineDone","ranges":[{"startOffset":66853,"endOffset":67007,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.status","ranges":[{"startOffset":67238,"endOffset":67277,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.suiteStarted","ranges":[{"startOffset":67352,"endOffset":67415,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.suiteDone","ranges":[{"startOffset":67439,"endOffset":67489,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.suiteResults","ranges":[{"startOffset":67899,"endOffset":67980,"count":0}],"isBlockCoverage":false},{"functionName":"storeSuite","ranges":[{"startOffset":67987,"endOffset":68088,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.suites","ranges":[{"startOffset":68337,"endOffset":68381,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.specDone","ranges":[{"startOffset":68427,"endOffset":68477,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.specResults","ranges":[{"startOffset":68882,"endOffset":68962,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.specs","ranges":[{"startOffset":69127,"endOffset":69165,"count":0}],"isBlockCoverage":false},{"functionName":"JsApiReporter.executionTime","ranges":[{"startOffset":69392,"endOffset":69438,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Any","ranges":[{"startOffset":69502,"endOffset":70742,"count":1}],"isBlockCoverage":true},{"functionName":"Any","ranges":[{"startOffset":69519,"endOffset":69833,"count":0}],"isBlockCoverage":false},{"functionName":"Any.asymmetricMatch","ranges":[{"startOffset":69869,"endOffset":70600,"count":0}],"isBlockCoverage":false},{"functionName":"Any.jasmineToString","ranges":[{"startOffset":70637,"endOffset":70724,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Anything","ranges":[{"startOffset":70779,"endOffset":71052,"count":1}],"isBlockCoverage":true},{"functionName":"Anything","ranges":[{"startOffset":70796,"endOffset":70818,"count":0}],"isBlockCoverage":false},{"functionName":"Anything.asymmetricMatch","ranges":[{"startOffset":70859,"endOffset":70938,"count":0}],"isBlockCoverage":false},{"functionName":"Anything.jasmineToString","ranges":[{"startOffset":70980,"endOffset":71029,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ArrayContaining","ranges":[{"startOffset":71096,"endOffset":72110,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayContaining","ranges":[{"startOffset":71113,"endOffset":71177,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayContaining.asymmetricMatch","ranges":[{"startOffset":71225,"endOffset":71948,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayContaining.jasmineToString","ranges":[{"startOffset":71997,"endOffset":72080,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ArrayWithExactContents","ranges":[{"startOffset":72161,"endOffset":72957,"count":1}],"isBlockCoverage":true},{"functionName":"ArrayWithExactContents","ranges":[{"startOffset":72178,"endOffset":72249,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayWithExactContents.asymmetricMatch","ranges":[{"startOffset":72304,"endOffset":72774,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayWithExactContents.jasmineToString","ranges":[{"startOffset":72830,"endOffset":72920,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Empty","ranges":[{"startOffset":72991,"endOffset":73496,"count":1}],"isBlockCoverage":true},{"functionName":"Empty","ranges":[{"startOffset":73008,"endOffset":73027,"count":0}],"isBlockCoverage":false},{"functionName":"Empty.asymmetricMatch","ranges":[{"startOffset":73065,"endOffset":73391,"count":0}],"isBlockCoverage":false},{"functionName":"Empty.jasmineToString","ranges":[{"startOffset":73430,"endOffset":73476,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Falsy","ranges":[{"startOffset":73530,"endOffset":73749,"count":1}],"isBlockCoverage":true},{"functionName":"Falsy","ranges":[{"startOffset":73547,"endOffset":73566,"count":0}],"isBlockCoverage":false},{"functionName":"Falsy.asymmetricMatch","ranges":[{"startOffset":73604,"endOffset":73644,"count":0}],"isBlockCoverage":false},{"functionName":"Falsy.jasmineToString","ranges":[{"startOffset":73683,"endOffset":73729,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Is","ranges":[{"startOffset":73780,"endOffset":74056,"count":1}],"isBlockCoverage":true},{"functionName":"Is","ranges":[{"startOffset":73812,"endOffset":73874,"count":0}],"isBlockCoverage":false},{"functionName":"asymmetricMatch","ranges":[{"startOffset":73880,"endOffset":73951,"count":0}],"isBlockCoverage":false},{"functionName":"jasmineToString","ranges":[{"startOffset":73957,"endOffset":74036,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.MapContaining","ranges":[{"startOffset":74098,"endOffset":75126,"count":1}],"isBlockCoverage":true},{"functionName":"MapContaining","ranges":[{"startOffset":74115,"endOffset":74346,"count":0}],"isBlockCoverage":false},{"functionName":"MapContaining.asymmetricMatch","ranges":[{"startOffset":74392,"endOffset":74970,"count":0}],"isBlockCoverage":false},{"functionName":"MapContaining.jasmineToString","ranges":[{"startOffset":75017,"endOffset":75098,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.NotEmpty","ranges":[{"startOffset":75163,"endOffset":75684,"count":1}],"isBlockCoverage":true},{"functionName":"NotEmpty","ranges":[{"startOffset":75180,"endOffset":75202,"count":0}],"isBlockCoverage":false},{"functionName":"NotEmpty.asymmetricMatch","ranges":[{"startOffset":75243,"endOffset":75570,"count":0}],"isBlockCoverage":false},{"functionName":"NotEmpty.jasmineToString","ranges":[{"startOffset":75612,"endOffset":75661,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ObjectContaining","ranges":[{"startOffset":75729,"endOffset":77325,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectContaining","ranges":[{"startOffset":75746,"endOffset":75811,"count":0}],"isBlockCoverage":false},{"functionName":"hasProperty","ranges":[{"startOffset":75815,"endOffset":76077,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectContaining.asymmetricMatch","ranges":[{"startOffset":76126,"endOffset":76638,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectContaining.valuesForDiff_","ranges":[{"startOffset":76687,"endOffset":77160,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectContaining.jasmineToString","ranges":[{"startOffset":77210,"endOffset":77294,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.SetContaining","ranges":[{"startOffset":77367,"endOffset":78398,"count":1}],"isBlockCoverage":true},{"functionName":"SetContaining","ranges":[{"startOffset":77384,"endOffset":77615,"count":0}],"isBlockCoverage":false},{"functionName":"SetContaining.asymmetricMatch","ranges":[{"startOffset":77661,"endOffset":78242,"count":0}],"isBlockCoverage":false},{"functionName":"SetContaining.jasmineToString","ranges":[{"startOffset":78289,"endOffset":78370,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.StringContaining","ranges":[{"startOffset":78443,"endOffset":79036,"count":1}],"isBlockCoverage":true},{"functionName":"StringContaining","ranges":[{"startOffset":78460,"endOffset":78624,"count":0}],"isBlockCoverage":false},{"functionName":"StringContaining.asymmetricMatch","ranges":[{"startOffset":78673,"endOffset":78873,"count":0}],"isBlockCoverage":false},{"functionName":"StringContaining.jasmineToString","ranges":[{"startOffset":78923,"endOffset":79005,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.StringMatching","ranges":[{"startOffset":79079,"endOffset":79569,"count":1}],"isBlockCoverage":true},{"functionName":"StringMatching","ranges":[{"startOffset":79096,"endOffset":79312,"count":0}],"isBlockCoverage":false},{"functionName":"StringMatching.asymmetricMatch","ranges":[{"startOffset":79359,"endOffset":79416,"count":0}],"isBlockCoverage":false},{"functionName":"StringMatching.jasmineToString","ranges":[{"startOffset":79464,"endOffset":79540,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Truthy","ranges":[{"startOffset":79604,"endOffset":79829,"count":1}],"isBlockCoverage":true},{"functionName":"Truthy","ranges":[{"startOffset":79621,"endOffset":79641,"count":0}],"isBlockCoverage":false},{"functionName":"Truthy.asymmetricMatch","ranges":[{"startOffset":79680,"endOffset":79721,"count":0}],"isBlockCoverage":false},{"functionName":"Truthy.jasmineToString","ranges":[{"startOffset":79761,"endOffset":79808,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.buildExpectationResult","ranges":[{"startOffset":79964,"endOffset":82486,"count":1}],"isBlockCoverage":true},{"functionName":"buildExpectationResult","ranges":[{"startOffset":79981,"endOffset":82450,"count":45},{"startOffset":80986,"endOffset":80990,"count":0},{"startOffset":81063,"endOffset":81635,"count":0}],"isBlockCoverage":true},{"functionName":"message","ranges":[{"startOffset":81661,"endOffset":81926,"count":45},{"startOffset":81743,"endOffset":81925,"count":0}],"isBlockCoverage":true},{"functionName":"stack","ranges":[{"startOffset":81932,"endOffset":82446,"count":45},{"startOffset":82005,"endOffset":82445,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.CallTracker","ranges":[{"startOffset":82526,"endOffset":85457,"count":1}],"isBlockCoverage":true},{"functionName":"CallTracker","ranges":[{"startOffset":82599,"endOffset":85432,"count":80}],"isBlockCoverage":true},{"functionName":"CallTracker.track","ranges":[{"startOffset":82683,"endOffset":82827,"count":21},{"startOffset":82729,"endOffset":82794,"count":0}],"isBlockCoverage":true},{"functionName":"CallTracker.any","ranges":[{"startOffset":82998,"endOffset":83045,"count":8}],"isBlockCoverage":true},{"functionName":"CallTracker.count","ranges":[{"startOffset":83222,"endOffset":83267,"count":8}],"isBlockCoverage":true},{"functionName":"CallTracker.argsFor","ranges":[{"startOffset":83536,"endOffset":83628,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.thisFor","ranges":[{"startOffset":83902,"endOffset":84003,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.all","ranges":[{"startOffset":84178,"endOffset":84216,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.allArgs","ranges":[{"startOffset":84442,"endOffset":84497,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84478,"endOffset":84489,"count":17}],"isBlockCoverage":true},{"functionName":"CallTracker.first","ranges":[{"startOffset":84679,"endOffset":84720,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.mostRecent","ranges":[{"startOffset":84918,"endOffset":84974,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.reset","ranges":[{"startOffset":85130,"endOffset":85166,"count":0}],"isBlockCoverage":false},{"functionName":"CallTracker.saveArgumentsByValue","ranges":[{"startOffset":85380,"endOffset":85427,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.clearStack","ranges":[{"startOffset":85496,"endOffset":87975,"count":1}],"isBlockCoverage":true},{"functionName":"browserQueueMicrotaskImpl","ranges":[{"startOffset":85547,"endOffset":85903,"count":0}],"isBlockCoverage":false},{"functionName":"nodeQueueMicrotaskImpl","ranges":[{"startOffset":85907,"endOffset":86051,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":86000,"endOffset":86046,"count":129}],"isBlockCoverage":true},{"functionName":"messageChannelImpl","ranges":[{"startOffset":86055,"endOffset":86897,"count":0}],"isBlockCoverage":false},{"functionName":"getClearStack","ranges":[{"startOffset":86901,"endOffset":87948,"count":1},{"startOffset":87110,"endOffset":87184,"count":0},{"startOffset":87369,"endOffset":87944,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Clock","ranges":[{"startOffset":88009,"endOffset":93791,"count":1}],"isBlockCoverage":true},{"functionName":"Clock","ranges":[{"startOffset":88436,"endOffset":93564,"count":1}],"isBlockCoverage":true},{"functionName":"Clock.install","ranges":[{"startOffset":89169,"endOffset":89584,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.uninstall","ranges":[{"startOffset":89771,"endOffset":89961,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.withMock","ranges":[{"startOffset":90350,"endOffset":90480,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.mockDate","ranges":[{"startOffset":90729,"endOffset":90795,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.setTimeout","ranges":[{"startOffset":90820,"endOffset":90963,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.setInterval","ranges":[{"startOffset":90989,"endOffset":91133,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.clearTimeout","ranges":[{"startOffset":91160,"endOffset":91258,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.clearInterval","ranges":[{"startOffset":91286,"endOffset":91385,"count":0}],"isBlockCoverage":false},{"functionName":"Clock.tick","ranges":[{"startOffset":91619,"endOffset":91906,"count":0}],"isBlockCoverage":false},{"functionName":"originalTimingFunctionsIntact","ranges":[{"startOffset":91931,"endOffset":92268,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":92274,"endOffset":92390,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":92396,"endOffset":92811,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":92817,"endOffset":92914,"count":0}],"isBlockCoverage":false},{"functionName":"setInterval","ranges":[{"startOffset":92920,"endOffset":93360,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":93366,"endOffset":93464,"count":0}],"isBlockCoverage":false},{"functionName":"argSlice","ranges":[{"startOffset":93470,"endOffset":93560,"count":0}],"isBlockCoverage":false},{"functionName":"FakeTimeout","ranges":[{"startOffset":93613,"endOffset":93638,"count":0}],"isBlockCoverage":false},{"functionName":"FakeTimeout.ref","ranges":[{"startOffset":93670,"endOffset":93703,"count":0}],"isBlockCoverage":false},{"functionName":"FakeTimeout.unref","ranges":[{"startOffset":93738,"endOffset":93771,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.CompleteOnFirstErrorSkipPolicy","ranges":[{"startOffset":93850,"endOffset":95152,"count":1}],"isBlockCoverage":true},{"functionName":"CompleteOnFirstErrorSkipPolicy","ranges":[{"startOffset":93867,"endOffset":93995,"count":43}],"isBlockCoverage":true},{"functionName":"CompleteOnFirstErrorSkipPolicy.skipTo","ranges":[{"startOffset":94049,"endOffset":94218,"count":172},{"startOffset":94158,"endOffset":94180,"count":129},{"startOffset":94198,"endOffset":94200,"count":0}],"isBlockCoverage":true},{"functionName":"CompleteOnFirstErrorSkipPolicy.fnErrored","ranges":[{"startOffset":94276,"endOffset":94326,"count":0}],"isBlockCoverage":false},{"functionName":"CompleteOnFirstErrorSkipPolicy.shouldSkip_","ranges":[{"startOffset":94386,"endOffset":94850,"count":129},{"startOffset":94466,"endOffset":94700,"count":0},{"startOffset":94701,"endOffset":94735,"count":0},{"startOffset":94770,"endOffset":94839,"count":0}],"isBlockCoverage":true},{"functionName":"isDescendent","ranges":[{"startOffset":94855,"endOffset":95108,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.DelayedFunctionScheduler","ranges":[{"startOffset":95397,"endOffset":100398,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedFunctionScheduler","ranges":[{"startOffset":95414,"endOffset":97905,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedFunctionScheduler.runScheduledFunctions_","ranges":[{"startOffset":97969,"endOffset":99563,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedFunctionScheduler.reschedule_","ranges":[{"startOffset":99617,"endOffset":99853,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedFunctionScheduler.deleteFromLookup_","ranges":[{"startOffset":99913,"endOffset":100144,"count":0}],"isBlockCoverage":false},{"functionName":"indexOfFirstToPass","ranges":[{"startOffset":100149,"endOffset":100360,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Deprecator","ranges":[{"startOffset":100437,"endOffset":102749,"count":1}],"isBlockCoverage":true},{"functionName":"Deprecator","ranges":[{"startOffset":100454,"endOffset":100574,"count":1}],"isBlockCoverage":true},{"functionName":"Deprecator.verboseDeprecations","ranges":[{"startOffset":100781,"endOffset":100833,"count":0}],"isBlockCoverage":false},{"functionName":"Deprecator.addDeprecationWarning","ranges":[{"startOffset":101028,"endOffset":101403,"count":0}],"isBlockCoverage":false},{"functionName":"Deprecator.log_","ranges":[{"startOffset":101436,"endOffset":102073,"count":0}],"isBlockCoverage":false},{"functionName":"Deprecator.stackTrace_","ranges":[{"startOffset":102113,"endOffset":102259,"count":0}],"isBlockCoverage":false},{"functionName":"Deprecator.report_","ranges":[{"startOffset":102295,"endOffset":102724,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.errors","ranges":[{"startOffset":102784,"endOffset":102999,"count":1}],"isBlockCoverage":true},{"functionName":"ExpectationFailed","ranges":[{"startOffset":102799,"endOffset":102830,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ExceptionFormatter","ranges":[{"startOffset":103046,"endOffset":106157,"count":1}],"isBlockCoverage":true},{"functionName":"ExceptionFormatter","ranges":[{"startOffset":103256,"endOffset":106125,"count":45},{"startOffset":103334,"endOffset":103356,"count":0}],"isBlockCoverage":true},{"functionName":"ExceptionFormatter.message","ranges":[{"startOffset":103403,"endOffset":104036,"count":0}],"isBlockCoverage":false},{"functionName":"ExceptionFormatter.stack","ranges":[{"startOffset":104056,"endOffset":104307,"count":0}],"isBlockCoverage":false},{"functionName":"ExceptionFormatter.stack_","ranges":[{"startOffset":104400,"endOffset":105195,"count":0}],"isBlockCoverage":false},{"functionName":"filterJasmine","ranges":[{"startOffset":105202,"endOffset":105644,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperties","ranges":[{"startOffset":105650,"endOffset":106121,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Expectation","ranges":[{"startOffset":106197,"endOffset":113703,"count":1}],"isBlockCoverage":true},{"functionName":"Expectation","ranges":[{"startOffset":106304,"endOffset":106606,"count":45},{"startOffset":106433,"endOffset":106438,"count":0},{"startOffset":106486,"endOffset":106602,"count":0}],"isBlockCoverage":true},{"functionName":"withContext","ranges":[{"startOffset":106872,"endOffset":106969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":107233,"endOffset":107301,"count":4}],"isBlockCoverage":true},{"functionName":"AsyncExpectation","ranges":[{"startOffset":108474,"endOffset":108802,"count":0}],"isBlockCoverage":false},{"functionName":"withContext","ranges":[{"startOffset":109096,"endOffset":109193,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":109545,"endOffset":109614,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":110039,"endOffset":110115,"count":0}],"isBlockCoverage":false},{"functionName":"wrapSyncCompare","ranges":[{"startOffset":110125,"endOffset":110328,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110185,"endOffset":110323,"count":45}],"isBlockCoverage":true},{"functionName":"wrapAsyncCompare","ranges":[{"startOffset":110332,"endOffset":110810,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":110393,"endOffset":110805,"count":0}],"isBlockCoverage":false},{"functionName":"addCoreMatchers","ranges":[{"startOffset":110814,"endOffset":111029,"count":2},{"startOffset":110911,"endOffset":111025,"count":38}],"isBlockCoverage":true},{"functionName":"addFilter","ranges":[{"startOffset":111033,"endOffset":111191,"count":4}],"isBlockCoverage":true},{"functionName":"negatedFailureMessage","ranges":[{"startOffset":111195,"endOffset":111587,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":111591,"endOffset":111671,"count":4}],"isBlockCoverage":true},{"functionName":"selectComparisonFunc","ranges":[{"startOffset":111730,"endOffset":111933,"count":4}],"isBlockCoverage":true},{"functionName":"defaultNegativeCompare","ranges":[{"startOffset":111756,"endOffset":111862,"count":4}],"isBlockCoverage":true},{"functionName":"selectComparisonFunc","ranges":[{"startOffset":112046,"endOffset":112254,"count":0}],"isBlockCoverage":false},{"functionName":"selectComparisonFunc","ranges":[{"startOffset":112374,"endOffset":112884,"count":0}],"isBlockCoverage":false},{"functionName":"ContextAddingFilter","ranges":[{"startOffset":112893,"endOffset":112964,"count":0}],"isBlockCoverage":false},{"functionName":"ContextAddingFilter.modifyFailureMessage","ranges":[{"startOffset":113021,"endOffset":113184,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":113189,"endOffset":113250,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":113276,"endOffset":113346,"count":45},{"startOffset":113333,"endOffset":113338,"count":0}],"isBlockCoverage":true},{"functionName":"addCoreMatchers","ranges":[{"startOffset":113369,"endOffset":113468,"count":1}],"isBlockCoverage":true},{"functionName":"asyncFactory","ranges":[{"startOffset":113488,"endOffset":113563,"count":0}],"isBlockCoverage":false},{"functionName":"addAsyncCoreMatchers","ranges":[{"startOffset":113591,"endOffset":113696,"count":1}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.ExpectationFilterChain","ranges":[{"startOffset":113754,"endOffset":115007,"count":1}],"isBlockCoverage":true},{"functionName":"ExpectationFilterChain","ranges":[{"startOffset":113769,"endOffset":113880,"count":49}],"isBlockCoverage":true},{"functionName":"ExpectationFilterChain.addFilter","ranges":[{"startOffset":113929,"endOffset":114004,"count":4}],"isBlockCoverage":true},{"functionName":"ExpectationFilterChain.selectComparisonFunc","ranges":[{"startOffset":114065,"endOffset":114158,"count":45}],"isBlockCoverage":true},{"functionName":"ExpectationFilterChain.buildFailureMessage","ranges":[{"startOffset":114218,"endOffset":114362,"count":0}],"isBlockCoverage":false},{"functionName":"ExpectationFilterChain.modifyFailureMessage","ranges":[{"startOffset":114423,"endOffset":114546,"count":0}],"isBlockCoverage":false},{"functionName":"ExpectationFilterChain.callFirst_","ranges":[{"startOffset":114597,"endOffset":114970,"count":49},{"startOffset":114641,"endOffset":114775,"count":4},{"startOffset":114733,"endOffset":114769,"count":0},{"startOffset":114798,"endOffset":114820,"count":4},{"startOffset":114822,"endOffset":114936,"count":4},{"startOffset":114936,"endOffset":114969,"count":45}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Expector","ranges":[{"startOffset":115044,"endOffset":117572,"count":1}],"isBlockCoverage":true},{"functionName":"Expector","ranges":[{"startOffset":115061,"endOffset":115356,"count":45},{"startOffset":115135,"endOffset":115186,"count":0},{"startOffset":115283,"endOffset":115299,"count":0}],"isBlockCoverage":true},{"functionName":"buildFailureMessage","ranges":[{"startOffset":115167,"endOffset":115180,"count":0}],"isBlockCoverage":false},{"functionName":"Expector.addExpectationResult","ranges":[{"startOffset":115286,"endOffset":115299,"count":0}],"isBlockCoverage":false},{"functionName":"Expector.instantiateMatcher","ranges":[{"startOffset":115400,"endOffset":115805,"count":45},{"startOffset":115782,"endOffset":115800,"count":41}],"isBlockCoverage":true},{"functionName":"Expector.buildMessage","ranges":[{"startOffset":115844,"endOffset":116576,"count":45},{"startOffset":115908,"endOffset":116570,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":115937,"endOffset":116341,"count":0}],"isBlockCoverage":false},{"functionName":"Expector.compare","ranges":[{"startOffset":116610,"endOffset":116820,"count":45}],"isBlockCoverage":true},{"functionName":"Expector.addFilter","ranges":[{"startOffset":116856,"endOffset":116990,"count":4}],"isBlockCoverage":true},{"functionName":"Expector.processResult","ranges":[{"startOffset":117030,"endOffset":117549,"count":45},{"startOffset":117148,"endOffset":117195,"count":37},{"startOffset":117357,"endOffset":117368,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.formatErrorMsg","ranges":[{"startOffset":117615,"endOffset":117865,"count":1}],"isBlockCoverage":true},{"functionName":"generateErrorMsg","ranges":[{"startOffset":117630,"endOffset":117835,"count":13},{"startOffset":117729,"endOffset":117733,"count":0}],"isBlockCoverage":true},{"functionName":"errorMsg","ranges":[{"startOffset":117747,"endOffset":117830,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.GlobalErrors","ranges":[{"startOffset":117906,"endOffset":122849,"count":1}],"isBlockCoverage":true},{"functionName":"GlobalErrors","ranges":[{"startOffset":117923,"endOffset":122823,"count":1}],"isBlockCoverage":true},{"functionName":"onBrowserError","ranges":[{"startOffset":118095,"endOffset":118181,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchBrowserError","ranges":[{"startOffset":118187,"endOffset":118474,"count":0}],"isBlockCoverage":false},{"functionName":"installOne_","ranges":[{"startOffset":118562,"endOffset":120412,"count":2}],"isBlockCoverage":true},{"functionName":"taggedOnError","ranges":[{"startOffset":118618,"endOffset":119601,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":119864,"endOffset":120405,"count":1},{"startOffset":119994,"endOffset":120397,"count":2},{"startOffset":120194,"endOffset":120286,"count":0}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":120434,"endOffset":121617,"count":1},{"startOffset":120735,"endOffset":121611,"count":0}],"isBlockCoverage":true},{"functionName":"browserRejectionHandler","ranges":[{"startOffset":120842,"endOffset":121277,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":121386,"endOffset":121602,"count":0}],"isBlockCoverage":false},{"functionName":"pushListener","ranges":[{"startOffset":122103,"endOffset":122173,"count":345}],"isBlockCoverage":true},{"functionName":"popListener","ranges":[{"startOffset":122199,"endOffset":122350,"count":345},{"startOffset":122253,"endOffset":122321,"count":0}],"isBlockCoverage":true},{"functionName":"GlobalErrors.setOverrideListener","ranges":[{"startOffset":122384,"endOffset":122614,"count":0}],"isBlockCoverage":false},{"functionName":"GlobalErrors.removeOverrideListener","ranges":[{"startOffset":122651,"endOffset":122818,"count":43},{"startOffset":122699,"endOffset":122743,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toBePending","ranges":[{"startOffset":122889,"endOffset":123634,"count":1}],"isBlockCoverage":true},{"functionName":"toBePending","ranges":[{"startOffset":123156,"endOffset":123631,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeRejected","ranges":[{"startOffset":123675,"endOffset":124365,"count":1}],"isBlockCoverage":true},{"functionName":"toBeRejected","ranges":[{"startOffset":123960,"endOffset":124362,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeRejectedWith","ranges":[{"startOffset":124410,"endOffset":126135,"count":1}],"isBlockCoverage":true},{"functionName":"toBeRejectedWith","ranges":[{"startOffset":124891,"endOffset":126132,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeRejectedWithError","ranges":[{"startOffset":126185,"endOffset":129496,"count":1}],"isBlockCoverage":true},{"functionName":"toBeRejectedWithError","ranges":[{"startOffset":127036,"endOffset":127750,"count":0}],"isBlockCoverage":false},{"functionName":"matchError","ranges":[{"startOffset":127755,"endOffset":128486,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":128490,"endOffset":128682,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":128686,"endOffset":128915,"count":0}],"isBlockCoverage":false},{"functionName":"getExpectedFromArgs","ranges":[{"startOffset":128919,"endOffset":129337,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorConstructor","ranges":[{"startOffset":129341,"endOffset":129494,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeResolved","ranges":[{"startOffset":129537,"endOffset":130449,"count":1}],"isBlockCoverage":true},{"functionName":"toBeResolved","ranges":[{"startOffset":129822,"endOffset":130446,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeResolvedTo","ranges":[{"startOffset":130492,"endOffset":132268,"count":1}],"isBlockCoverage":true},{"functionName":"toBeResolvedTo","ranges":[{"startOffset":130959,"endOffset":132265,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.DiffBuilder","ranges":[{"startOffset":132308,"endOffset":135142,"count":1}],"isBlockCoverage":true},{"functionName":"DiffBuilder","ranges":[{"startOffset":132349,"endOffset":132630,"count":24},{"startOffset":132415,"endOffset":132420,"count":0},{"startOffset":132436,"endOffset":132461,"count":0}],"isBlockCoverage":true},{"functionName":"setRoots","ranges":[{"startOffset":132636,"endOffset":132740,"count":24}],"isBlockCoverage":true},{"functionName":"recordMismatch","ranges":[{"startOffset":132746,"endOffset":132830,"count":0}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":132836,"endOffset":133773,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":132911,"endOffset":133730,"count":0}],"isBlockCoverage":false},{"functionName":"withPath","ranges":[{"startOffset":133779,"endOffset":133944,"count":44}],"isBlockCoverage":true},{"functionName":"dereferencePath_","ranges":[{"startOffset":133950,"endOffset":134716,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFormatter_","ranges":[{"startOffset":134722,"endOffset":134901,"count":0}],"isBlockCoverage":false},{"functionName":"wrapPrettyPrinted","ranges":[{"startOffset":134909,"endOffset":135117,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.MatchersUtil","ranges":[{"startOffset":135183,"endOffset":152971,"count":1}],"isBlockCoverage":true},{"functionName":"MatchersUtil","ranges":[{"startOffset":135457,"endOffset":135953,"count":125},{"startOffset":135512,"endOffset":135517,"count":0},{"startOffset":135567,"endOffset":135572,"count":0},{"startOffset":135932,"endOffset":135948,"count":0}],"isBlockCoverage":true},{"functionName":"MatchersUtil.pp","ranges":[{"startOffset":135935,"endOffset":135948,"count":0}],"isBlockCoverage":false},{"functionName":"MatchersUtil.contains","ranges":[{"startOffset":136354,"endOffset":137318,"count":10},{"startOffset":136402,"endOffset":136429,"count":0},{"startOffset":136459,"endOffset":136692,"count":0},{"startOffset":136755,"endOffset":136940,"count":9},{"startOffset":136913,"endOffset":136940,"count":0},{"startOffset":136940,"endOffset":137043,"count":1},{"startOffset":137043,"endOffset":137317,"count":0}],"isBlockCoverage":true},{"functionName":"MatchersUtil.buildFailureMessage","ranges":[{"startOffset":137368,"endOffset":138016,"count":0}],"isBlockCoverage":false},{"functionName":"MatchersUtil.asymmetricDiff_","ranges":[{"startOffset":138062,"endOffset":138357,"count":0}],"isBlockCoverage":false},{"functionName":"MatchersUtil.asymmetricMatch_","ranges":[{"startOffset":138404,"endOffset":139031,"count":87},{"startOffset":138661,"endOffset":139027,"count":0}],"isBlockCoverage":true},{"functionName":"MatchersUtil.equals","ranges":[{"startOffset":139355,"endOffset":139524,"count":33},{"startOffset":139415,"endOffset":139438,"count":9}],"isBlockCoverage":true},{"functionName":"MatchersUtil.eq_","ranges":[{"startOffset":139659,"endOffset":150371,"count":87},{"startOffset":139900,"endOffset":139938,"count":0},{"startOffset":139986,"endOffset":140222,"count":0},{"startOffset":140251,"endOffset":140272,"count":0},{"startOffset":140274,"endOffset":140408,"count":0},{"startOffset":140597,"endOffset":140734,"count":61},{"startOffset":140622,"endOffset":140639,"count":0},{"startOffset":140660,"endOffset":140707,"count":0},{"startOffset":140734,"endOffset":140836,"count":26},{"startOffset":140838,"endOffset":140957,"count":0},{"startOffset":140957,"endOffset":141071,"count":26},{"startOffset":141071,"endOffset":141134,"count":0},{"startOffset":141134,"endOffset":141236,"count":26},{"startOffset":141236,"endOffset":141525,"count":0},{"startOffset":141532,"endOffset":141869,"count":0},{"startOffset":141876,"endOffset":141897,"count":0},{"startOffset":141904,"endOffset":142282,"count":0},{"startOffset":142289,"endOffset":142573,"count":0},{"startOffset":142646,"endOffset":142844,"count":0},{"startOffset":142850,"endOffset":142903,"count":26},{"startOffset":142905,"endOffset":142968,"count":0},{"startOffset":142968,"endOffset":143069,"count":26},{"startOffset":143069,"endOffset":143082,"count":0},{"startOffset":143084,"endOffset":143265,"count":0},{"startOffset":143265,"endOffset":143298,"count":26},{"startOffset":143300,"endOffset":143363,"count":0},{"startOffset":143363,"endOffset":143464,"count":26},{"startOffset":143464,"endOffset":143477,"count":0},{"startOffset":143479,"endOffset":143508,"count":0},{"startOffset":143508,"endOffset":143727,"count":26},{"startOffset":143727,"endOffset":143925,"count":9},{"startOffset":143874,"endOffset":143919,"count":0},{"startOffset":143925,"endOffset":144210,"count":26},{"startOffset":144210,"endOffset":145067,"count":11},{"startOffset":144504,"endOffset":145030,"count":15},{"startOffset":145030,"endOffset":145061,"count":0},{"startOffset":145067,"endOffset":149337,"count":15},{"startOffset":145089,"endOffset":145103,"count":0},{"startOffset":145105,"endOffset":146871,"count":0},{"startOffset":146893,"endOffset":146907,"count":0},{"startOffset":146909,"endOffset":148548,"count":0},{"startOffset":148570,"endOffset":148584,"count":0},{"startOffset":148586,"endOffset":148764,"count":0},{"startOffset":149000,"endOffset":149028,"count":0},{"startOffset":149029,"endOffset":149057,"count":0},{"startOffset":149058,"endOffset":149087,"count":0},{"startOffset":149088,"endOffset":149117,"count":0},{"startOffset":149118,"endOffset":149180,"count":0},{"startOffset":149189,"endOffset":149331,"count":0},{"startOffset":149337,"endOffset":149644,"count":26},{"startOffset":149644,"endOffset":149774,"count":0},{"startOffset":149774,"endOffset":149805,"count":26},{"startOffset":149805,"endOffset":150196,"count":39},{"startOffset":149873,"endOffset":150033,"count":0},{"startOffset":150196,"endOffset":150215,"count":26},{"startOffset":150215,"endOffset":150242,"count":0},{"startOffset":150242,"endOffset":150370,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144314,"endOffset":144445,"count":11},{"startOffset":144360,"endOffset":144437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144538,"endOffset":145000,"count":15},{"startOffset":144574,"endOffset":144733,"count":0},{"startOffset":144821,"endOffset":144829,"count":0},{"startOffset":144866,"endOffset":144874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":145270,"endOffset":145328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":145347,"endOffset":145405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147052,"endOffset":147108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147153,"endOffset":147209,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150067,"endOffset":150188,"count":39},{"startOffset":150143,"endOffset":150180,"count":0}],"isBlockCoverage":true},{"functionName":"MatchersUtil.keys","ranges":[{"startOffset":150396,"endOffset":151091,"count":76},{"startOffset":150817,"endOffset":150846,"count":36},{"startOffset":150846,"endOffset":150878,"count":40},{"startOffset":150878,"endOffset":150907,"count":0},{"startOffset":150907,"endOffset":150964,"count":40},{"startOffset":150964,"endOffset":151064,"count":52},{"startOffset":151022,"endOffset":151058,"count":0},{"startOffset":151064,"endOffset":151090,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":150442,"endOffset":150790,"count":76},{"startOffset":150506,"endOffset":150586,"count":136},{"startOffset":150676,"endOffset":150764,"count":0}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":151096,"endOffset":151164,"count":0}],"isBlockCoverage":false},{"functionName":"extraKeysAndValues","ranges":[{"startOffset":151262,"endOffset":151425,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeysAreDifferentFormatter","ranges":[{"startOffset":151429,"endOffset":152208,"count":0}],"isBlockCoverage":false},{"functionName":"constructorsAreDifferentFormatter","ranges":[{"startOffset":152212,"endOffset":152517,"count":0}],"isBlockCoverage":false},{"functionName":"actualArrayIsLongerFormatter","ranges":[{"startOffset":152521,"endOffset":152721,"count":0}],"isBlockCoverage":false},{"functionName":"formatKeyValuePairs","ranges":[{"startOffset":152725,"endOffset":152945,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.MismatchTree","ranges":[{"startOffset":154600,"endOffset":156103,"count":1}],"isBlockCoverage":true},{"functionName":"MismatchTree","ranges":[{"startOffset":155006,"endOffset":155171,"count":24}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":155177,"endOffset":155597,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":155603,"endOffset":155897,"count":24},{"startOffset":155716,"endOffset":155891,"count":0}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":155903,"endOffset":156073,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.nothing","ranges":[{"startOffset":156139,"endOffset":156456,"count":1}],"isBlockCoverage":true},{"functionName":"nothing","ranges":[{"startOffset":156306,"endOffset":156435,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.NullDiffBuilder","ranges":[{"startOffset":156500,"endOffset":156693,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":156524,"endOffset":156690,"count":9}],"isBlockCoverage":true},{"functionName":"withPath","ranges":[{"startOffset":156566,"endOffset":156611,"count":21}],"isBlockCoverage":true},{"functionName":"setRoots","ranges":[{"startOffset":156629,"endOffset":156642,"count":9}],"isBlockCoverage":true},{"functionName":"recordMismatch","ranges":[{"startOffset":156666,"endOffset":156679,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ObjectPath","ranges":[{"startOffset":156732,"endOffset":157627,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectPath","ranges":[{"startOffset":156772,"endOffset":156845,"count":92},{"startOffset":156833,"endOffset":156838,"count":24}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":156851,"endOffset":157020,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":157026,"endOffset":157114,"count":44}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":157120,"endOffset":157190,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":157196,"endOffset":157248,"count":0}],"isBlockCoverage":false},{"functionName":"formatPropertyAccess","ranges":[{"startOffset":157256,"endOffset":157503,"count":0}],"isBlockCoverage":false},{"functionName":"isValidIdentifier","ranges":[{"startOffset":157507,"endOffset":157603,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.requireAsyncMatchers","ranges":[{"startOffset":157676,"endOffset":158011,"count":1},{"startOffset":157943,"endOffset":157989,"count":6}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toBe","ranges":[{"startOffset":158044,"endOffset":158881,"count":1}],"isBlockCoverage":true},{"functionName":"toBe","ranges":[{"startOffset":158324,"endOffset":158863,"count":3}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":158477,"endOffset":158852,"count":3},{"startOffset":158621,"endOffset":158820,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toBeCloseTo","ranges":[{"startOffset":158921,"endOffset":160335,"count":1}],"isBlockCoverage":true},{"functionName":"toBeCloseTo","ranges":[{"startOffset":159311,"endOffset":160310,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeDefined","ranges":[{"startOffset":160375,"endOffset":160763,"count":1}],"isBlockCoverage":true},{"functionName":"toBeDefined","ranges":[{"startOffset":160586,"endOffset":160738,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeFalse","ranges":[{"startOffset":160801,"endOffset":161162,"count":1}],"isBlockCoverage":true},{"functionName":"toBeFalse","ranges":[{"startOffset":160990,"endOffset":161139,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeFalsy","ranges":[{"startOffset":161200,"endOffset":161549,"count":1}],"isBlockCoverage":true},{"functionName":"toBeFalsy","ranges":[{"startOffset":161386,"endOffset":161526,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeGreaterThan","ranges":[{"startOffset":161593,"endOffset":162076,"count":1}],"isBlockCoverage":true},{"functionName":"toBeGreaterThan","ranges":[{"startOffset":161881,"endOffset":162047,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeGreaterThanOrEqual","ranges":[{"startOffset":162127,"endOffset":162661,"count":1}],"isBlockCoverage":true},{"functionName":"toBeGreaterThanOrEqual","ranges":[{"startOffset":162451,"endOffset":162625,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeInstanceOf","ranges":[{"startOffset":162704,"endOffset":164424,"count":1}],"isBlockCoverage":true},{"functionName":"toBeInstanceOf","ranges":[{"startOffset":163223,"endOffset":164396,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeLessThan","ranges":[{"startOffset":164465,"endOffset":164942,"count":1}],"isBlockCoverage":true},{"functionName":"toBeLessThan","ranges":[{"startOffset":164753,"endOffset":164916,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeLessThanOrEqual","ranges":[{"startOffset":164990,"endOffset":165510,"count":1}],"isBlockCoverage":true},{"functionName":"toBeLessThanOrEqual","ranges":[{"startOffset":165306,"endOffset":165477,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeNaN","ranges":[{"startOffset":165546,"endOffset":166201,"count":1}],"isBlockCoverage":true},{"functionName":"toBeNaN","ranges":[{"startOffset":165745,"endOffset":166180,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeNegativeInfinity","ranges":[{"startOffset":166250,"endOffset":166990,"count":1}],"isBlockCoverage":true},{"functionName":"toBeNegativeInfinity","ranges":[{"startOffset":166478,"endOffset":166956,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeNull","ranges":[{"startOffset":167027,"endOffset":167382,"count":1}],"isBlockCoverage":true},{"functionName":"toBeNull","ranges":[{"startOffset":167213,"endOffset":167360,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBePositiveInfinity","ranges":[{"startOffset":167431,"endOffset":168167,"count":1}],"isBlockCoverage":true},{"functionName":"toBePositiveInfinity","ranges":[{"startOffset":167657,"endOffset":168133,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeTrue","ranges":[{"startOffset":168204,"endOffset":168559,"count":1}],"isBlockCoverage":true},{"functionName":"toBeTrue","ranges":[{"startOffset":168390,"endOffset":168537,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toBeTruthy","ranges":[{"startOffset":168598,"endOffset":168953,"count":1}],"isBlockCoverage":true},{"functionName":"toBeTruthy","ranges":[{"startOffset":168787,"endOffset":168929,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":168839,"endOffset":168918,"count":1}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toBeUndefined","ranges":[{"startOffset":168995,"endOffset":169377,"count":1}],"isBlockCoverage":true},{"functionName":"toBeUndefined","ranges":[{"startOffset":169196,"endOffset":169350,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toContain","ranges":[{"startOffset":169415,"endOffset":169940,"count":1}],"isBlockCoverage":true},{"functionName":"toContain","ranges":[{"startOffset":169723,"endOffset":169917,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":169786,"endOffset":169906,"count":1}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toEqual","ranges":[{"startOffset":169976,"endOffset":170758,"count":1}],"isBlockCoverage":true},{"functionName":"toEqual","ranges":[{"startOffset":170282,"endOffset":170737,"count":24}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":170343,"endOffset":170726,"count":24}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toHaveBeenCalled","ranges":[{"startOffset":170803,"endOffset":171967,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveBeenCalled","ranges":[{"startOffset":171181,"endOffset":171937,"count":7}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":171251,"endOffset":171926,"count":7},{"startOffset":171329,"endOffset":171492,"count":0},{"startOffset":171528,"endOffset":171656,"count":0},{"startOffset":171748,"endOffset":171817,"count":3},{"startOffset":171828,"endOffset":171893,"count":4}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.toHaveBeenCalledBefore","ranges":[{"startOffset":172018,"endOffset":174998,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveBeenCalledBefore","ranges":[{"startOffset":172528,"endOffset":174962,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveBeenCalledOnceWith","ranges":[{"startOffset":175051,"endOffset":177935,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveBeenCalledOnceWith","ranges":[{"startOffset":175553,"endOffset":177897,"count":8}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":175623,"endOffset":177886,"count":8},{"startOffset":175799,"endOffset":175926,"count":0},{"startOffset":176684,"endOffset":177885,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":176012,"endOffset":176095,"count":8}],"isBlockCoverage":true},{"functionName":"getDiffs","ranges":[{"startOffset":176694,"endOffset":176979,"count":0}],"isBlockCoverage":false},{"functionName":"butString","ranges":[{"startOffset":176989,"endOffset":177574,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveBeenCalledTimes","ranges":[{"startOffset":177985,"endOffset":179780,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveBeenCalledTimes","ranges":[{"startOffset":178450,"endOffset":179745,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveBeenCalledWith","ranges":[{"startOffset":179829,"endOffset":182761,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveBeenCalledWith","ranges":[{"startOffset":180299,"endOffset":182727,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":180373,"endOffset":182716,"count":1},{"startOffset":180585,"endOffset":180748,"count":0},{"startOffset":180783,"endOffset":181133,"count":0},{"startOffset":181554,"endOffset":182684,"count":0}],"isBlockCoverage":true},{"functionName":"result.message","ranges":[{"startOffset":180812,"endOffset":181097,"count":0}],"isBlockCoverage":false},{"functionName":"result.message","ranges":[{"startOffset":181267,"endOffset":181543,"count":0}],"isBlockCoverage":false},{"functionName":"result.message","ranges":[{"startOffset":181589,"endOffset":182673,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveClass","ranges":[{"startOffset":182801,"endOffset":183649,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveClass","ranges":[{"startOffset":183171,"endOffset":183486,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":183490,"endOffset":183624,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveSize","ranges":[{"startOffset":183688,"endOffset":184947,"count":1},{"startOffset":184739,"endOffset":184758,"count":0}],"isBlockCoverage":true},{"functionName":"toHaveSize","ranges":[{"startOffset":184005,"endOffset":184686,"count":0}],"isBlockCoverage":false},{"functionName":"isLength","ranges":[{"startOffset":184762,"endOffset":184923,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toHaveSpyInteractions","ranges":[{"startOffset":184997,"endOffset":187032,"count":1}],"isBlockCoverage":true},{"functionName":"toHaveSpyInteractions","ranges":[{"startOffset":185415,"endOffset":186997,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toMatch","ranges":[{"startOffset":187068,"endOffset":187911,"count":1}],"isBlockCoverage":true},{"functionName":"toMatch","ranges":[{"startOffset":187522,"endOffset":187890,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toThrow","ranges":[{"startOffset":187947,"endOffset":189972,"count":1}],"isBlockCoverage":true},{"functionName":"toThrow","ranges":[{"startOffset":188474,"endOffset":189951,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toThrowError","ranges":[{"startOffset":190013,"endOffset":195426,"count":1}],"isBlockCoverage":true},{"functionName":"toThrowError","ranges":[{"startOffset":190934,"endOffset":195213,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":195217,"endOffset":195306,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":195310,"endOffset":195400,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.toThrowMatching","ranges":[{"startOffset":195470,"endOffset":197541,"count":1}],"isBlockCoverage":true},{"functionName":"toThrowMatching","ranges":[{"startOffset":196050,"endOffset":197325,"count":0}],"isBlockCoverage":false},{"functionName":"pass","ranges":[{"startOffset":197329,"endOffset":197418,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":197422,"endOffset":197512,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.MockDate","ranges":[{"startOffset":197578,"endOffset":200112,"count":1}],"isBlockCoverage":true},{"functionName":"MockDate","ranges":[{"startOffset":197595,"endOffset":200090,"count":1},{"startOffset":197682,"endOffset":197815,"count":0}],"isBlockCoverage":true},{"functionName":"MockDate.install","ranges":[{"startOffset":197705,"endOffset":197718,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.tick","ranges":[{"startOffset":197738,"endOffset":197751,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.uninstall","ranges":[{"startOffset":197776,"endOffset":197789,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.install","ranges":[{"startOffset":197873,"endOffset":198304,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.tick","ranges":[{"startOffset":198323,"endOffset":198417,"count":0}],"isBlockCoverage":false},{"functionName":"MockDate.uninstall","ranges":[{"startOffset":198441,"endOffset":198514,"count":0}],"isBlockCoverage":false},{"functionName":"FakeDate","ranges":[{"startOffset":198568,"endOffset":199747,"count":0}],"isBlockCoverage":false},{"functionName":"createDateProperties","ranges":[{"startOffset":199753,"endOffset":200086,"count":1}],"isBlockCoverage":true},{"functionName":"FakeDate.now","ranges":[{"startOffset":199858,"endOffset":199906,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.NeverSkipPolicy","ranges":[{"startOffset":200156,"endOffset":200398,"count":1}],"isBlockCoverage":true},{"functionName":"NeverSkipPolicy","ranges":[{"startOffset":200173,"endOffset":200214,"count":86}],"isBlockCoverage":true},{"functionName":"NeverSkipPolicy.skipTo","ranges":[{"startOffset":200253,"endOffset":200308,"count":44}],"isBlockCoverage":true},{"functionName":"NeverSkipPolicy.fnErrored","ranges":[{"startOffset":200351,"endOffset":200368,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.ParallelReportDispatcher","ranges":[{"startOffset":200451,"endOffset":204000,"count":1}],"isBlockCoverage":true},{"functionName":"ParallelReportDispatcher","ranges":[{"startOffset":201253,"endOffset":203962,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.makePrettyPrinter","ranges":[{"startOffset":204046,"endOffset":213432,"count":1}],"isBlockCoverage":true},{"functionName":"SinglePrettyPrintRun","ranges":[{"startOffset":204096,"endOffset":204328,"count":16}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":204334,"endOffset":207009,"count":44},{"startOffset":204493,"endOffset":204551,"count":0},{"startOffset":204589,"endOffset":204640,"count":0},{"startOffset":204666,"endOffset":204712,"count":0},{"startOffset":204734,"endOffset":204760,"count":0},{"startOffset":204762,"endOffset":204806,"count":0},{"startOffset":204842,"endOffset":204892,"count":0},{"startOffset":204925,"endOffset":204996,"count":0},{"startOffset":205027,"endOffset":205072,"count":0},{"startOffset":205099,"endOffset":205169,"count":0},{"startOffset":205205,"endOffset":205284,"count":0},{"startOffset":205319,"endOffset":205375,"count":0},{"startOffset":205414,"endOffset":205464,"count":0},{"startOffset":205495,"endOffset":205649,"count":0},{"startOffset":205682,"endOffset":205743,"count":0},{"startOffset":205770,"endOffset":205812,"count":0},{"startOffset":205839,"endOffset":205881,"count":0},{"startOffset":205916,"endOffset":205965,"count":0},{"startOffset":206040,"endOffset":206072,"count":32},{"startOffset":206073,"endOffset":206110,"count":14},{"startOffset":206121,"endOffset":206291,"count":8},{"startOffset":206198,"endOffset":206281,"count":0},{"startOffset":206291,"endOffset":206822,"count":36},{"startOffset":206328,"endOffset":206493,"count":0},{"startOffset":206522,"endOffset":206549,"count":18},{"startOffset":206551,"endOffset":206760,"count":24},{"startOffset":206620,"endOffset":206668,"count":18},{"startOffset":206668,"endOffset":206723,"count":6},{"startOffset":206760,"endOffset":206822,"count":12},{"startOffset":206831,"endOffset":206956,"count":0}],"isBlockCoverage":true},{"functionName":"applyCustomFormatters_","ranges":[{"startOffset":207015,"endOffset":207116,"count":44}],"isBlockCoverage":true},{"functionName":"iterateObject","ranges":[{"startOffset":207122,"endOffset":207413,"count":24},{"startOffset":207335,"endOffset":207368,"count":6}],"isBlockCoverage":true},{"functionName":"emitScalar","ranges":[{"startOffset":207419,"endOffset":207470,"count":20}],"isBlockCoverage":true},{"functionName":"emitString","ranges":[{"startOffset":207476,"endOffset":207539,"count":0}],"isBlockCoverage":false},{"functionName":"emitArray","ranges":[{"startOffset":207545,"endOffset":208357,"count":18},{"startOffset":207621,"endOffset":207676,"count":0},{"startOffset":207822,"endOffset":207922,"count":22},{"startOffset":207843,"endOffset":207883,"count":4},{"startOffset":207956,"endOffset":207995,"count":0},{"startOffset":208286,"endOffset":208325,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":208088,"endOffset":208258,"count":0}],"isBlockCoverage":false},{"functionName":"emitSet","ranges":[{"startOffset":208363,"endOffset":208916,"count":0}],"isBlockCoverage":false},{"functionName":"emitMap","ranges":[{"startOffset":208922,"endOffset":209482,"count":0}],"isBlockCoverage":false},{"functionName":"emitObject","ranges":[{"startOffset":209488,"endOffset":210184,"count":6},{"startOffset":209682,"endOffset":209690,"count":0},{"startOffset":209787,"endOffset":209812,"count":0},{"startOffset":210112,"endOffset":210151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":209916,"endOffset":210084,"count":6},{"startOffset":209985,"endOffset":210031,"count":0}],"isBlockCoverage":true},{"functionName":"emitTypedArray","ranges":[{"startOffset":210190,"endOffset":210633,"count":0}],"isBlockCoverage":false},{"functionName":"emitDomElement","ranges":[{"startOffset":210639,"endOffset":211071,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":211077,"endOffset":211312,"count":6},{"startOffset":211149,"endOffset":211200,"count":0}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":211318,"endOffset":211847,"count":90},{"startOffset":211531,"endOffset":211595,"count":0},{"startOffset":211790,"endOffset":211841,"count":0}],"isBlockCoverage":true},{"functionName":"hasCustomToString","ranges":[{"startOffset":211855,"endOffset":212319,"count":14},{"startOffset":212156,"endOffset":212225,"count":8},{"startOffset":212241,"endOffset":212315,"count":0}],"isBlockCoverage":true},{"functionName":"truncate","ranges":[{"startOffset":212323,"endOffset":212526,"count":90},{"startOffset":212434,"endOffset":212525,"count":0}],"isBlockCoverage":true},{"functionName":"MaxCharsReachedError","ranges":[{"startOffset":212530,"endOffset":212691,"count":0}],"isBlockCoverage":false},{"functionName":"customFormat","ranges":[{"startOffset":212744,"endOffset":212967,"count":44},{"startOffset":212851,"endOffset":212963,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":212978,"endOffset":213429,"count":126},{"startOffset":213065,"endOffset":213070,"count":1}],"isBlockCoverage":true},{"functionName":"pp","ranges":[{"startOffset":213088,"endOffset":213301,"count":16}],"isBlockCoverage":true},{"functionName":"pp.customFormat_","ranges":[{"startOffset":213327,"endOffset":213408,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.QueueRunner","ranges":[{"startOffset":213472,"endOffset":221581,"count":1}],"isBlockCoverage":true},{"functionName":"StopExecutionError","ranges":[{"startOffset":213508,"endOffset":213540,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":213636,"endOffset":213969,"count":432}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":213700,"endOffset":213964,"count":376},{"startOffset":213734,"endOffset":213797,"count":0}],"isBlockCoverage":true},{"functionName":"fallbackOnMultipleDone","ranges":[{"startOffset":213973,"endOffset":214222,"count":0}],"isBlockCoverage":false},{"functionName":"emptyFn","ranges":[{"startOffset":214226,"endOffset":214247,"count":0}],"isBlockCoverage":false},{"functionName":"QueueRunner","ranges":[{"startOffset":214251,"endOffset":215238,"count":129},{"startOffset":214349,"endOffset":214354,"count":0},{"startOffset":214395,"endOffset":214405,"count":0},{"startOffset":214452,"endOffset":214497,"count":0},{"startOffset":214540,"endOffset":214550,"count":0},{"startOffset":214599,"endOffset":214624,"count":0},{"startOffset":214667,"endOffset":214690,"count":86},{"startOffset":214725,"endOffset":214798,"count":0},{"startOffset":214827,"endOffset":214837,"count":0},{"startOffset":214882,"endOffset":214948,"count":0},{"startOffset":214991,"endOffset":215012,"count":0},{"startOffset":215147,"endOffset":215234,"count":0}],"isBlockCoverage":true},{"functionName":"QueueRunner.clearStack","ranges":[{"startOffset":214461,"endOffset":214497,"count":0}],"isBlockCoverage":false},{"functionName":"QueueRunner.execute","ranges":[{"startOffset":215274,"endOffset":215443,"count":129}],"isBlockCoverage":true},{"functionName":"handleFinalError","ranges":[{"startOffset":215315,"endOffset":215362,"count":0}],"isBlockCoverage":false},{"functionName":"QueueRunner.clearTimeout","ranges":[{"startOffset":215485,"endOffset":215622,"count":64}],"isBlockCoverage":true},{"functionName":"QueueRunner.setTimeout","ranges":[{"startOffset":215662,"endOffset":215808,"count":64}],"isBlockCoverage":true},{"functionName":"attempt","ranges":[{"startOffset":215845,"endOffset":219344,"count":216},{"startOffset":217656,"endOffset":218422,"count":64},{"startOffset":218499,"endOffset":218867,"count":108},{"startOffset":218591,"endOffset":218628,"count":52},{"startOffset":218630,"endOffset":218859,"count":52},{"startOffset":218867,"endOffset":219112,"count":108},{"startOffset":219119,"endOffset":219199,"count":0},{"startOffset":219199,"endOffset":219343,"count":56}],"isBlockCoverage":true},{"functionName":"onException","ranges":[{"startOffset":215981,"endOffset":216061,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":216068,"endOffset":216252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216278,"endOffset":216421,"count":216},{"startOffset":216318,"endOffset":216365,"count":64}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":216453,"endOffset":216922,"count":160},{"startOffset":216522,"endOffset":216695,"count":0},{"startOffset":216829,"endOffset":216876,"count":0}],"isBlockCoverage":true},{"functionName":"runNext","ranges":[{"startOffset":216721,"endOffset":216790,"count":160}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":216930,"endOffset":217321,"count":0}],"isBlockCoverage":false},{"functionName":"nextFail","ranges":[{"startOffset":217427,"endOffset":217549,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":217782,"endOffset":218397,"count":0}],"isBlockCoverage":false},{"functionName":"onPromiseRejection","ranges":[{"startOffset":219266,"endOffset":219340,"count":0}],"isBlockCoverage":false},{"functionName":"QueueRunner.run","ranges":[{"startOffset":219377,"endOffset":219951,"count":289},{"startOffset":219594,"endOffset":219721,"count":216},{"startOffset":219690,"endOffset":219715,"count":160},{"startOffset":219721,"endOffset":219950,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219743,"endOffset":219945,"count":129},{"startOffset":219837,"endOffset":219897,"count":0}],"isBlockCoverage":true},{"functionName":"QueueRunner.nextFnIx_","ranges":[{"startOffset":219990,"endOffset":220216,"count":216},{"startOffset":220104,"endOffset":220192,"count":0}],"isBlockCoverage":true},{"functionName":"QueueRunner.recordError_","ranges":[{"startOffset":220258,"endOffset":220356,"count":0}],"isBlockCoverage":false},{"functionName":"QueueRunner.diagnoseConflictingAsync_","ranges":[{"startOffset":220411,"endOffset":221369,"count":108},{"startOffset":220449,"endOffset":220479,"count":0},{"startOffset":220481,"endOffset":221365,"count":0}],"isBlockCoverage":true},{"functionName":"wrapInPromiseResolutionHandler","ranges":[{"startOffset":221374,"endOffset":221556,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":221431,"endOffset":221551,"count":52},{"startOffset":221485,"endOffset":221516,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.ReportDispatcher","ranges":[{"startOffset":221626,"endOffset":223524,"count":1}],"isBlockCoverage":true},{"functionName":"ReportDispatcher","ranges":[{"startOffset":221660,"endOffset":223494,"count":1},{"startOffset":221768,"endOffset":221773,"count":0},{"startOffset":221820,"endOffset":221961,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":221844,"endOffset":221945,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":221873,"endOffset":221936,"count":86}],"isBlockCoverage":true},{"functionName":"ReportDispatcher.addReporter","ranges":[{"startOffset":222044,"endOffset":222102,"count":1}],"isBlockCoverage":true},{"functionName":"ReportDispatcher.provideFallbackReporter","ranges":[{"startOffset":222140,"endOffset":222201,"count":0}],"isBlockCoverage":false},{"functionName":"ReportDispatcher.clearReporters","ranges":[{"startOffset":222230,"endOffset":222270,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":222295,"endOffset":223000,"count":86},{"startOffset":222362,"endOffset":222390,"count":0},{"startOffset":222392,"endOffset":222443,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":222586,"endOffset":222992,"count":86}],"isBlockCoverage":true},{"functionName":"onMultipleDone","ranges":[{"startOffset":222749,"endOffset":222972,"count":0}],"isBlockCoverage":false},{"functionName":"addFn","ranges":[{"startOffset":223006,"endOffset":223490,"count":86},{"startOffset":223102,"endOffset":223127,"count":42},{"startOffset":223127,"endOffset":223331,"count":44},{"startOffset":223331,"endOffset":223484,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":223238,"endOffset":223311,"count":44}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":223372,"endOffset":223464,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.reporterEvents","ranges":[{"startOffset":223567,"endOffset":227295,"count":1}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.interface","ranges":[{"startOffset":227333,"endOffset":245152,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":228498,"endOffset":228601,"count":18}],"isBlockCoverage":true},{"functionName":"xdescribe","ranges":[{"startOffset":229031,"endOffset":229135,"count":0}],"isBlockCoverage":false},{"functionName":"fdescribe","ranges":[{"startOffset":229577,"endOffset":229681,"count":0}],"isBlockCoverage":false},{"functionName":"it","ranges":[{"startOffset":230586,"endOffset":230647,"count":24}],"isBlockCoverage":true},{"functionName":"xit","ranges":[{"startOffset":231073,"endOffset":231135,"count":0}],"isBlockCoverage":false},{"functionName":"fit","ranges":[{"startOffset":231665,"endOffset":231727,"count":0}],"isBlockCoverage":false},{"functionName":"beforeEach","ranges":[{"startOffset":232171,"endOffset":232240,"count":3}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":232686,"endOffset":232754,"count":2}],"isBlockCoverage":true},{"functionName":"beforeAll","ranges":[{"startOffset":233353,"endOffset":233421,"count":2}],"isBlockCoverage":true},{"functionName":"afterAll","ranges":[{"startOffset":234024,"endOffset":234091,"count":0}],"isBlockCoverage":false},{"functionName":"setSpecProperty","ranges":[{"startOffset":234424,"endOffset":234498,"count":0}],"isBlockCoverage":false},{"functionName":"setSuiteProperty","ranges":[{"startOffset":234834,"endOffset":234909,"count":0}],"isBlockCoverage":false},{"functionName":"expect","ranges":[{"startOffset":235163,"endOffset":235220,"count":45}],"isBlockCoverage":true},{"functionName":"expectAsync","ranges":[{"startOffset":235891,"endOffset":235953,"count":0}],"isBlockCoverage":false},{"functionName":"throwUnlessAsync","ranges":[{"startOffset":236912,"endOffset":236974,"count":0}],"isBlockCoverage":false},{"functionName":"throwUnless","ranges":[{"startOffset":237910,"endOffset":237972,"count":0}],"isBlockCoverage":false},{"functionName":"pending","ranges":[{"startOffset":238208,"endOffset":238274,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":238477,"endOffset":238540,"count":0}],"isBlockCoverage":false},{"functionName":"spyOn","ranges":[{"startOffset":238878,"endOffset":238952,"count":0}],"isBlockCoverage":false},{"functionName":"spyOnProperty","ranges":[{"startOffset":239465,"endOffset":239571,"count":0}],"isBlockCoverage":false},{"functionName":"spyOnAllFunctions","ranges":[{"startOffset":240001,"endOffset":240107,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.addCustomEqualityTester","ranges":[{"startOffset":240782,"endOffset":240845,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.addMatchers","ranges":[{"startOffset":241223,"endOffset":241285,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.addAsyncMatchers","ranges":[{"startOffset":241685,"endOffset":241752,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.addCustomObjectFormatter","ranges":[{"startOffset":242245,"endOffset":242322,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.clock","ranges":[{"startOffset":242508,"endOffset":242546,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.createSpy","ranges":[{"startOffset":243189,"endOffset":243265,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.createSpyObj","ranges":[{"startOffset":243907,"endOffset":244026,"count":20}],"isBlockCoverage":true},{"functionName":"jasmine.addSpyStrategy","ranges":[{"startOffset":244479,"endOffset":244554,"count":0}],"isBlockCoverage":false},{"functionName":"jasmine.setDefaultSpyStrategy","ranges":[{"startOffset":245031,"endOffset":245121,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.RunableResources","ranges":[{"startOffset":245197,"endOffset":249295,"count":1}],"isBlockCoverage":true},{"functionName":"RunableResources","ranges":[{"startOffset":245243,"endOffset":245912,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245460,"endOffset":245623,"count":80},{"startOffset":245571,"endOffset":245613,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245633,"endOffset":245664,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":245674,"endOffset":245703,"count":80}],"isBlockCoverage":true},{"functionName":"currentSpies","ranges":[{"startOffset":245782,"endOffset":245800,"count":43}],"isBlockCoverage":true},{"functionName":"createSpy","ranges":[{"startOffset":245821,"endOffset":245896,"count":0}],"isBlockCoverage":false},{"functionName":"initForRunable","ranges":[{"startOffset":245918,"endOffset":246698,"count":43},{"startOffset":246319,"endOffset":246692,"count":42},{"startOffset":246622,"endOffset":246684,"count":210}],"isBlockCoverage":true},{"functionName":"clearForRunable","ranges":[{"startOffset":246704,"endOffset":246869,"count":43}],"isBlockCoverage":true},{"functionName":"spies","ranges":[{"startOffset":246875,"endOffset":247006,"count":43}],"isBlockCoverage":true},{"functionName":"defaultSpyStrategy","ranges":[{"startOffset":247012,"endOffset":247197,"count":80},{"startOffset":247075,"endOffset":247110,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultSpyStrategy","ranges":[{"startOffset":247203,"endOffset":247374,"count":0}],"isBlockCoverage":false},{"functionName":"customSpyStrategies","ranges":[{"startOffset":247380,"endOffset":247553,"count":80}],"isBlockCoverage":true},{"functionName":"customEqualityTesters","ranges":[{"startOffset":247559,"endOffset":247732,"count":125}],"isBlockCoverage":true},{"functionName":"customMatchers","ranges":[{"startOffset":247738,"endOffset":247888,"count":45}],"isBlockCoverage":true},{"functionName":"addCustomMatchers","ranges":[{"startOffset":247894,"endOffset":248077,"count":0}],"isBlockCoverage":false},{"functionName":"customAsyncMatchers","ranges":[{"startOffset":248083,"endOffset":248249,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomAsyncMatchers","ranges":[{"startOffset":248255,"endOffset":248448,"count":0}],"isBlockCoverage":false},{"functionName":"customObjectFormatters","ranges":[{"startOffset":248454,"endOffset":248636,"count":125}],"isBlockCoverage":true},{"functionName":"makePrettyPrinter","ranges":[{"startOffset":248642,"endOffset":248735,"count":125}],"isBlockCoverage":true},{"functionName":"makeMatchersUtil","ranges":[{"startOffset":248741,"endOffset":249042,"count":125},{"startOffset":248953,"endOffset":249036,"count":0}],"isBlockCoverage":true},{"functionName":"forCurrentRunable_","ranges":[{"startOffset":249048,"endOffset":249261,"count":418},{"startOffset":249173,"endOffset":249184,"count":0},{"startOffset":249186,"endOffset":249230,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Runner","ranges":[{"startOffset":249330,"endOffset":258080,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":249366,"endOffset":249994,"count":1}],"isBlockCoverage":true},{"functionName":"currentRunable","ranges":[{"startOffset":250000,"endOffset":250078,"count":877},{"startOffset":250049,"endOffset":250071,"count":68}],"isBlockCoverage":true},{"functionName":"currentSuite","ranges":[{"startOffset":250084,"endOffset":250210,"count":86}],"isBlockCoverage":true},{"functionName":"parallelReset","ranges":[{"startOffset":250216,"endOffset":250275,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":250281,"endOffset":252986,"count":1},{"startOffset":250344,"endOffset":250385,"count":0},{"startOffset":250614,"endOffset":250668,"count":0},{"startOffset":250848,"endOffset":250866,"count":0},{"startOffset":252784,"endOffset":252917,"count":0}],"isBlockCoverage":true},{"functionName":"queueRunnerFactory","ranges":[{"startOffset":251033,"endOffset":251502,"count":43},{"startOffset":251076,"endOffset":251179,"count":24},{"startOffset":251179,"endOffset":251439,"count":19},{"startOffset":251337,"endOffset":251427,"count":0}],"isBlockCoverage":true},{"functionName":"nodeStart","ranges":[{"startOffset":251594,"endOffset":251851,"count":18}],"isBlockCoverage":true},{"functionName":"nodeComplete","ranges":[{"startOffset":251875,"endOffset":252543,"count":18},{"startOffset":251947,"endOffset":252026,"count":0},{"startOffset":252179,"endOffset":252229,"count":0},{"startOffset":252300,"endOffset":252458,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":252365,"endOffset":252444,"count":0}],"isBlockCoverage":false},{"functionName":"orderChildren","ranges":[{"startOffset":252568,"endOffset":252638,"count":19}],"isBlockCoverage":true},{"functionName":"excludeNode","ranges":[{"startOffset":252661,"endOffset":252730,"count":24}],"isBlockCoverage":true},{"functionName":"execute2_","ranges":[{"startOffset":252992,"endOffset":256785,"count":1},{"startOffset":254265,"endOffset":254344,"count":0},{"startOffset":254622,"endOffset":254665,"count":0},{"startOffset":254711,"endOffset":254855,"count":0},{"startOffset":254890,"endOffset":255023,"count":0}],"isBlockCoverage":true},{"functionName":"reportSuiteDone_","ranges":[{"startOffset":256791,"endOffset":256920,"count":18}],"isBlockCoverage":true},{"functionName":"reportChildrenOfBeforeAllFailure_","ranges":[{"startOffset":256926,"endOffset":258056,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.SkipAfterBeforeAllErrorPolicy","ranges":[{"startOffset":258138,"endOffset":259364,"count":1}],"isBlockCoverage":true},{"functionName":"SkipAfterBeforeAllErrorPolicy","ranges":[{"startOffset":258155,"endOffset":258280,"count":0}],"isBlockCoverage":false},{"functionName":"SkipAfterBeforeAllErrorPolicy.skipTo","ranges":[{"startOffset":258333,"endOffset":258486,"count":0}],"isBlockCoverage":false},{"functionName":"SkipAfterBeforeAllErrorPolicy.nextAfterAllAfter_","ranges":[{"startOffset":258552,"endOffset":258711,"count":0}],"isBlockCoverage":false},{"functionName":"SkipAfterBeforeAllErrorPolicy.fnErrored","ranges":[{"startOffset":258768,"endOffset":259320,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.Spy","ranges":[{"startOffset":259396,"endOffset":265702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":259432,"endOffset":259521,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":259476,"endOffset":259516,"count":21}],"isBlockCoverage":true},{"functionName":"Spy","ranges":[{"startOffset":259755,"endOffset":263921,"count":80},{"startOffset":260612,"endOffset":260617,"count":0},{"startOffset":260673,"endOffset":260692,"count":0},{"startOffset":262644,"endOffset":263896,"count":0}],"isBlockCoverage":true},{"functionName":"spy","ranges":[{"startOffset":259817,"endOffset":260536,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":260732,"endOffset":260822,"count":21}],"isBlockCoverage":true},{"functionName":"getSpy","ranges":[{"startOffset":260955,"endOffset":261007,"count":16}],"isBlockCoverage":true},{"functionName":"makeFunc","ranges":[{"startOffset":261142,"endOffset":262607,"count":80},{"startOffset":261206,"endOffset":261326,"count":0},{"startOffset":261335,"endOffset":261458,"count":0},{"startOffset":261467,"endOffset":261593,"count":0},{"startOffset":261602,"endOffset":261731,"count":0},{"startOffset":261740,"endOffset":261872,"count":0},{"startOffset":261881,"endOffset":262016,"count":0},{"startOffset":262025,"endOffset":262163,"count":0},{"startOffset":262172,"endOffset":262313,"count":0},{"startOffset":262322,"endOffset":262466,"count":0}],"isBlockCoverage":true},{"functionName":"wrap1","ranges":[{"startOffset":261231,"endOffset":261325,"count":0}],"isBlockCoverage":false},{"functionName":"wrap2","ranges":[{"startOffset":261360,"endOffset":261457,"count":0}],"isBlockCoverage":false},{"functionName":"wrap3","ranges":[{"startOffset":261492,"endOffset":261592,"count":0}],"isBlockCoverage":false},{"functionName":"wrap4","ranges":[{"startOffset":261627,"endOffset":261730,"count":0}],"isBlockCoverage":false},{"functionName":"wrap5","ranges":[{"startOffset":261765,"endOffset":261871,"count":0}],"isBlockCoverage":false},{"functionName":"wrap6","ranges":[{"startOffset":261906,"endOffset":262015,"count":0}],"isBlockCoverage":false},{"functionName":"wrap7","ranges":[{"startOffset":262050,"endOffset":262162,"count":0}],"isBlockCoverage":false},{"functionName":"wrap8","ranges":[{"startOffset":262197,"endOffset":262312,"count":0}],"isBlockCoverage":false},{"functionName":"wrap9","ranges":[{"startOffset":262347,"endOffset":262465,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":262501,"endOffset":262592,"count":21}],"isBlockCoverage":true},{"functionName":"Spy.wrapper.withArgs","ranges":[{"startOffset":263691,"endOffset":263788,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategyDispatcher","ranges":[{"startOffset":263925,"endOffset":264916,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":264089,"endOffset":264154,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategyDispatcher.exec","ranges":[{"startOffset":264218,"endOffset":264809,"count":21},{"startOffset":264355,"endOffset":264386,"count":0},{"startOffset":264388,"endOffset":264692,"count":0}],"isBlockCoverage":true},{"functionName":"SpyStrategyDispatcher.withArgs","ranges":[{"startOffset":264832,"endOffset":264911,"count":0}],"isBlockCoverage":false},{"functionName":"StrategyDict","ranges":[{"startOffset":264920,"endOffset":265086,"count":80}],"isBlockCoverage":true},{"functionName":"StrategyDict.any","ranges":[{"startOffset":265119,"endOffset":265174,"count":21}],"isBlockCoverage":true},{"functionName":"StrategyDict.getOrCreate","ranges":[{"startOffset":265216,"endOffset":265448,"count":0}],"isBlockCoverage":false},{"functionName":"StrategyDict.get","ranges":[{"startOffset":265482,"endOffset":265684,"count":21},{"startOffset":265552,"endOffset":265680,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.SpyFactory","ranges":[{"startOffset":265741,"endOffset":268057,"count":1}],"isBlockCoverage":true},{"functionName":"SpyFactory","ranges":[{"startOffset":265758,"endOffset":267643,"count":1}],"isBlockCoverage":true},{"functionName":"SpyFactory.createSpy","ranges":[{"startOffset":265877,"endOffset":266217,"count":80},{"startOffset":265937,"endOffset":265964,"count":0},{"startOffset":265966,"endOffset":266034,"count":0}],"isBlockCoverage":true},{"functionName":"SpyFactory.createSpyObj","ranges":[{"startOffset":266244,"endOffset":267638,"count":20},{"startOffset":266418,"endOffset":266526,"count":0},{"startOffset":266653,"endOffset":266866,"count":80},{"startOffset":266801,"endOffset":266858,"count":0},{"startOffset":266978,"endOffset":267440,"count":0},{"startOffset":267473,"endOffset":267499,"count":0},{"startOffset":267501,"endOffset":267613,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeKeyValues","ranges":[{"startOffset":267647,"endOffset":268033,"count":40},{"startOffset":267737,"endOffset":267834,"count":20},{"startOffset":267785,"endOffset":267828,"count":80},{"startOffset":267834,"endOffset":268010,"count":20},{"startOffset":267866,"endOffset":268010,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.SpyRegistry","ranges":[{"startOffset":268097,"endOffset":274785,"count":1}],"isBlockCoverage":true},{"functionName":"SpyRegistry","ranges":[{"startOffset":268339,"endOffset":273736,"count":1},{"startOffset":268393,"endOffset":268398,"count":0},{"startOffset":268546,"endOffset":268594,"count":0}],"isBlockCoverage":true},{"functionName":"SpyRegistry.currentSpies","ranges":[{"startOffset":268555,"endOffset":268594,"count":0}],"isBlockCoverage":false},{"functionName":"SpyRegistry.allowRespy","ranges":[{"startOffset":268619,"endOffset":268668,"count":0}],"isBlockCoverage":false},{"functionName":"SpyRegistry.spyOn","ranges":[{"startOffset":268688,"endOffset":270483,"count":0}],"isBlockCoverage":false},{"functionName":"SpyRegistry.spyOnProperty","ranges":[{"startOffset":270511,"endOffset":272554,"count":0}],"isBlockCoverage":false},{"functionName":"SpyRegistry.spyOnAllFunctions","ranges":[{"startOffset":272586,"endOffset":273508,"count":0}],"isBlockCoverage":false},{"functionName":"SpyRegistry.clearSpies","ranges":[{"startOffset":273533,"endOffset":273731,"count":43},{"startOffset":273632,"endOffset":273725,"count":0}],"isBlockCoverage":true},{"functionName":"getProps","ranges":[{"startOffset":273740,"endOffset":274107,"count":0}],"isBlockCoverage":false},{"functionName":"getSpyableFunctionProps","ranges":[{"startOffset":274111,"endOffset":274411,"count":0}],"isBlockCoverage":false},{"functionName":"isSpyableProp","ranges":[{"startOffset":274415,"endOffset":274760,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.SpyStrategy","ranges":[{"startOffset":274825,"endOffset":279329,"count":1}],"isBlockCoverage":true},{"functionName":"SpyStrategy","ranges":[{"startOffset":274882,"endOffset":276232,"count":80},{"startOffset":274936,"endOffset":274941,"count":0},{"startOffset":275136,"endOffset":275148,"count":0},{"startOffset":275234,"endOffset":275250,"count":0},{"startOffset":275344,"endOffset":275349,"count":0},{"startOffset":275375,"endOffset":275477,"count":0}],"isBlockCoverage":true},{"functionName":"SpyStrategy.originalFn","ranges":[{"startOffset":275186,"endOffset":275199,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.getSpy","ranges":[{"startOffset":275237,"endOffset":275250,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.plan._defaultPlan","ranges":[{"startOffset":275288,"endOffset":275301,"count":10}],"isBlockCoverage":true},{"functionName":"SpyStrategy.resolveTo","ranges":[{"startOffset":275720,"endOffset":275850,"count":6}],"isBlockCoverage":true},{"functionName":"plan","ranges":[{"startOffset":275756,"endOffset":275815,"count":6}],"isBlockCoverage":true},{"functionName":"SpyStrategy.rejectWith","ranges":[{"startOffset":276098,"endOffset":276227,"count":0}],"isBlockCoverage":false},{"functionName":"createCustomPlan","ranges":[{"startOffset":276236,"endOffset":276519,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.exec","ranges":[{"startOffset":276664,"endOffset":276918,"count":21},{"startOffset":276789,"endOffset":276793,"count":0},{"startOffset":276888,"endOffset":276902,"count":0}],"isBlockCoverage":true},{"functionName":"SpyStrategy.callThrough","ranges":[{"startOffset":277114,"endOffset":277189,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.returnValue","ranges":[{"startOffset":277405,"endOffset":277508,"count":10}],"isBlockCoverage":true},{"functionName":"plan","ranges":[{"startOffset":277439,"endOffset":277477,"count":5}],"isBlockCoverage":true},{"functionName":"SpyStrategy.returnValues","ranges":[{"startOffset":277814,"endOffset":277979,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.throwError","ranges":[{"startOffset":278207,"endOffset":278391,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.callFake","ranges":[{"startOffset":278645,"endOffset":278952,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.stub","ranges":[{"startOffset":279126,"endOffset":279201,"count":0}],"isBlockCoverage":false},{"functionName":"SpyStrategy.isConfigured","ranges":[{"startOffset":279243,"endOffset":279303,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.StackTrace","ranges":[{"startOffset":279368,"endOffset":282390,"count":1}],"isBlockCoverage":true},{"functionName":"StackTrace","ranges":[{"startOffset":279385,"endOffset":279817,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279461,"endOffset":279509,"count":458}],"isBlockCoverage":true},{"functionName":"tryParseFrames","ranges":[{"startOffset":280797,"endOffset":281615,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":280881,"endOffset":281547,"count":415},{"startOffset":281524,"endOffset":281540,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":280947,"endOffset":281493,"count":496},{"startOffset":281047,"endOffset":281081,"count":81},{"startOffset":281081,"endOffset":281230,"count":415},{"startOffset":281230,"endOffset":281264,"count":0},{"startOffset":281264,"endOffset":281288,"count":415},{"startOffset":281288,"endOffset":281304,"count":43}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":281619,"endOffset":281771,"count":415},{"startOffset":281677,"endOffset":281767,"count":496},{"startOffset":281729,"endOffset":281761,"count":415},{"startOffset":281767,"endOffset":281770,"count":0}],"isBlockCoverage":true},{"functionName":"extractMessage","ranges":[{"startOffset":281775,"endOffset":282028,"count":43}],"isBlockCoverage":true},{"functionName":"messagePrefixLength","ranges":[{"startOffset":282032,"endOffset":282366,"count":43},{"startOffset":282127,"endOffset":282150,"count":0},{"startOffset":282249,"endOffset":282329,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Suite","ranges":[{"startOffset":282424,"endOffset":291519,"count":1}],"isBlockCoverage":true},{"functionName":"Suite","ranges":[{"startOffset":282441,"endOffset":283258,"count":19},{"startOffset":282964,"endOffset":282970,"count":0},{"startOffset":283041,"endOffset":283057,"count":0},{"startOffset":283193,"endOffset":283210,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.onLateError","ranges":[{"startOffset":283044,"endOffset":283057,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.setSuiteProperty","ranges":[{"startOffset":283297,"endOffset":283423,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.getFullName","ranges":[{"startOffset":283458,"endOffset":283743,"count":43},{"startOffset":283605,"endOffset":283708,"count":124},{"startOffset":283642,"endOffset":283702,"count":81}],"isBlockCoverage":true},{"functionName":"Suite.pend","ranges":[{"startOffset":283824,"endOffset":283871,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.exclude","ranges":[{"startOffset":284066,"endOffset":284132,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.beforeEach","ranges":[{"startOffset":284166,"endOffset":284236,"count":3}],"isBlockCoverage":true},{"functionName":"Suite.beforeAll","ranges":[{"startOffset":284269,"endOffset":284358,"count":2}],"isBlockCoverage":true},{"functionName":"Suite.afterEach","ranges":[{"startOffset":284391,"endOffset":284479,"count":2}],"isBlockCoverage":true},{"functionName":"Suite.afterAll","ranges":[{"startOffset":284511,"endOffset":284588,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.startTimer","ranges":[{"startOffset":284622,"endOffset":284662,"count":18}],"isBlockCoverage":true},{"functionName":"Suite.endTimer","ranges":[{"startOffset":284694,"endOffset":284759,"count":18}],"isBlockCoverage":true},{"functionName":"removeFns","ranges":[{"startOffset":284764,"endOffset":284865,"count":72},{"startOffset":284834,"endOffset":284861,"count":7}],"isBlockCoverage":true},{"functionName":"Suite.cleanupBeforeAfter","ranges":[{"startOffset":284906,"endOffset":285098,"count":18}],"isBlockCoverage":true},{"functionName":"Suite.reset","ranges":[{"startOffset":285127,"endOffset":286769,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":286688,"endOffset":286732,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.removeChildren","ranges":[{"startOffset":286807,"endOffset":286847,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addChild","ranges":[{"startOffset":286879,"endOffset":286931,"count":42}],"isBlockCoverage":true},{"functionName":"Suite.status","ranges":[{"startOffset":286961,"endOffset":287156,"count":18},{"startOffset":287002,"endOffset":287033,"count":0},{"startOffset":287086,"endOffset":287116,"count":0}],"isBlockCoverage":true},{"functionName":"Suite.canBeReentered","ranges":[{"startOffset":287194,"endOffset":287286,"count":19},{"startOffset":287249,"endOffset":287281,"count":17}],"isBlockCoverage":true},{"functionName":"Suite.getResult","ranges":[{"startOffset":287319,"endOffset":287399,"count":18}],"isBlockCoverage":true},{"functionName":"Suite.sharedUserContext","ranges":[{"startOffset":287440,"endOffset":287654,"count":61},{"startOffset":287482,"endOffset":287618,"count":19},{"startOffset":287536,"endOffset":287580,"count":18},{"startOffset":287589,"endOffset":287611,"count":1}],"isBlockCoverage":true},{"functionName":"Suite.clonedSharedUserContext","ranges":[{"startOffset":287701,"endOffset":287783,"count":42}],"isBlockCoverage":true},{"functionName":"Suite.handleException","ranges":[{"startOffset":287822,"endOffset":288363,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.onMultipleDone","ranges":[{"startOffset":288401,"endOffset":289061,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addExpectationResult","ranges":[{"startOffset":289105,"endOffset":289683,"count":0}],"isBlockCoverage":false},{"functionName":"Suite.addDeprecationWarning","ranges":[{"startOffset":289728,"endOffset":289944,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":290011,"endOffset":290146,"count":36},{"startOffset":290051,"endOffset":290110,"count":19}],"isBlockCoverage":true},{"functionName":"SuiteMetadata","ranges":[{"startOffset":290231,"endOffset":290907,"count":19},{"startOffset":290639,"endOffset":290667,"count":18},{"startOffset":290668,"endOffset":290674,"count":1}],"isBlockCoverage":true},{"functionName":"SuiteMetadata.getFullName","ranges":[{"startOffset":291111,"endOffset":291165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":291357,"endOffset":291439,"count":0}],"isBlockCoverage":false},{"functionName":"isFailure","ranges":[{"startOffset":291449,"endOffset":291500,"count":0}],"isBlockCoverage":false},{"functionName":"getJasmineRequireObj.SuiteBuilder","ranges":[{"startOffset":291560,"endOffset":300848,"count":1}],"isBlockCoverage":true},{"functionName":"SuiteBuilder","ranges":[{"startOffset":291602,"endOffset":292424,"count":1}],"isBlockCoverage":true},{"functionName":"SuiteBuilder.suiteAsyncExpectationFactory_","ranges":[{"startOffset":291760,"endOffset":291865,"count":0}],"isBlockCoverage":false},{"functionName":"SuiteBuilder.specAsyncExpectationFactory_","ranges":[{"startOffset":291909,"endOffset":292013,"count":0}],"isBlockCoverage":false},{"functionName":"inDescribe","ranges":[{"startOffset":292430,"endOffset":292512,"count":0}],"isBlockCoverage":false},{"functionName":"parallelReset","ranges":[{"startOffset":292518,"endOffset":292675,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":292681,"endOffset":293121,"count":18},{"startOffset":292877,"endOffset":292953,"count":0},{"startOffset":293011,"endOffset":293045,"count":0}],"isBlockCoverage":true},{"functionName":"fdescribe","ranges":[{"startOffset":293127,"endOffset":293471,"count":0}],"isBlockCoverage":false},{"functionName":"xdescribe","ranges":[{"startOffset":293477,"endOffset":293739,"count":0}],"isBlockCoverage":false},{"functionName":"it","ranges":[{"startOffset":293745,"endOffset":294064,"count":24}],"isBlockCoverage":true},{"functionName":"xit","ranges":[{"startOffset":294070,"endOffset":294476,"count":0}],"isBlockCoverage":false},{"functionName":"fit","ranges":[{"startOffset":294482,"endOffset":294974,"count":0}],"isBlockCoverage":false},{"functionName":"beforeEach","ranges":[{"startOffset":294980,"endOffset":295286,"count":3},{"startOffset":295107,"endOffset":295158,"count":0}],"isBlockCoverage":true},{"functionName":"beforeAll","ranges":[{"startOffset":295292,"endOffset":295592,"count":2},{"startOffset":295415,"endOffset":295466,"count":0}],"isBlockCoverage":true},{"functionName":"afterEach","ranges":[{"startOffset":295598,"endOffset":295940,"count":2},{"startOffset":295721,"endOffset":295772,"count":0}],"isBlockCoverage":true},{"functionName":"afterAll","ranges":[{"startOffset":295946,"endOffset":296240,"count":0}],"isBlockCoverage":false},{"functionName":"it_","ranges":[{"startOffset":296246,"endOffset":296602,"count":24},{"startOffset":296307,"endOffset":296358,"count":0},{"startOffset":296491,"endOffset":296524,"count":0}],"isBlockCoverage":true},{"functionName":"suiteFactory_","ranges":[{"startOffset":296608,"endOffset":297346,"count":19},{"startOffset":296826,"endOffset":296832,"count":4},{"startOffset":296833,"endOffset":296849,"count":15}],"isBlockCoverage":true},{"functionName":"addSpecsToSuite_","ranges":[{"startOffset":297352,"endOffset":297927,"count":18},{"startOffset":297599,"endOffset":297674,"count":0},{"startOffset":297730,"endOffset":297739,"count":0},{"startOffset":297741,"endOffset":297869,"count":0}],"isBlockCoverage":true},{"functionName":"specFactory_","ranges":[{"startOffset":297933,"endOffset":299192,"count":24},{"startOffset":298167,"endOffset":298173,"count":0}],"isBlockCoverage":true},{"functionName":"resultCallback","ranges":[{"startOffset":298540,"endOffset":298625,"count":24}],"isBlockCoverage":true},{"functionName":"getSpecName","ranges":[{"startOffset":298648,"endOffset":298717,"count":24}],"isBlockCoverage":true},{"functionName":"onStart","ranges":[{"startOffset":298736,"endOffset":298788,"count":24}],"isBlockCoverage":true},{"functionName":"userContext","ranges":[{"startOffset":298845,"endOffset":298917,"count":24}],"isBlockCoverage":true},{"functionName":"unfocusAncestor_","ranges":[{"startOffset":299198,"endOffset":299573,"count":0}],"isBlockCoverage":false},{"functionName":"findFocusedAncestor","ranges":[{"startOffset":299581,"endOffset":299761,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIsFunction","ranges":[{"startOffset":299765,"endOffset":299954,"count":18},{"startOffset":299834,"endOffset":299950,"count":0}],"isBlockCoverage":true},{"functionName":"ensureIsFunctionOrAsync","ranges":[{"startOffset":299958,"endOffset":300182,"count":31},{"startOffset":300033,"endOffset":300060,"count":28},{"startOffset":300062,"endOffset":300178,"count":0}],"isBlockCoverage":true},{"functionName":"beforeAndAfterFns","ranges":[{"startOffset":300186,"endOffset":300586,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":300239,"endOffset":300581,"count":24},{"startOffset":300347,"endOffset":300491,"count":72}],"isBlockCoverage":true},{"functionName":"getSpecName","ranges":[{"startOffset":300590,"endOffset":300822,"count":24}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.Timer","ranges":[{"startOffset":300882,"endOffset":301762,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":300917,"endOffset":301003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":300945,"endOffset":300998,"count":86}],"isBlockCoverage":true},{"functionName":"Timer","ranges":[{"startOffset":301192,"endOffset":301743,"count":45}],"isBlockCoverage":true},{"functionName":"Timer.start","ranges":[{"startOffset":301411,"endOffset":301454,"count":43}],"isBlockCoverage":true},{"functionName":"Timer.elapsed","ranges":[{"startOffset":301688,"endOffset":301738,"count":43}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.TreeProcessor","ranges":[{"startOffset":301804,"endOffset":308938,"count":1}],"isBlockCoverage":true},{"functionName":"TreeProcessor","ranges":[{"startOffset":301819,"endOffset":308911,"count":1},{"startOffset":302018,"endOffset":302034,"count":0},{"startOffset":302080,"endOffset":302096,"count":0},{"startOffset":302225,"endOffset":302288,"count":0},{"startOffset":302338,"endOffset":302393,"count":0}],"isBlockCoverage":true},{"functionName":"TreeProcessor.nodeStart","ranges":[{"startOffset":302021,"endOffset":302034,"count":0}],"isBlockCoverage":false},{"functionName":"TreeProcessor.nodeComplete","ranges":[{"startOffset":302083,"endOffset":302096,"count":0}],"isBlockCoverage":false},{"functionName":"TreeProcessor.orderChildren","ranges":[{"startOffset":302234,"endOffset":302288,"count":0}],"isBlockCoverage":false},{"functionName":"TreeProcessor.excludeNode","ranges":[{"startOffset":302347,"endOffset":302393,"count":0}],"isBlockCoverage":false},{"functionName":"TreeProcessor.processTree","ranges":[{"startOffset":302549,"endOffset":302642,"count":1}],"isBlockCoverage":true},{"functionName":"TreeProcessor.execute","ranges":[{"startOffset":302664,"endOffset":303287,"count":1},{"startOffset":302705,"endOffset":302742,"count":0},{"startOffset":302768,"endOffset":302808,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":302881,"endOffset":303279,"count":1},{"startOffset":303253,"endOffset":303259,"count":0}],"isBlockCoverage":true},{"functionName":"onException","ranges":[{"startOffset":303036,"endOffset":303117,"count":0}],"isBlockCoverage":false},{"functionName":"runnableIndex","ranges":[{"startOffset":303294,"endOffset":303456,"count":43},{"startOffset":303411,"endOffset":303442,"count":1},{"startOffset":303450,"endOffset":303455,"count":42}],"isBlockCoverage":true},{"functionName":"processNode","ranges":[{"startOffset":303462,"endOffset":304893,"count":43},{"startOffset":303603,"endOffset":303644,"count":1},{"startOffset":303672,"endOffset":304107,"count":24},{"startOffset":304107,"endOffset":304887,"count":19},{"startOffset":304267,"endOffset":304557,"count":42},{"startOffset":304389,"endOffset":304422,"count":0},{"startOffset":304521,"endOffset":304546,"count":19},{"startOffset":304793,"endOffset":304830,"count":2},{"startOffset":304832,"endOffset":304879,"count":0}],"isBlockCoverage":true},{"functionName":"startingMin","ranges":[{"startOffset":304899,"endOffset":305019,"count":43},{"startOffset":304982,"endOffset":304994,"count":42},{"startOffset":304995,"endOffset":305012,"count":1}],"isBlockCoverage":true},{"functionName":"startingMax","ranges":[{"startOffset":305025,"endOffset":305145,"count":43},{"startOffset":305108,"endOffset":305120,"count":42},{"startOffset":305121,"endOffset":305138,"count":1}],"isBlockCoverage":true},{"functionName":"segmentChildren","ranges":[{"startOffset":305151,"endOffset":306507,"count":19},{"startOffset":305834,"endOffset":306465,"count":42},{"startOffset":306010,"endOffset":306241,"count":0}],"isBlockCoverage":true},{"functionName":"isSegmentBoundary","ranges":[{"startOffset":305592,"endOffset":305772,"count":42},{"startOffset":305681,"endOffset":305717,"count":0},{"startOffset":305718,"endOffset":305753,"count":0}],"isBlockCoverage":true},{"functionName":"orderChildSegments","ranges":[{"startOffset":306513,"endOffset":307150,"count":19},{"startOffset":306666,"endOffset":307005,"count":42},{"startOffset":306930,"endOffset":306987,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":307033,"endOffset":307087,"count":0}],"isBlockCoverage":false},{"functionName":"executeNode","ranges":[{"startOffset":307156,"endOffset":308436,"count":42},{"startOffset":307225,"endOffset":308169,"count":18},{"startOffset":308169,"endOffset":308430,"count":24}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":307258,"endOffset":308150,"count":18},{"startOffset":308116,"endOffset":308122,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":307323,"endOffset":307394,"count":18}],"isBlockCoverage":true},{"functionName":"onComplete","ranges":[{"startOffset":307470,"endOffset":307747,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":307652,"endOffset":307729,"count":18}],"isBlockCoverage":true},{"functionName":"onException","ranges":[{"startOffset":307910,"endOffset":307999,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":308208,"endOffset":308411,"count":24}],"isBlockCoverage":true},{"functionName":"wrapChildren","ranges":[{"startOffset":308442,"endOffset":308907,"count":19},{"startOffset":308640,"endOffset":308755,"count":42},{"startOffset":308796,"endOffset":308828,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.UserContext","ranges":[{"startOffset":308978,"endOffset":309302,"count":1}],"isBlockCoverage":true},{"functionName":"UserContext","ranges":[{"startOffset":308995,"endOffset":309020,"count":129}],"isBlockCoverage":true},{"functionName":"UserContext.fromExisting","ranges":[{"startOffset":309051,"endOffset":309276,"count":42},{"startOffset":309149,"endOffset":309251,"count":0}],"isBlockCoverage":true},{"functionName":"getJasmineRequireObj.version","ranges":[{"startOffset":309338,"endOffset":309370,"count":1}],"isBlockCoverage":true}]},{"scriptId":"493","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8150,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":903,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1272,"endOffset":3085,"count":17}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1841,"endOffset":2702,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2297,"endOffset":2548,"count":32}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3089,"endOffset":3234,"count":3}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3238,"endOffset":6858,"count":3},{"startOffset":3698,"endOffset":3875,"count":0},{"startOffset":3932,"endOffset":6611,"count":0},{"startOffset":6658,"endOffset":6854,"count":36}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3337,"endOffset":3597,"count":59},{"startOffset":3398,"endOffset":3423,"count":23},{"startOffset":3423,"endOffset":3596,"count":36}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6862,"endOffset":8070,"count":3},{"startOffset":7037,"endOffset":8013,"count":0}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/spec/controller.endtoend.spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5895,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":803,"endOffset":5892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":926,"endOffset":981,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":998,"endOffset":1499,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1516,"endOffset":2095,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2127,"endOffset":2736,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2158,"endOffset":2353,"count":1},{"startOffset":2230,"endOffset":2245,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2390,"endOffset":2728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2612,"endOffset":2668,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2768,"endOffset":3462,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2799,"endOffset":3120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3165,"endOffset":3454,"count":1},{"startOffset":3248,"endOffset":3339,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3490,"endOffset":4499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3521,"endOffset":3976,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4030,"endOffset":4491,"count":1},{"startOffset":4151,"endOffset":4249,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4530,"endOffset":5078,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4589,"endOffset":5070,"count":1},{"startOffset":4756,"endOffset":4823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4979,"endOffset":5001,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5109,"endOffset":5877,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5140,"endOffset":5533,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5577,"endOffset":5869,"count":1},{"startOffset":5661,"endOffset":5756,"count":0}],"isBlockCoverage":true}]},{"scriptId":"495","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":9},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":2},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":3},{"startOffset":663,"endOffset":696,"count":6},{"startOffset":709,"endOffset":773,"count":48}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":57},{"startOffset":853,"endOffset":862,"count":47},{"startOffset":862,"endOffset":913,"count":10},{"startOffset":913,"endOffset":1023,"count":84},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":10},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":9},{"startOffset":1192,"endOffset":1214,"count":62628}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":4},{"startOffset":1245,"endOffset":33615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"node:http2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":466,"count":1}],"isBlockCoverage":false}]},{"scriptId":"497","url":"node:internal/http2/core","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107975,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4579,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"debugStream","ranges":[{"startOffset":4644,"endOffset":4869,"count":0}],"isBlockCoverage":false},{"functionName":"debugStreamObj","ranges":[{"startOffset":4871,"endOffset":5088,"count":0}],"isBlockCoverage":false},{"functionName":"debugSession","ranges":[{"startOffset":5090,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"debugSessionObj","ranges":[{"startOffset":5254,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":8579,"endOffset":8650,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionHeaders","ranges":[{"startOffset":8952,"endOffset":11549,"count":0}],"isBlockCoverage":false},{"functionName":"tryClose","ranges":[{"startOffset":11551,"endOffset":11734,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":11905,"endOffset":12206,"count":0}],"isBlockCoverage":false},{"functionName":"submitRstStream","ranges":[{"startOffset":12318,"endOffset":12428,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerAdded","ranges":[{"startOffset":12587,"endOffset":13167,"count":0}],"isBlockCoverage":false},{"functionName":"sessionListenerRemoved","ranges":[{"startOffset":13169,"endOffset":13914,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerAdded","ranges":[{"startOffset":14027,"endOffset":14343,"count":0}],"isBlockCoverage":false},{"functionName":"streamListenerRemoved","ranges":[{"startOffset":14345,"endOffset":14663,"count":0}],"isBlockCoverage":false},{"functionName":"onPing","ranges":[{"startOffset":14665,"endOffset":14871,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamClose","ranges":[{"startOffset":15258,"endOffset":16352,"count":0}],"isBlockCoverage":false},{"functionName":"onSettings","ranges":[{"startOffset":16444,"endOffset":16716,"count":0}],"isBlockCoverage":false},{"functionName":"onPriority","ranges":[{"startOffset":16909,"endOffset":17358,"count":0}],"isBlockCoverage":false},{"functionName":"onFrameError","ranges":[{"startOffset":17470,"endOffset":17897,"count":0}],"isBlockCoverage":false},{"functionName":"onAltSvc","ranges":[{"startOffset":17899,"endOffset":18203,"count":0}],"isBlockCoverage":false},{"functionName":"initOriginSet","ranges":[{"startOffset":18205,"endOffset":18835,"count":0}],"isBlockCoverage":false},{"functionName":"onOrigin","ranges":[{"startOffset":18837,"endOffset":19245,"count":0}],"isBlockCoverage":false},{"functionName":"onGoawayData","ranges":[{"startOffset":19648,"endOffset":20600,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnConnect","ranges":[{"startOffset":20802,"endOffset":22857,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23221,"endOffset":24060,"count":0}],"isBlockCoverage":false},{"functionName":"onSessionInternalError","ranges":[{"startOffset":24157,"endOffset":24329,"count":0}],"isBlockCoverage":false},{"functionName":"settingsCallback","ranges":[{"startOffset":24331,"endOffset":24798,"count":0}],"isBlockCoverage":false},{"functionName":"submitSettings","ranges":[{"startOffset":24859,"endOffset":25252,"count":0}],"isBlockCoverage":false},{"functionName":"submitPriority","ranges":[{"startOffset":25415,"endOffset":25838,"count":0}],"isBlockCoverage":false},{"functionName":"submitGoaway","ranges":[{"startOffset":26073,"endOffset":26290,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26323,"endOffset":27064,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":27068,"endOffset":27250,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27254,"endOffset":27896,"count":0}],"isBlockCoverage":false},{"functionName":"pingCallback","ranges":[{"startOffset":28307,"endOffset":28506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29115,"endOffset":30394,"count":0}],"isBlockCoverage":false},{"functionName":"trackAssignmentsTypedArray","ranges":[{"startOffset":30531,"endOffset":31252,"count":0}],"isBlockCoverage":false},{"functionName":"setupHandle","ranges":[{"startOffset":31538,"endOffset":33813,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":33927,"endOffset":34028,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupSession","ranges":[{"startOffset":34030,"endOffset":34465,"count":0}],"isBlockCoverage":false},{"functionName":"finishSessionClose","ranges":[{"startOffset":34467,"endOffset":35415,"count":0}],"isBlockCoverage":false},{"functionName":"closeSession","ranges":[{"startOffset":35417,"endOffset":36472,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Session","ranges":[{"startOffset":38625,"endOffset":41406,"count":0}],"isBlockCoverage":false},{"functionName":"get encrypted","ranges":[{"startOffset":41533,"endOffset":41583,"count":0}],"isBlockCoverage":false},{"functionName":"get alpnProtocol","ranges":[{"startOffset":41763,"endOffset":41819,"count":0}],"isBlockCoverage":false},{"functionName":"get originSet","ranges":[{"startOffset":42186,"endOffset":42317,"count":0}],"isBlockCoverage":false},{"functionName":"get connecting","ranges":[{"startOffset":42394,"endOffset":42477,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":42541,"endOffset":42617,"count":0}],"isBlockCoverage":false},{"functionName":"get destroyed","ranges":[{"startOffset":42683,"endOffset":42765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42801,"endOffset":42911,"count":0}],"isBlockCoverage":false},{"functionName":"setNextStreamID","ranges":[{"startOffset":43127,"endOffset":43401,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalWindowSize","ranges":[{"startOffset":43574,"endOffset":43878,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":44077,"endOffset":44832,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44836,"endOffset":45193,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":45235,"endOffset":45422,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":45448,"endOffset":45488,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayCode","ranges":[{"startOffset":45565,"endOffset":45643,"count":0}],"isBlockCoverage":false},{"functionName":"get goawayLastStreamID","ranges":[{"startOffset":45723,"endOffset":45802,"count":0}],"isBlockCoverage":false},{"functionName":"get pendingSettingsAck","ranges":[{"startOffset":45878,"endOffset":45948,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":46006,"endOffset":46113,"count":0}],"isBlockCoverage":false},{"functionName":"get localSettings","ranges":[{"startOffset":46258,"endOffset":46521,"count":0}],"isBlockCoverage":false},{"functionName":"get remoteSettings","ranges":[{"startOffset":46584,"endOffset":47043,"count":0}],"isBlockCoverage":false},{"functionName":"settings","ranges":[{"startOffset":47108,"endOffset":47683,"count":0}],"isBlockCoverage":false},{"functionName":"goaway","ranges":[{"startOffset":47937,"endOffset":48694,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":48798,"endOffset":49214,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":49786,"endOffset":50083,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50087,"endOffset":50327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50466,"endOffset":50792,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":50796,"endOffset":50837,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":50841,"endOffset":50910,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":50914,"endOffset":50987,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Session","ranges":[{"startOffset":51205,"endOffset":51713,"count":0}],"isBlockCoverage":false},{"functionName":"get server","ranges":[{"startOffset":51717,"endOffset":51761,"count":0}],"isBlockCoverage":false},{"functionName":"altsvc","ranges":[{"startOffset":52010,"endOffset":53874,"count":0}],"isBlockCoverage":false},{"functionName":"origin","ranges":[{"startOffset":53919,"endOffset":54671,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Session","ranges":[{"startOffset":54977,"endOffset":55102,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":55212,"endOffset":58984,"count":0}],"isBlockCoverage":false},{"functionName":"trackWriteState","ranges":[{"startOffset":58988,"endOffset":59201,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnResume","ranges":[{"startOffset":59203,"endOffset":59286,"count":0}],"isBlockCoverage":false},{"functionName":"streamOnPause","ranges":[{"startOffset":59288,"endOffset":59386,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":59388,"endOffset":59613,"count":0}],"isBlockCoverage":false},{"functionName":"shutdownWritable","ranges":[{"startOffset":59615,"endOffset":60162,"count":0}],"isBlockCoverage":false},{"functionName":"finishSendTrailers","ranges":[{"startOffset":60164,"endOffset":60625,"count":0}],"isBlockCoverage":false},{"functionName":"closeStream","ranges":[{"startOffset":60707,"endOffset":61642,"count":0}],"isBlockCoverage":false},{"functionName":"finishCloseStream","ranges":[{"startOffset":61644,"endOffset":62029,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Stream","ranges":[{"startOffset":62185,"endOffset":63308,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63312,"endOffset":63490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63494,"endOffset":63921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63925,"endOffset":64292,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferSize","ranges":[{"startOffset":64296,"endOffset":64510,"count":0}],"isBlockCoverage":false},{"functionName":"get endAfterHeaders","ranges":[{"startOffset":64514,"endOffset":64582,"count":0}],"isBlockCoverage":false},{"functionName":"get sentHeaders","ranges":[{"startOffset":64586,"endOffset":64640,"count":0}],"isBlockCoverage":false},{"functionName":"get sentTrailers","ranges":[{"startOffset":64644,"endOffset":64700,"count":0}],"isBlockCoverage":false},{"functionName":"get sentInfoHeaders","ranges":[{"startOffset":64704,"endOffset":64762,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":64766,"endOffset":64821,"count":0}],"isBlockCoverage":false},{"functionName":"get id","ranges":[{"startOffset":64916,"endOffset":64952,"count":0}],"isBlockCoverage":false},{"functionName":"get session","ranges":[{"startOffset":65006,"endOffset":65052,"count":0}],"isBlockCoverage":false},{"functionName":"_onTimeout","ranges":[{"startOffset":65056,"endOffset":65107,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":65156,"endOffset":65242,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":65299,"endOffset":65376,"count":0}],"isBlockCoverage":false},{"functionName":"get headRequest","ranges":[{"startOffset":65421,"endOffset":65507,"count":0}],"isBlockCoverage":false},{"functionName":"get rstCode","ranges":[{"startOffset":65574,"endOffset":65626,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":65673,"endOffset":65823,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65827,"endOffset":65959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":65963,"endOffset":66129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66133,"endOffset":68585,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":68589,"endOffset":68673,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":68677,"endOffset":68745,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":68749,"endOffset":68968,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":68972,"endOffset":69317,"count":0}],"isBlockCoverage":false},{"functionName":"priority","ranges":[{"startOffset":69321,"endOffset":69839,"count":0}],"isBlockCoverage":false},{"functionName":"sendTrailers","ranges":[{"startOffset":69843,"endOffset":70541,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":70545,"endOffset":70620,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":71400,"endOffset":71715,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":71933,"endOffset":74061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74179,"endOffset":75194,"count":0}],"isBlockCoverage":false},{"functionName":"callTimeout","ranges":[{"startOffset":75198,"endOffset":76106,"count":0}],"isBlockCoverage":false},{"functionName":"callStreamClose","ranges":[{"startOffset":76108,"endOffset":76162,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaders","ranges":[{"startOffset":76164,"endOffset":77695,"count":0}],"isBlockCoverage":false},{"functionName":"onFileUnpipe","ranges":[{"startOffset":77698,"endOffset":77948,"count":0}],"isBlockCoverage":false},{"functionName":"onPipedFileHandleRead","ranges":[{"startOffset":78066,"endOffset":78238,"count":0}],"isBlockCoverage":false},{"functionName":"processRespondWithFD","ranges":[{"startOffset":78240,"endOffset":79049,"count":0}],"isBlockCoverage":false},{"functionName":"startFilePipe","ranges":[{"startOffset":79051,"endOffset":79497,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFD","ranges":[{"startOffset":79499,"endOffset":80921,"count":0}],"isBlockCoverage":false},{"functionName":"doSendFileFD","ranges":[{"startOffset":80923,"endOffset":82933,"count":0}],"isBlockCoverage":false},{"functionName":"afterOpen","ranges":[{"startOffset":82935,"endOffset":83446,"count":0}],"isBlockCoverage":false},{"functionName":"ServerHttp2Stream","ranges":[{"startOffset":83496,"endOffset":83733,"count":0}],"isBlockCoverage":false},{"functionName":"get pushAllowed","ranges":[{"startOffset":83787,"endOffset":83993,"count":0}],"isBlockCoverage":false},{"functionName":"pushStream","ranges":[{"startOffset":84103,"endOffset":86286,"count":0}],"isBlockCoverage":false},{"functionName":"respond","ranges":[{"startOffset":86335,"endOffset":87803,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFD","ranges":[{"startOffset":88196,"endOffset":90279,"count":0}],"isBlockCoverage":false},{"functionName":"respondWithFile","ranges":[{"startOffset":90753,"endOffset":92384,"count":0}],"isBlockCoverage":false},{"functionName":"additionalHeaders","ranges":[{"startOffset":92889,"endOffset":93938,"count":0}],"isBlockCoverage":false},{"functionName":"ClientHttp2Stream","ranges":[{"startOffset":94068,"endOffset":94300,"count":0}],"isBlockCoverage":false},{"functionName":"handleHeaderContinue","ranges":[{"startOffset":94304,"endOffset":94434,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":94811,"endOffset":95262,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnStream","ranges":[{"startOffset":95356,"endOffset":95525,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnPriority","ranges":[{"startOffset":95527,"endOffset":95698,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnError","ranges":[{"startOffset":95700,"endOffset":95822,"count":0}],"isBlockCoverage":false},{"functionName":"sessionOnTimeout","ranges":[{"startOffset":95952,"endOffset":96206,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":96208,"endOffset":98572,"count":0}],"isBlockCoverage":false},{"functionName":"initializeOptions","ranges":[{"startOffset":98574,"endOffset":99788,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTLSOptions","ranges":[{"startOffset":99790,"endOffset":100122,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorSecureServerSession","ranges":[{"startOffset":100124,"endOffset":100247,"count":0}],"isBlockCoverage":false},{"functionName":"Http2SecureServer","ranges":[{"startOffset":100295,"endOffset":100665,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":100669,"endOffset":100867,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":100871,"endOffset":101050,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server","ranges":[{"startOffset":101094,"endOffset":101402,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":101406,"endOffset":101604,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettings","ranges":[{"startOffset":101608,"endOffset":101787,"count":0}],"isBlockCoverage":false},{"functionName":"Http2Server.<computed>","ranges":[{"startOffset":101852,"endOffset":102778,"count":0}],"isBlockCoverage":false},{"functionName":"setupCompat","ranges":[{"startOffset":102781,"endOffset":103169,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":103171,"endOffset":103618,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":103620,"endOffset":105095,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":105201,"endOffset":105349,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureServer","ranges":[{"startOffset":105355,"endOffset":105454,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":105456,"endOffset":105637,"count":0}],"isBlockCoverage":false},{"functionName":"getPackedSettings","ranges":[{"startOffset":105802,"endOffset":105986,"count":0}],"isBlockCoverage":false},{"functionName":"getUnpackedSettings","ranges":[{"startOffset":105988,"endOffset":107423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31789,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2680,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3445,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4047,"endOffset":4163,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4324,"endOffset":5304,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5420,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6362,"endOffset":8007,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8009,"endOffset":9313,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9315,"endOffset":12534,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12536,"endOffset":13143,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":13276,"endOffset":13337,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":13596,"endOffset":13967,"count":9},{"startOffset":13668,"endOffset":13727,"count":0},{"startOffset":13790,"endOffset":13841,"count":0},{"startOffset":13843,"endOffset":13965,"count":0}],"isBlockCoverage":true},{"functionName":"notEqual","ranges":[{"startOffset":14186,"endOffset":14561,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":14761,"endOffset":15125,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15331,"endOffset":15703,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":15946,"endOffset":16334,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16583,"endOffset":16979,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17184,"endOffset":17496,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":17708,"endOffset":18028,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":18052,"endOffset":18434,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18438,"endOffset":19155,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19157,"endOffset":22559,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22561,"endOffset":22701,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":22703,"endOffset":23067,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23069,"endOffset":23783,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":23785,"endOffset":25401,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25403,"endOffset":26021,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26023,"endOffset":26673,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":26831,"endOffset":26925,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27104,"endOffset":27216,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27378,"endOffset":27472,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27638,"endOffset":27750,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":27878,"endOffset":29666,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":29669,"endOffset":30751,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":30947,"endOffset":31039,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31247,"endOffset":31353,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31485,"endOffset":31554,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17099,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1448,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1744,"endOffset":2352,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2354,"endOffset":11090,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11092,"endOffset":11395,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11436,"endOffset":16129,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16133,"endOffset":16208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16212,"endOffset":17062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":663,"count":1}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":130,"endOffset":632,"count":1},{"startOffset":279,"endOffset":283,"count":0},{"startOffset":339,"endOffset":343,"count":0},{"startOffset":399,"endOffset":403,"count":0},{"startOffset":457,"endOffset":461,"count":0},{"startOffset":516,"endOffset":520,"count":0},{"startOffset":573,"endOffset":577,"count":0}],"isBlockCoverage":true}]},{"scriptId":"501","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3450,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1496,"endOffset":3418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5406,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2050,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":4092,"endOffset":4176,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4341,"endOffset":4443,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":4754,"endOffset":4845,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4969,"endOffset":5178,"count":9},{"startOffset":5014,"endOffset":5147,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5301,"endOffset":5346,"count":9}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5350,"endOffset":5401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16986,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1703,"endOffset":1728,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2681,"endOffset":2760,"count":8}],"isBlockCoverage":true},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2764,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2945,"endOffset":6175,"count":2},{"startOffset":3007,"endOffset":3033,"count":0},{"startOffset":3584,"endOffset":3592,"count":0},{"startOffset":3770,"endOffset":3779,"count":0},{"startOffset":3975,"endOffset":4044,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4112,"endOffset":6058,"count":9},{"startOffset":4475,"endOffset":4520,"count":0},{"startOffset":4581,"endOffset":4599,"count":0},{"startOffset":4601,"endOffset":5137,"count":0},{"startOffset":5354,"endOffset":5399,"count":0},{"startOffset":5763,"endOffset":5808,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4825,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6283,"endOffset":6808,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6981,"endOffset":7479,"count":28},{"startOffset":7050,"endOffset":7064,"count":0},{"startOffset":7176,"endOffset":7205,"count":0},{"startOffset":7367,"endOffset":7396,"count":0},{"startOffset":7428,"endOffset":7461,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7511,"endOffset":9673,"count":9},{"startOffset":7734,"endOffset":7837,"count":0},{"startOffset":7931,"endOffset":7965,"count":0},{"startOffset":8264,"endOffset":8563,"count":8},{"startOffset":8325,"endOffset":8372,"count":0},{"startOffset":8413,"endOffset":8453,"count":0},{"startOffset":8595,"endOffset":8615,"count":8},{"startOffset":8616,"endOffset":8619,"count":1},{"startOffset":8691,"endOffset":8854,"count":8},{"startOffset":8854,"endOffset":9671,"count":1},{"startOffset":9224,"endOffset":9671,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9088,"endOffset":9218,"count":1},{"startOffset":9130,"endOffset":9156,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9707,"endOffset":10801,"count":1},{"startOffset":9841,"endOffset":9875,"count":0},{"startOffset":9903,"endOffset":9931,"count":0},{"startOffset":9937,"endOffset":9992,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10157,"endOffset":10488,"count":1},{"startOffset":10190,"endOffset":10205,"count":0},{"startOffset":10235,"endOffset":10273,"count":0}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":10804,"endOffset":11624,"count":9},{"startOffset":11139,"endOffset":11419,"count":0},{"startOffset":11585,"endOffset":11601,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":11626,"endOffset":13114,"count":1},{"startOffset":13069,"endOffset":13112,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":11675,"endOffset":11769,"count":9}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":11797,"endOffset":12120,"count":0}],"isBlockCoverage":false},{"functionName":"onTimeout","ranges":[{"startOffset":12150,"endOffset":12495,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12529,"endOffset":13010,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13147,"endOffset":14948,"count":9},{"startOffset":13403,"endOffset":13446,"count":0},{"startOffset":13841,"endOffset":13870,"count":0},{"startOffset":13872,"endOffset":13969,"count":0},{"startOffset":14294,"endOffset":14646,"count":0},{"startOffset":14662,"endOffset":14672,"count":0},{"startOffset":14674,"endOffset":14945,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14825,"endOffset":14939,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14985,"endOffset":15652,"count":9},{"startOffset":15131,"endOffset":15135,"count":0},{"startOffset":15478,"endOffset":15533,"count":0}],"isBlockCoverage":true},{"functionName":"reuseSocket","ranges":[{"startOffset":15685,"endOffset":15853,"count":8}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":15882,"endOffset":16231,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":16234,"endOffset":16475,"count":9},{"startOffset":16351,"endOffset":16355,"count":0},{"startOffset":16389,"endOffset":16420,"count":0},{"startOffset":16439,"endOffset":16474,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16477,"endOffset":16872,"count":8}],"isBlockCoverage":true}]},{"scriptId":"504","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28358,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3080,"endOffset":3105,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":3350,"endOffset":3643,"count":9},{"startOffset":3457,"endOffset":3626,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3679,"endOffset":3749,"count":9}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":3753,"endOffset":11260,"count":9},{"startOffset":3880,"endOffset":3958,"count":0},{"startOffset":4003,"endOffset":4064,"count":0},{"startOffset":4066,"endOffset":4132,"count":0},{"startOffset":4239,"endOffset":4299,"count":0},{"startOffset":4481,"endOffset":4530,"count":0},{"startOffset":4790,"endOffset":5020,"count":0},{"startOffset":5080,"endOffset":5104,"count":0},{"startOffset":5365,"endOffset":5493,"count":0},{"startOffset":5536,"endOffset":5605,"count":0},{"startOffset":5756,"endOffset":5770,"count":0},{"startOffset":5771,"endOffset":5776,"count":0},{"startOffset":5851,"endOffset":5916,"count":0},{"startOffset":5917,"endOffset":5931,"count":0},{"startOffset":5983,"endOffset":6010,"count":0},{"startOffset":6096,"endOffset":6156,"count":0},{"startOffset":6205,"endOffset":6244,"count":0},{"startOffset":6397,"endOffset":6474,"count":0},{"startOffset":6545,"endOffset":6610,"count":0},{"startOffset":6677,"endOffset":6722,"count":0},{"startOffset":6810,"endOffset":6861,"count":0},{"startOffset":6998,"endOffset":7074,"count":0},{"startOffset":7175,"endOffset":7263,"count":0},{"startOffset":7353,"endOffset":7359,"count":0},{"startOffset":7432,"endOffset":7458,"count":5},{"startOffset":7459,"endOffset":7487,"count":5},{"startOffset":7488,"endOffset":7517,"count":3},{"startOffset":7518,"endOffset":7545,"count":3},{"startOffset":7546,"endOffset":7575,"count":3},{"startOffset":7577,"endOffset":7628,"count":6},{"startOffset":7628,"endOffset":7684,"count":3},{"startOffset":8271,"endOffset":8312,"count":0},{"startOffset":8314,"endOffset":8382,"count":0},{"startOffset":8768,"endOffset":8857,"count":24},{"startOffset":9226,"endOffset":9293,"count":0},{"startOffset":9294,"endOffset":9354,"count":0},{"startOffset":9365,"endOffset":9414,"count":0},{"startOffset":9571,"endOffset":9606,"count":0},{"startOffset":9608,"endOffset":9732,"count":0},{"startOffset":9768,"endOffset":9978,"count":0},{"startOffset":9982,"endOffset":10104,"count":0},{"startOffset":10248,"endOffset":10341,"count":0},{"startOffset":10443,"endOffset":11258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10650,"endOffset":10814,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11424,"endOffset":12148,"count":9},{"startOffset":11538,"endOffset":11871,"count":0},{"startOffset":11922,"endOffset":11998,"count":0},{"startOffset":12027,"endOffset":12146,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":12193,"endOffset":12405,"count":9},{"startOffset":12242,"endOffset":12294,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":12440,"endOffset":12578,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12615,"endOffset":12891,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":12894,"endOffset":12944,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":12946,"endOffset":13106,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13108,"endOffset":14275,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":14277,"endOffset":14918,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":14920,"endOffset":15406,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15408,"endOffset":17791,"count":9},{"startOffset":15630,"endOffset":15916,"count":0},{"startOffset":15970,"endOffset":17157,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":17793,"endOffset":18028,"count":18},{"startOffset":17990,"endOffset":18006,"count":0},{"startOffset":18007,"endOffset":18024,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18040,"endOffset":21052,"count":9},{"startOffset":18215,"endOffset":18377,"count":0},{"startOffset":18456,"endOffset":18465,"count":0},{"startOffset":18581,"endOffset":18660,"count":0},{"startOffset":18707,"endOffset":19410,"count":0},{"startOffset":19458,"endOffset":19482,"count":0},{"startOffset":19484,"endOffset":19702,"count":0},{"startOffset":19740,"endOffset":19762,"count":0},{"startOffset":19764,"endOffset":19988,"count":0},{"startOffset":20041,"endOffset":20139,"count":0},{"startOffset":20167,"endOffset":20207,"count":0},{"startOffset":20209,"endOffset":20342,"count":0},{"startOffset":20806,"endOffset":20818,"count":0},{"startOffset":20849,"endOffset":20858,"count":0},{"startOffset":20932,"endOffset":21011,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21064,"endOffset":22133,"count":9},{"startOffset":21763,"endOffset":21774,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnEnd","ranges":[{"startOffset":22135,"endOffset":23292,"count":9},{"startOffset":22421,"endOffset":22647,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":23294,"endOffset":23445,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":23581,"endOffset":23701,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":23703,"endOffset":23827,"count":9}],"isBlockCoverage":true},{"functionName":"tickOnSocket","ranges":[{"startOffset":23829,"endOffset":25009,"count":9},{"startOffset":23996,"endOffset":24020,"count":0},{"startOffset":24212,"endOffset":24225,"count":0},{"startOffset":24480,"endOffset":24539,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25011,"endOffset":25119,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25121,"endOffset":25512,"count":9},{"startOffset":25178,"endOffset":25195,"count":0},{"startOffset":25406,"endOffset":25510,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25435,"endOffset":25504,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":25549,"endOffset":25720,"count":9}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":25723,"endOffset":26517,"count":9},{"startOffset":25791,"endOffset":26455,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":25824,"endOffset":26061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26230,"endOffset":26379,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":26578,"endOffset":27330,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":27369,"endOffset":27734,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":27737,"endOffset":27923,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":27962,"endOffset":28043,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28095,"endOffset":28220,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":28262,"endOffset":28317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8222,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2297,"endOffset":2544,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2757,"endOffset":4291,"count":9},{"startOffset":3043,"endOffset":3105,"count":0},{"startOffset":3281,"endOffset":3348,"count":0},{"startOffset":3672,"endOffset":3694,"count":0},{"startOffset":4058,"endOffset":4121,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4293,"endOffset":4610,"count":7},{"startOffset":4439,"endOffset":4446,"count":0},{"startOffset":4582,"endOffset":4604,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4612,"endOffset":5099,"count":9},{"startOffset":4855,"endOffset":4969,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5148,"endOffset":5436,"count":1}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5440,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5819,"endOffset":6444,"count":9},{"startOffset":5910,"endOffset":5929,"count":0},{"startOffset":6016,"endOffset":6194,"count":0}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6656,"endOffset":6747,"count":42}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7009,"endOffset":7110,"count":33}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7112,"endOffset":7456,"count":10}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7458,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7681,"endOffset":7866,"count":9},{"startOffset":7729,"endOffset":7746,"count":0},{"startOffset":7748,"endOffset":7835,"count":0}],"isBlockCoverage":true}]},{"scriptId":"506","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":76,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":198,"endOffset":317,"count":9},{"startOffset":240,"endOffset":263,"count":8},{"startOffset":264,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":321,"endOffset":445,"count":9},{"startOffset":423,"endOffset":444,"count":0}],"isBlockCoverage":true}]},{"scriptId":"507","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14895,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1647,"endOffset":1750,"count":9}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1752,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1881,"endOffset":2863,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3073,"endOffset":3113,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3122,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3257,"endOffset":3554,"count":36},{"startOffset":3295,"endOffset":3523,"count":9},{"startOffset":3450,"endOffset":3517,"count":64}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3563,"endOffset":3608,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3709,"endOffset":4046,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4055,"endOffset":4108,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4202,"endOffset":4505,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4514,"endOffset":4560,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4662,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5014,"endOffset":5068,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5113,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5730,"endOffset":6107,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":6350,"endOffset":7146,"count":9},{"startOffset":6424,"endOffset":6480,"count":0},{"startOffset":6800,"endOffset":6825,"count":0},{"startOffset":6826,"endOffset":6841,"count":0},{"startOffset":6843,"endOffset":7087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6917,"endOffset":7081,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7210,"endOffset":7669,"count":9},{"startOffset":7321,"endOffset":7424,"count":0},{"startOffset":7546,"endOffset":7663,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8391,"endOffset":12285,"count":91},{"startOffset":8468,"endOffset":8548,"count":0},{"startOffset":8553,"endOffset":8900,"count":14},{"startOffset":8609,"endOffset":8623,"count":0},{"startOffset":8672,"endOffset":8686,"count":0},{"startOffset":8714,"endOffset":8733,"count":9},{"startOffset":8735,"endOffset":8749,"count":5},{"startOffset":8749,"endOffset":8777,"count":9},{"startOffset":8777,"endOffset":8796,"count":0},{"startOffset":8798,"endOffset":8818,"count":9},{"startOffset":8818,"endOffset":8865,"count":0},{"startOffset":8867,"endOffset":8900,"count":0},{"startOffset":8905,"endOffset":9294,"count":0},{"startOffset":9299,"endOffset":9541,"count":0},{"startOffset":9546,"endOffset":9738,"count":0},{"startOffset":9743,"endOffset":10033,"count":27},{"startOffset":9820,"endOffset":9840,"count":0},{"startOffset":9909,"endOffset":9925,"count":0},{"startOffset":9959,"endOffset":9984,"count":18},{"startOffset":9994,"endOffset":10020,"count":9},{"startOffset":10020,"endOffset":10033,"count":18},{"startOffset":10038,"endOffset":10151,"count":0},{"startOffset":10156,"endOffset":10367,"count":23},{"startOffset":10200,"endOffset":10227,"count":18},{"startOffset":10237,"endOffset":10259,"count":5},{"startOffset":10259,"endOffset":10322,"count":18},{"startOffset":10332,"endOffset":10354,"count":0},{"startOffset":10354,"endOffset":10367,"count":18},{"startOffset":10372,"endOffset":10797,"count":0},{"startOffset":10802,"endOffset":10924,"count":9},{"startOffset":10848,"endOffset":10877,"count":0},{"startOffset":10911,"endOffset":10924,"count":0},{"startOffset":10929,"endOffset":11280,"count":0},{"startOffset":11285,"endOffset":11532,"count":0},{"startOffset":11537,"endOffset":11900,"count":0},{"startOffset":11905,"endOffset":12158,"count":0},{"startOffset":12162,"endOffset":12181,"count":54},{"startOffset":12181,"endOffset":12284,"count":27}],"isBlockCoverage":true},{"functionName":"_addHeaderLine","ranges":[{"startOffset":12896,"endOffset":13944,"count":64},{"startOffset":13046,"endOffset":13059,"count":19},{"startOffset":13061,"endOffset":13285,"count":45},{"startOffset":13177,"endOffset":13241,"count":0},{"startOffset":13285,"endOffset":13942,"count":19},{"startOffset":13307,"endOffset":13502,"count":0},{"startOffset":13539,"endOffset":13852,"count":0}],"isBlockCoverage":true},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14021,"endOffset":14214,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14337,"endOffset":14578,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":14581,"endOffset":14828,"count":9},{"startOffset":14785,"endOffset":14800,"count":0}],"isBlockCoverage":true}]},{"scriptId":"508","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33640,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2724,"endOffset":2749,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3025,"endOffset":3033,"count":21}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3276,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3378,"endOffset":4759,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4957,"endOffset":4995,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5083,"endOffset":5119,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5217,"endOffset":5359,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5458,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5582,"endOffset":5670,"count":3},{"startOffset":5661,"endOffset":5664,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5772,"endOffset":5861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5956,"endOffset":6067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6184,"endOffset":6230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6326,"endOffset":6812,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6972,"endOffset":7012,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7021,"endOffset":7063,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7184,"endOffset":7641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7741,"endOffset":8191,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8309,"endOffset":8813,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":8849,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":8982,"endOffset":9098,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9140,"endOffset":9434,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":9677,"endOffset":9989,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10099,"endOffset":11025,"count":9},{"startOffset":10581,"endOffset":10651,"count":6},{"startOffset":10638,"endOffset":10650,"count":0},{"startOffset":10653,"endOffset":10694,"count":6},{"startOffset":10694,"endOffset":10939,"count":3}],"isBlockCoverage":true},{"functionName":"_getMessageBodySize","ranges":[{"startOffset":11028,"endOffset":11406,"count":0}],"isBlockCoverage":false},{"functionName":"_writeRaw","ranges":[{"startOffset":11457,"endOffset":13166,"count":9},{"startOffset":11543,"endOffset":11560,"count":0},{"startOffset":11562,"endOffset":11709,"count":0},{"startOffset":11749,"endOffset":11800,"count":0},{"startOffset":11921,"endOffset":11928,"count":0},{"startOffset":11929,"endOffset":11945,"count":0},{"startOffset":11946,"endOffset":11970,"count":0},{"startOffset":11971,"endOffset":11987,"count":0},{"startOffset":11989,"endOffset":12670,"count":0},{"startOffset":12683,"endOffset":12712,"count":0},{"startOffset":12713,"endOffset":12729,"count":0},{"startOffset":12731,"endOffset":12951,"count":0}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":13224,"endOffset":17835,"count":9},{"startOffset":13650,"endOffset":13758,"count":33},{"startOffset":13764,"endOffset":14486,"count":0},{"startOffset":14556,"endOffset":14570,"count":0},{"startOffset":14572,"endOffset":14622,"count":0},{"startOffset":15216,"endOffset":15302,"count":0},{"startOffset":15304,"endOffset":15487,"count":0},{"startOffset":15542,"endOffset":15604,"count":0},{"startOffset":15714,"endOffset":15749,"count":6},{"startOffset":15750,"endOffset":15763,"count":6},{"startOffset":15834,"endOffset":15882,"count":0},{"startOffset":15994,"endOffset":16019,"count":0},{"startOffset":16021,"endOffset":16307,"count":0},{"startOffset":16313,"endOffset":16392,"count":0},{"startOffset":16419,"endOffset":16431,"count":6},{"startOffset":16433,"endOffset":17249,"count":6},{"startOffset":16459,"endOffset":16575,"count":0},{"startOffset":16652,"endOffset":17245,"count":0},{"startOffset":17570,"endOffset":17617,"count":0},{"startOffset":17818,"endOffset":17833,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":17837,"endOffset":18465,"count":33},{"startOffset":17917,"endOffset":17941,"count":0},{"startOffset":17969,"endOffset":18413,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":18467,"endOffset":18666,"count":33},{"startOffset":18545,"endOffset":18577,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":18668,"endOffset":19592,"count":33},{"startOffset":18767,"endOffset":18774,"count":0},{"startOffset":18843,"endOffset":19081,"count":0},{"startOffset":19086,"endOffset":19277,"count":0},{"startOffset":19282,"endOffset":19416,"count":3},{"startOffset":19421,"endOffset":19433,"count":0},{"startOffset":19438,"endOffset":19452,"count":0},{"startOffset":19457,"endOffset":19512,"count":0},{"startOffset":19517,"endOffset":19586,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19637,"endOffset":19799,"count":33},{"startOffset":19724,"endOffset":19797,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19847,"endOffset":20117,"count":33},{"startOffset":19893,"endOffset":19956,"count":0},{"startOffset":19994,"endOffset":20115,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":20121,"endOffset":20391,"count":9},{"startOffset":20218,"endOffset":20390,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":20431,"endOffset":20792,"count":33},{"startOffset":20485,"endOffset":20534,"count":0},{"startOffset":20663,"endOffset":20713,"count":9}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":20834,"endOffset":21258,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":21302,"endOffset":22038,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":22080,"endOffset":22302,"count":27},{"startOffset":22205,"endOffset":22212,"count":0},{"startOffset":22288,"endOffset":22299,"count":9}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":22415,"endOffset":22518,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":22638,"endOffset":23039,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":23141,"endOffset":23551,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":23593,"endOffset":23751,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":23796,"endOffset":24361,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":24409,"endOffset":24500,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24636,"endOffset":24673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24772,"endOffset":24808,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24911,"endOffset":24993,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":25071,"endOffset":25324,"count":3},{"startOffset":25153,"endOffset":25204,"count":0},{"startOffset":25284,"endOffset":25308,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":25327,"endOffset":25688,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":25690,"endOffset":25839,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":25841,"endOffset":27391,"count":3},{"startOffset":25942,"endOffset":25957,"count":0},{"startOffset":25992,"endOffset":26037,"count":0},{"startOffset":26074,"endOffset":26125,"count":0},{"startOffset":26185,"endOffset":26291,"count":0},{"startOffset":26324,"endOffset":26373,"count":0},{"startOffset":26398,"endOffset":26448,"count":0},{"startOffset":26461,"endOffset":26603,"count":0},{"startOffset":26644,"endOffset":26683,"count":0},{"startOffset":26737,"endOffset":26888,"count":0},{"startOffset":26919,"endOffset":26948,"count":0},{"startOffset":26950,"endOffset":27030,"count":0},{"startOffset":27069,"endOffset":27090,"count":0},{"startOffset":27092,"endOffset":27284,"count":0}],"isBlockCoverage":true},{"functionName":"connectionCorkNT","ranges":[{"startOffset":27394,"endOffset":27446,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":27488,"endOffset":28923,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":28926,"endOffset":29046,"count":9},{"startOffset":29012,"endOffset":29019,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":29080,"endOffset":30893,"count":9},{"startOffset":29157,"endOffset":29223,"count":0},{"startOffset":29265,"endOffset":29316,"count":0},{"startOffset":29359,"endOffset":29650,"count":0},{"startOffset":29675,"endOffset":29899,"count":0},{"startOffset":29924,"endOffset":30042,"count":6},{"startOffset":29947,"endOffset":29980,"count":0},{"startOffset":30086,"endOffset":30116,"count":0},{"startOffset":30213,"endOffset":30286,"count":0},{"startOffset":30314,"endOffset":30336,"count":3},{"startOffset":30337,"endOffset":30345,"count":3},{"startOffset":30347,"endOffset":30390,"count":6},{"startOffset":30390,"endOffset":30431,"count":3},{"startOffset":30452,"endOffset":30567,"count":3},{"startOffset":30785,"endOffset":30805,"count":3},{"startOffset":30806,"endOffset":30848,"count":3},{"startOffset":30850,"endOffset":30875,"count":3}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":31067,"endOffset":31138,"count":9}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":31932,"endOffset":32362,"count":9},{"startOffset":32151,"endOffset":32256,"count":6},{"startOffset":32256,"endOffset":32356,"count":3},{"startOffset":32291,"endOffset":32356,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":32406,"endOffset":33049,"count":9},{"startOffset":32462,"endOffset":32507,"count":0},{"startOffset":32585,"endOffset":32602,"count":0},{"startOffset":32813,"endOffset":32924,"count":12}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":33094,"endOffset":33225,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":33261,"endOffset":33403,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":33461,"endOffset":33506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":349,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":418,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":577,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":651,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":712,"endOffset":791,"count":18}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":839,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":929,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36206,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2636,"endOffset":2661,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":6969,"endOffset":7048,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":7052,"endOffset":7953,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":8120,"endOffset":8765,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":8865,"endOffset":9855,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":9897,"endOffset":10109,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":10152,"endOffset":10334,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":10378,"endOffset":10496,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":10542,"endOffset":10640,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":10686,"endOffset":11196,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11242,"endOffset":11307,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":11358,"endOffset":13955,"count":0}],"isBlockCoverage":false},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14066,"endOffset":16330,"count":0}],"isBlockCoverage":false},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":16332,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":16784,"endOffset":17958,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":18089,"endOffset":18248,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":18290,"endOffset":18450,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":18493,"endOffset":18771,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":18804,"endOffset":18933,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":18982,"endOffset":19550,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":19553,"endOffset":19898,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":19900,"endOffset":20045,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":20047,"endOffset":23468,"count":0}],"isBlockCoverage":false},{"functionName":"socketSetEncoding","ranges":[{"startOffset":23470,"endOffset":23542,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":23544,"endOffset":23660,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":23662,"endOffset":24116,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":24118,"endOffset":24491,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":24493,"endOffset":24642,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":24644,"endOffset":24827,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":24829,"endOffset":25351,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":25353,"endOffset":25582,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":25584,"endOffset":25758,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":25760,"endOffset":26259,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":26261,"endOffset":26406,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":26421,"endOffset":26429,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":26833,"endOffset":27722,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":27724,"endOffset":29345,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":29347,"endOffset":29685,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":29687,"endOffset":31010,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":31012,"endOffset":31145,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":31311,"endOffset":34370,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":34372,"endOffset":34552,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":34554,"endOffset":35076,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":35078,"endOffset":35219,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":35221,"endOffset":35473,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":35475,"endOffset":36029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11611,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3465,"endOffset":3529,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3558,"endOffset":3652,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3775,"endOffset":3926,"count":2},{"startOffset":3869,"endOffset":3893,"count":1}],"isBlockCoverage":true},{"functionName":"convertProtocols","ranges":[{"startOffset":4036,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4681,"endOffset":5205,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5208,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"toLowerCase","ranges":[{"startOffset":5398,"endOffset":5492,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5494,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":5640,"endOffset":7635,"count":0}],"isBlockCoverage":false},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8000,"endOffset":9236,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9268,"endOffset":11166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5130,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1775,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2148,"endOffset":2985,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":2987,"endOffset":3457,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3696,"endOffset":5038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9176,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":709,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":961,"endOffset":1193,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1195,"endOffset":1359,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1361,"endOffset":1521,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1523,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1805,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2049,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"configSecureContext","ranges":[{"startOffset":2882,"endOffset":9129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10374,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1193,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1256,"endOffset":1315,"count":559}],"isBlockCoverage":true},{"functionName":"toBuf","ranges":[{"startOffset":1490,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1703,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1780,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1856,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1902,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2260,"endOffset":2724,"count":516},{"startOffset":2326,"endOffset":2340,"count":0},{"startOffset":2375,"endOffset":2478,"count":0},{"startOffset":2513,"endOffset":2705,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":3994,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":4209,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":5199,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":5340,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":5684,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5925,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":6198,"endOffset":6430,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":6432,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":7238,"endOffset":7518,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":7520,"endOffset":7756,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":7758,"endOffset":7923,"count":172},{"startOffset":7826,"endOffset":7859,"count":0},{"startOffset":7865,"endOffset":7905,"count":0}],"isBlockCoverage":true},{"functionName":"getUsagesUnion","ranges":[{"startOffset":7925,"endOffset":8137,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":8139,"endOffset":8320,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":8459,"endOffset":9425,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":9427,"endOffset":9810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2519,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1889,"endOffset":2132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49867,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":4150,"endOffset":4933,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":4935,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5231,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6439,"endOffset":7092,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":7095,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":8419,"endOffset":8614,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":8616,"endOffset":8852,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":8854,"endOffset":9690,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":9692,"endOffset":10342,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":10344,"endOffset":11051,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":11053,"endOffset":11144,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":11146,"endOffset":11262,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":11264,"endOffset":12392,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":12536,"endOffset":13083,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":13161,"endOffset":15466,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":15909,"endOffset":16084,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":15951,"endOffset":16081,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":16251,"endOffset":16944,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":16990,"endOffset":17063,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":17100,"endOffset":18113,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.<computed>","ranges":[{"startOffset":18160,"endOffset":18347,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":18486,"endOffset":18728,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":18730,"endOffset":18877,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":18879,"endOffset":18930,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":18966,"endOffset":19258,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":19397,"endOffset":23998,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":24035,"endOffset":25282,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":25328,"endOffset":25650,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":25694,"endOffset":25816,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":25856,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":25964,"endOffset":26050,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":26085,"endOffset":26193,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":26234,"endOffset":26390,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":26427,"endOffset":27486,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":27518,"endOffset":28017,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":28056,"endOffset":28224,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":28260,"endOffset":28398,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":28442,"endOffset":28606,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":28646,"endOffset":28852,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":28900,"endOffset":29040,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":29084,"endOffset":29212,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":29249,"endOffset":29447,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":29297,"endOffset":29444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29665,"endOffset":29743,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":29785,"endOffset":30280,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":30282,"endOffset":30518,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":30520,"endOffset":30607,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":30609,"endOffset":30962,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":30964,"endOffset":31813,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":34579,"endOffset":36171,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":36325,"endOffset":36409,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":36449,"endOffset":39352,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":39390,"endOffset":39473,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":39511,"endOffset":39588,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":39625,"endOffset":39705,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":39742,"endOffset":39938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39982,"endOffset":42048,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":42171,"endOffset":42547,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":42596,"endOffset":42851,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":42854,"endOffset":43170,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":43403,"endOffset":44131,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":44133,"endOffset":46436,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":46438,"endOffset":46987,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":47053,"endOffset":49865,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9170,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3120,"endOffset":3222,"count":18}],"isBlockCoverage":true},{"functionName":"lazyOwnsProcessState","ranges":[{"startOffset":3246,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3518,"endOffset":3600,"count":43}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3602,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3704,"endOffset":3806,"count":129}],"isBlockCoverage":true},{"functionName":"createDecipher","ranges":[{"startOffset":3808,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3914,"endOffset":4020,"count":43}],"isBlockCoverage":true},{"functionName":"createDiffieHellman","ranges":[{"startOffset":4022,"endOffset":4178,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":4180,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4264,"endOffset":4320,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4322,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4406,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4490,"endOffset":4576,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5619,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5706,"endOffset":5990,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5992,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6161,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6418,"endOffset":6606,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6655,"endOffset":7485,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6753,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7248,"endOffset":7478,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8544,"endOffset":8584,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8696,"endOffset":8743,"count":9}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8869,"endOffset":8890,"count":9}],"isBlockCoverage":true}]},{"scriptId":"518","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16193,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1299,"endOffset":1665,"count":172},{"startOffset":1534,"endOffset":1616,"count":0}],"isBlockCoverage":true},{"functionName":"assertSize","ranges":[{"startOffset":1667,"endOffset":2128,"count":172},{"startOffset":1846,"endOffset":1964,"count":0},{"startOffset":1996,"endOffset":2081,"count":0}],"isBlockCoverage":true},{"functionName":"randomBytes","ranges":[{"startOffset":2130,"endOffset":2673,"count":43},{"startOffset":2360,"endOffset":2422,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2526,"endOffset":2669,"count":43},{"startOffset":2559,"endOffset":2611,"count":0}],"isBlockCoverage":true},{"functionName":"randomFillSync","ranges":[{"startOffset":2675,"endOffset":3343,"count":129},{"startOffset":2781,"endOffset":2889,"count":0},{"startOffset":2935,"endOffset":2939,"count":0},{"startOffset":3031,"endOffset":3072,"count":43},{"startOffset":3072,"endOffset":3149,"count":86},{"startOffset":3173,"endOffset":3184,"count":0},{"startOffset":3316,"endOffset":3326,"count":0}],"isBlockCoverage":true},{"functionName":"randomFill","ranges":[{"startOffset":3345,"endOffset":4391,"count":43},{"startOffset":3425,"endOffset":3451,"count":0},{"startOffset":3453,"endOffset":3561,"count":0},{"startOffset":3650,"endOffset":3797,"count":0},{"startOffset":3835,"endOffset":3893,"count":0},{"startOffset":4039,"endOffset":4080,"count":0},{"startOffset":4177,"endOffset":4219,"count":0}],"isBlockCoverage":true},{"functionName":"randomInt","ranges":[{"startOffset":4941,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7183,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8062,"endOffset":8224,"count":43},{"startOffset":8118,"endOffset":8170,"count":0}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":8456,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9511,"endOffset":9810,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9812,"endOffset":10538,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10540,"endOffset":10843,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10845,"endOffset":11083,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11085,"endOffset":11405,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11407,"endOffset":12640,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12642,"endOffset":13098,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13100,"endOffset":13358,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13632,"endOffset":13676,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13751,"endOffset":14178,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14180,"endOffset":14477,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14479,"endOffset":15289,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15291,"endOffset":16006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3603,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":579,"endOffset":1389,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1391,"endOffset":1905,"count":86},{"startOffset":1753,"endOffset":1763,"count":0},{"startOffset":1878,"endOffset":1902,"count":0}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":1907,"endOffset":2378,"count":86}],"isBlockCoverage":true},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2421,"endOffset":3535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3607,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":647,"endOffset":1459,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1461,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1978,"endOffset":3559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3560,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":864,"endOffset":1318,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1322,"endOffset":1750,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1752,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2220,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2597,"endOffset":3498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21389,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2330,"endOffset":6447,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2440,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2987,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3047,"endOffset":3188,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3194,"endOffset":3478,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3696,"endOffset":3754,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3760,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3846,"endOffset":4194,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4327,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4704,"endOffset":4764,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4770,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4928,"endOffset":5305,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5369,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5433,"endOffset":5723,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5788,"endOffset":5847,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5853,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6451,"endOffset":6836,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6838,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7692,"endOffset":7813,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7815,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8517,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8656,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10212,"endOffset":10348,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10548,"endOffset":10664,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10666,"endOffset":11244,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11246,"endOffset":11751,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11753,"endOffset":14300,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14302,"endOffset":15844,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15846,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15936,"endOffset":16031,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16033,"endOffset":16731,"count":172},{"startOffset":16143,"endOffset":16284,"count":0},{"startOffset":16312,"endOffset":16465,"count":0},{"startOffset":16533,"endOffset":16564,"count":0},{"startOffset":16566,"endOffset":16676,"count":0}],"isBlockCoverage":true},{"functionName":"createSecretKey","ranges":[{"startOffset":16733,"endOffset":16937,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16939,"endOffset":17276,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17278,"endOffset":17619,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17621,"endOffset":17703,"count":172}],"isBlockCoverage":true},{"functionName":"CryptoKey","ranges":[{"startOffset":18126,"endOffset":18186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18190,"endOffset":18537,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18541,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18680,"endOffset":18819,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18823,"endOffset":18958,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18962,"endOffset":19105,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19683,"endOffset":20162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20166,"endOffset":20517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20521,"endOffset":20725,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20854,"endOffset":20938,"count":172}],"isBlockCoverage":true}]},{"scriptId":"523","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10882,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1239,"endOffset":1309,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1311,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1467,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2248,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2367,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2746,"endOffset":3994,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":3996,"endOffset":9402,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9433,"endOffset":9970,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9972,"endOffset":10174,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10176,"endOffset":10646,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10648,"endOffset":10782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10924,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1285,"endOffset":3212,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3215,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3651,"endOffset":3813,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3927,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4385,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4652,"endOffset":4824,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4935,"endOffset":5095,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5209,"endOffset":5371,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5413,"endOffset":5602,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5646,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5841,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6306,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6461,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6680,"endOffset":7030,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7033,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7170,"endOffset":7493,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7567,"endOffset":8635,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8754,"endOffset":10818,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10412,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1253,"endOffset":2001,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1321,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2502,"endOffset":2868,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2870,"endOffset":3104,"count":172},{"startOffset":2936,"endOffset":2969,"count":0},{"startOffset":2971,"endOffset":3089,"count":0}],"isBlockCoverage":true},{"functionName":"createCipherBase","ranges":[{"startOffset":3106,"endOffset":3525,"count":172},{"startOffset":3310,"endOffset":3374,"count":0}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3527,"endOffset":3762,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3764,"endOffset":4103,"count":172},{"startOffset":3983,"endOffset":3989,"count":0}],"isBlockCoverage":true},{"functionName":"Cipher","ranges":[{"startOffset":4346,"endOffset":4547,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4690,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4835,"endOffset":4973,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5002,"endOffset":5652,"count":172},{"startOffset":5223,"endOffset":5271,"count":0},{"startOffset":5307,"endOffset":5417,"count":0},{"startOffset":5530,"endOffset":5635,"count":0}],"isBlockCoverage":true},{"functionName":"final","ranges":[{"startOffset":5681,"endOffset":5984,"count":172},{"startOffset":5864,"endOffset":5967,"count":0}],"isBlockCoverage":true},{"functionName":"setAutoPadding","ranges":[{"startOffset":6022,"endOffset":6169,"count":43},{"startOffset":6099,"endOffset":6152,"count":0}],"isBlockCoverage":true},{"functionName":"getAuthTag","ranges":[{"startOffset":6202,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6366,"endOffset":6578,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6606,"endOffset":6948,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7196,"endOffset":7406,"count":129},{"startOffset":7281,"endOffset":7327,"count":0}],"isBlockCoverage":true},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7408,"endOffset":7999,"count":3},{"startOffset":7804,"endOffset":7877,"count":1},{"startOffset":7877,"endOffset":7939,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8400,"endOffset":8608,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9013,"endOffset":9230,"count":43},{"startOffset":9102,"endOffset":9150,"count":0}],"isBlockCoverage":true},{"functionName":"getCipherInfo","ranges":[{"startOffset":9392,"endOffset":10253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":469,"endOffset":531,"count":215}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":663,"endOffset":971,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":973,"endOffset":1192,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7109,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":891,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1273,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1392,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1756,"endOffset":1831,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1833,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1916,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2270,"endOffset":2515,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2539,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3205,"endOffset":4422,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4424,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4919,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5558,"endOffset":7035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4881,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":1021,"endOffset":1540,"count":43},{"startOffset":1092,"endOffset":1128,"count":0},{"startOffset":1255,"endOffset":1274,"count":0},{"startOffset":1275,"endOffset":1301,"count":0},{"startOffset":1347,"endOffset":1394,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1671,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1870,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":2002,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2109,"endOffset":2621,"count":86},{"startOffset":2250,"endOffset":2288,"count":0},{"startOffset":2322,"endOffset":2365,"count":0},{"startOffset":2401,"endOffset":2511,"count":0},{"startOffset":2562,"endOffset":2604,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2649,"endOffset":2994,"count":43},{"startOffset":2742,"endOffset":2780,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":2997,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3577,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4151,"endOffset":4826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9906,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1154,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1239,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2486,"endOffset":2648,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2650,"endOffset":9660,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7493,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":335,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":694,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":759,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":826,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":891,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":964,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1801,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3636,"endOffset":3685,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3689,"endOffset":3751,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3755,"endOffset":3812,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3816,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3875,"endOffset":4875,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":4943,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5239,"endOffset":6200,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6268,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":6715,"endOffset":7456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1990,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":398,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":491,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":620,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":828,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":950,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1183,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1799,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1905,"endOffset":1988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"node:internal/http2/compat","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21991,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2230,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isPseudoHeader","ranges":[{"startOffset":2700,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"statusMessageWarn","ranges":[{"startOffset":3030,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"isConnectionHeaderAllowed","ranges":[{"startOffset":3268,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"connectionHeaderMessageWarn","ranges":[{"startOffset":3397,"endOffset":3736,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamData","ranges":[{"startOffset":3738,"endOffset":3875,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailers","ranges":[{"startOffset":3877,"endOffset":4162,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamEnd","ranges":[{"startOffset":4164,"endOffset":4330,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamError","ranges":[{"startOffset":4332,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestPause","ranges":[{"startOffset":4508,"endOffset":4562,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestResume","ranges":[{"startOffset":4564,"endOffset":4620,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamDrain","ranges":[{"startOffset":4622,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedRequest","ranges":[{"startOffset":4746,"endOffset":4947,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamAbortedResponse","ranges":[{"startOffset":4949,"endOffset":5007,"count":0}],"isBlockCoverage":false},{"functionName":"resumeStream","ranges":[{"startOffset":5009,"endOffset":5061,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5094,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5249,"endOffset":6358,"count":0}],"isBlockCoverage":false},{"functionName":"getPrototypeOf","ranges":[{"startOffset":6362,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6535,"endOffset":7328,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseRequest","ranges":[{"startOffset":7333,"endOffset":7783,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTimeout","ranges":[{"startOffset":7785,"endOffset":7915,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerRequest","ranges":[{"startOffset":7963,"endOffset":8974,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":8978,"endOffset":9024,"count":0}],"isBlockCoverage":false},{"functionName":"get complete","ranges":[{"startOffset":9028,"endOffset":9180,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":9184,"endOffset":9228,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":9232,"endOffset":9278,"count":0}],"isBlockCoverage":false},{"functionName":"get rawHeaders","ranges":[{"startOffset":9282,"endOffset":9334,"count":0}],"isBlockCoverage":false},{"functionName":"get trailers","ranges":[{"startOffset":9338,"endOffset":9386,"count":0}],"isBlockCoverage":false},{"functionName":"get rawTrailers","ranges":[{"startOffset":9390,"endOffset":9444,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMajor","ranges":[{"startOffset":9448,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersionMinor","ranges":[{"startOffset":9494,"endOffset":9536,"count":0}],"isBlockCoverage":false},{"functionName":"get httpVersion","ranges":[{"startOffset":9540,"endOffset":9581,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":9585,"endOffset":9812,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":9816,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9866,"endOffset":10115,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":10119,"endOffset":10185,"count":0}],"isBlockCoverage":false},{"functionName":"set method","ranges":[{"startOffset":10189,"endOffset":10403,"count":0}],"isBlockCoverage":false},{"functionName":"get authority","ranges":[{"startOffset":10407,"endOffset":10469,"count":0}],"isBlockCoverage":false},{"functionName":"get scheme","ranges":[{"startOffset":10473,"endOffset":10539,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":10543,"endOffset":10604,"count":0}],"isBlockCoverage":false},{"functionName":"set url","ranges":[{"startOffset":10608,"endOffset":10671,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":10675,"endOffset":10804,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamTrailersReady","ranges":[{"startOffset":10808,"endOffset":10893,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamCloseResponse","ranges":[{"startOffset":10895,"endOffset":11281,"count":0}],"isBlockCoverage":false},{"functionName":"Http2ServerResponse","ranges":[{"startOffset":11328,"endOffset":12038,"count":0}],"isBlockCoverage":false},{"functionName":"get _header","ranges":[{"startOffset":12235,"endOffset":12283,"count":0}],"isBlockCoverage":false},{"functionName":"get writableEnded","ranges":[{"startOffset":12287,"endOffset":12369,"count":0}],"isBlockCoverage":false},{"functionName":"get finished","ranges":[{"startOffset":12373,"endOffset":12450,"count":0}],"isBlockCoverage":false},{"functionName":"get socket","ranges":[{"startOffset":12454,"endOffset":12859,"count":0}],"isBlockCoverage":false},{"functionName":"get connection","ranges":[{"startOffset":12863,"endOffset":12909,"count":0}],"isBlockCoverage":false},{"functionName":"get stream","ranges":[{"startOffset":12913,"endOffset":12957,"count":0}],"isBlockCoverage":false},{"functionName":"get headersSent","ranges":[{"startOffset":12961,"endOffset":13022,"count":0}],"isBlockCoverage":false},{"functionName":"get sendDate","ranges":[{"startOffset":13026,"endOffset":13080,"count":0}],"isBlockCoverage":false},{"functionName":"set sendDate","ranges":[{"startOffset":13084,"endOffset":13151,"count":0}],"isBlockCoverage":false},{"functionName":"get statusCode","ranges":[{"startOffset":13155,"endOffset":13213,"count":0}],"isBlockCoverage":false},{"functionName":"get writableCorked","ranges":[{"startOffset":13217,"endOffset":13284,"count":0}],"isBlockCoverage":false},{"functionName":"get writableHighWaterMark","ranges":[{"startOffset":13288,"endOffset":13369,"count":0}],"isBlockCoverage":false},{"functionName":"get writableFinished","ranges":[{"startOffset":13373,"endOffset":13444,"count":0}],"isBlockCoverage":false},{"functionName":"get writableLength","ranges":[{"startOffset":13448,"endOffset":13515,"count":0}],"isBlockCoverage":false},{"functionName":"set statusCode","ranges":[{"startOffset":13519,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"setTrailer","ranges":[{"startOffset":13770,"endOffset":13970,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":13974,"endOffset":14169,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":14173,"endOffset":14327,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":14331,"endOffset":14392,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":14396,"endOffset":14505,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":14509,"endOffset":14694,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":14698,"endOffset":15020,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":15024,"endOffset":15199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15203,"endOffset":15613,"count":0}],"isBlockCoverage":false},{"functionName":"get statusMessage","ranges":[{"startOffset":15617,"endOffset":15683,"count":0}],"isBlockCoverage":false},{"functionName":"set statusMessage","ranges":[{"startOffset":15687,"endOffset":15740,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":15744,"endOffset":15889,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":15893,"endOffset":17097,"count":0}],"isBlockCoverage":false},{"functionName":"cork","ranges":[{"startOffset":17101,"endOffset":17139,"count":0}],"isBlockCoverage":false},{"functionName":"uncork","ranges":[{"startOffset":17143,"endOffset":17185,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17189,"endOffset":17855,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":17859,"endOffset":18866,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":18870,"endOffset":19002,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":19006,"endOffset":19129,"count":0}],"isBlockCoverage":false},{"functionName":"createPushResponse","ranges":[{"startOffset":19133,"endOffset":19543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19547,"endOffset":19853,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":19893,"endOffset":20125,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":20129,"endOffset":20757,"count":0}],"isBlockCoverage":false},{"functionName":"onServerStream","ranges":[{"startOffset":20761,"endOffset":21904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"node:internal/http2/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22297,"count":1}],"isBlockCoverage":false},{"functionName":"updateOptionsBuffer","ranges":[{"startOffset":6928,"endOffset":9172,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultSettings","ranges":[{"startOffset":9174,"endOffset":10808,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":10921,"endOffset":11635,"count":0}],"isBlockCoverage":false},{"functionName":"updateSettingsBuffer","ranges":[{"startOffset":11637,"endOffset":13534,"count":0}],"isBlockCoverage":false},{"functionName":"getSessionState","ranges":[{"startOffset":13536,"endOffset":14395,"count":0}],"isBlockCoverage":false},{"functionName":"getStreamState","ranges":[{"startOffset":14397,"endOffset":14832,"count":0}],"isBlockCoverage":false},{"functionName":"isIllegalConnectionSpecificHeader","ranges":[{"startOffset":14834,"endOffset":15246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15296,"endOffset":15402,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15462,"endOffset":15556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15615,"endOffset":15676,"count":0}],"isBlockCoverage":false},{"functionName":"mapToHeaders","ranges":[{"startOffset":15838,"endOffset":17909,"count":0}],"isBlockCoverage":false},{"functionName":"NghttpError","ranges":[{"startOffset":17947,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":18410,"endOffset":18485,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18528,"endOffset":18748,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18797,"endOffset":19040,"count":0}],"isBlockCoverage":false},{"functionName":"toHeaderObject","ranges":[{"startOffset":19046,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"isPayloadMeaningless","ranges":[{"startOffset":21117,"endOffset":21198,"count":0}],"isBlockCoverage":false},{"functionName":"sessionName","ranges":[{"startOffset":21200,"endOffset":21403,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthority","ranges":[{"startOffset":21405,"endOffset":21854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/dao/PoiymorphicOracleDBDao.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2977,"count":1}],"isBlockCoverage":true},{"functionName":"getAllThings","ranges":[{"startOffset":308,"endOffset":612,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":526,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":495,"endOffset":525,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":541,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"getThing","ranges":[{"startOffset":693,"endOffset":1095,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":901,"endOffset":1009,"count":2},{"startOffset":955,"endOffset":982,"count":1},{"startOffset":993,"endOffset":1000,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1024,"endOffset":1089,"count":2}],"isBlockCoverage":true},{"functionName":"addThing","ranges":[{"startOffset":1181,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1337,"endOffset":1353,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1480,"endOffset":1519,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1534,"endOffset":1570,"count":0}],"isBlockCoverage":false},{"functionName":"updateThing","ranges":[{"startOffset":1665,"endOffset":2163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1843,"endOffset":1878,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2067,"endOffset":2106,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2121,"endOffset":2157,"count":0}],"isBlockCoverage":false},{"functionName":"deleteThing","ranges":[{"startOffset":2255,"endOffset":2534,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2421,"endOffset":2460,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2475,"endOffset":2529,"count":0}],"isBlockCoverage":false},{"functionName":"#countRows","ranges":[{"startOffset":2670,"endOffset":2933,"count":3},{"startOffset":2921,"endOffset":2928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2737,"endOffset":2798,"count":3}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/utils/OracleSQLUtility.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":141,"endOffset":2332,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":528,"endOffset":985,"count":12},{"startOffset":727,"endOffset":833,"count":10},{"startOffset":833,"endOffset":981,"count":2}],"isBlockCoverage":true},{"functionName":"transaction","ranges":[{"startOffset":1355,"endOffset":2330,"count":31},{"startOffset":1901,"endOffset":2141,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1634,"endOffset":1862,"count":124}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/models/Thing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":746,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":33,"endOffset":722,"count":46}],"isBlockCoverage":true},{"functionName":"Thing","ranges":[{"startOffset":89,"endOffset":221,"count":46}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":228,"endOffset":267,"count":19}],"isBlockCoverage":true},{"functionName":"setId","ranges":[{"startOffset":273,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":324,"endOffset":367,"count":19}],"isBlockCoverage":true},{"functionName":"setName","ranges":[{"startOffset":373,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"getT_size","ranges":[{"startOffset":428,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"setSize","ranges":[{"startOffset":481,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"getWeight","ranges":[{"startOffset":536,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"setWeight","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":648,"endOffset":720,"count":19}],"isBlockCoverage":true}]},{"scriptId":"539","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13,"count":1}],"isBlockCoverage":true}]},{"scriptId":"540","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7,"count":1}],"isBlockCoverage":true}]},{"scriptId":"541","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9,"count":1}],"isBlockCoverage":true}]},{"scriptId":"542","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"543","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19,"count":1}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/models/Wings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":33,"endOffset":240,"count":0}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/models/DataTypesEnum.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":515,"count":1}],"isBlockCoverage":true},{"functionName":"getClassFromDataType","ranges":[{"startOffset":213,"endOffset":485,"count":22},{"startOffset":292,"endOffset":353,"count":15},{"startOffset":360,"endOffset":420,"count":0},{"startOffset":427,"endOffset":457,"count":7}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/models/Super.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":0,"endOffset":272,"count":46}],"isBlockCoverage":true},{"functionName":"Super","ranges":[{"startOffset":31,"endOffset":98,"count":46}],"isBlockCoverage":true},{"functionName":"get id","ranges":[{"startOffset":102,"endOffset":136,"count":0}],"isBlockCoverage":false},{"functionName":"set id","ranges":[{"startOffset":140,"endOffset":180,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":184,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"set name","ranges":[{"startOffset":226,"endOffset":270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"548","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/axios.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1799,"count":1}],"isBlockCoverage":true},{"functionName":"createInstance","ranges":[{"startOffset":364,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":722,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":1505,"endOffset":1563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11991,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":223,"endOffset":423,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":291,"endOffset":420,"count":930},{"startOffset":367,"endOffset":415,"count":7}],"isBlockCoverage":true},{"functionName":"kindOfTest","ranges":[{"startOffset":448,"endOffset":582,"count":6}],"isBlockCoverage":true},{"functionName":"isKindOf","ranges":[{"startOffset":514,"endOffset":579,"count":48}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":737,"endOffset":791,"count":740}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":952,"endOffset":1018,"count":429}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":1173,"endOffset":1391,"count":9},{"startOffset":1241,"endOffset":1268,"count":3},{"startOffset":1269,"endOffset":1301,"count":3},{"startOffset":1306,"endOffset":1355,"count":3},{"startOffset":1356,"endOffset":1388,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayBufferView","ranges":[{"startOffset":1805,"endOffset":2061,"count":9},{"startOffset":1964,"endOffset":2042,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":2216,"endOffset":2276,"count":15}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":2431,"endOffset":2491,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2648,"endOffset":2724,"count":30}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":2890,"endOffset":3087,"count":882},{"startOffset":2952,"endOffset":2975,"count":690},{"startOffset":2975,"endOffset":3084,"count":192}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":4042,"endOffset":4123,"count":12}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":4278,"endOffset":4352,"count":21},{"startOffset":4326,"endOffset":4349,"count":6}],"isBlockCoverage":true},{"functionName":"isFormData","ranges":[{"startOffset":4514,"endOffset":4780,"count":18},{"startOffset":4595,"endOffset":4777,"count":6}],"isBlockCoverage":true},{"functionName":"trim","ranges":[{"startOffset":5209,"endOffset":5295,"count":0}],"isBlockCoverage":false},{"functionName":"isStandardBrowserEnv","ranges":[{"startOffset":5718,"endOffset":6103,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":6533,"endOffset":7153,"count":481},{"startOffset":6650,"endOffset":6667,"count":0},{"startOffset":6754,"endOffset":6811,"count":0},{"startOffset":6833,"endOffset":6964,"count":67},{"startOffset":6916,"endOffset":6960,"count":256},{"startOffset":6964,"endOffset":7151,"count":414},{"startOffset":7029,"endOffset":7147,"count":437},{"startOffset":7089,"endOffset":7141,"count":425}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":7630,"endOffset":8137,"count":194},{"startOffset":8073,"endOffset":8118,"count":394}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":7697,"endOffset":8019,"count":285},{"startOffset":7765,"endOffset":7786,"count":0},{"startOffset":7788,"endOffset":7840,"count":0},{"startOffset":7870,"endOffset":7913,"count":147},{"startOffset":7913,"endOffset":8015,"count":138},{"startOffset":7937,"endOffset":7977,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":8435,"endOffset":8655,"count":2}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":8481,"endOffset":8639,"count":14},{"startOffset":8530,"endOffset":8558,"count":12},{"startOffset":8560,"endOffset":8602,"count":12},{"startOffset":8602,"endOffset":8635,"count":2}],"isBlockCoverage":true},{"functionName":"stripBOM","ranges":[{"startOffset":8817,"endOffset":8943,"count":9},{"startOffset":8886,"endOffset":8923,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":9152,"endOffset":9413,"count":2}],"isBlockCoverage":true},{"functionName":"toFlatObject","ranges":[{"startOffset":9608,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":10345,"endOffset":10647,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":10744,"endOffset":10944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11005,"endOffset":11156,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11078,"endOffset":11153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/bind.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":256,"count":1}],"isBlockCoverage":true},{"functionName":"bind","ranges":[{"startOffset":32,"endOffset":254,"count":13}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":70,"endOffset":251,"count":9},{"startOffset":174,"endOffset":211,"count":12}],"isBlockCoverage":true}]},{"scriptId":"551","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/Axios.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4582,"count":1}],"isBlockCoverage":true},{"functionName":"Axios","ranges":[{"startOffset":503,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":830,"endOffset":3416,"count":9},{"startOffset":1003,"endOffset":1065,"count":0},{"startOffset":1098,"endOffset":1103,"count":0},{"startOffset":1256,"endOffset":1387,"count":0},{"startOffset":2514,"endOffset":2839,"count":0},{"startOffset":2909,"endOffset":3141,"count":0},{"startOffset":3197,"endOffset":3250,"count":0},{"startOffset":3294,"endOffset":3395,"count":0}],"isBlockCoverage":true},{"functionName":"unshiftRequestInterceptors","ranges":[{"startOffset":1897,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"pushResponseInterceptors","ranges":[{"startOffset":2323,"endOffset":2455,"count":0}],"isBlockCoverage":false},{"functionName":"getUri","ranges":[{"startOffset":3444,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"forEachMethodNoData","ranges":[{"startOffset":3751,"endOffset":4005,"count":4}],"isBlockCoverage":true},{"functionName":"Axios.<computed>","ranges":[{"startOffset":3844,"endOffset":4002,"count":6}],"isBlockCoverage":true},{"functionName":"forEachMethodWithData","ranges":[{"startOffset":4049,"endOffset":4554,"count":3}],"isBlockCoverage":true},{"functionName":"generateHTTPMethod","ranges":[{"startOffset":4119,"endOffset":4437,"count":6}],"isBlockCoverage":true},{"functionName":"httpMethod","ranges":[{"startOffset":4168,"endOffset":4432,"count":3},{"startOffset":4311,"endOffset":4372,"count":0}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/buildURL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1644,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":51,"endOffset":269,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":511,"endOffset":1642,"count":18},{"startOffset":631,"endOffset":1641,"count":0}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":880,"endOffset":1356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/InterceptorManager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1363,"count":1}],"isBlockCoverage":true},{"functionName":"InterceptorManager","ranges":[{"startOffset":51,"endOffset":106,"count":2}],"isBlockCoverage":true},{"functionName":"use","ranges":[{"startOffset":409,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"eject","ranges":[{"startOffset":818,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":1192,"endOffset":1323,"count":18}],"isBlockCoverage":true},{"functionName":"forEachHandler","ranges":[{"startOffset":1246,"endOffset":1319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/dispatchRequest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"throwIfCancellationRequested","ranges":[{"startOffset":312,"endOffset":520,"count":18},{"startOffset":386,"endOffset":434,"count":0},{"startOffset":456,"endOffset":480,"count":0},{"startOffset":482,"endOffset":518,"count":0}],"isBlockCoverage":true},{"functionName":"dispatchRequest","ranges":[{"startOffset":738,"endOffset":2138,"count":9},{"startOffset":874,"endOffset":879,"count":0},{"startOffset":1108,"endOffset":1113,"count":0},{"startOffset":1149,"endOffset":1154,"count":0},{"startOffset":1384,"endOffset":1403,"count":0}],"isBlockCoverage":true},{"functionName":"cleanHeaderConfig","ranges":[{"startOffset":1267,"endOffset":1346,"count":63}],"isBlockCoverage":true},{"functionName":"onAdapterResolution","ranges":[{"startOffset":1436,"endOffset":1713,"count":5}],"isBlockCoverage":true},{"functionName":"onAdapterRejection","ranges":[{"startOffset":1715,"endOffset":2134,"count":4}],"isBlockCoverage":true}]},{"scriptId":"555","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/transformData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":637,"count":1}],"isBlockCoverage":true},{"functionName":"transformData","ranges":[{"startOffset":410,"endOffset":635,"count":18},{"startOffset":476,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":543,"endOffset":615,"count":18}],"isBlockCoverage":true}]},{"scriptId":"556","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/defaults/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4071,"count":1}],"isBlockCoverage":true},{"functionName":"setContentTypeIfUnset","ranges":[{"startOffset":358,"endOffset":532,"count":3}],"isBlockCoverage":true},{"functionName":"getDefaultAdapter","ranges":[{"startOffset":534,"endOffset":917,"count":1},{"startOffset":625,"endOffset":708,"count":0}],"isBlockCoverage":true},{"functionName":"stringifySafely","ranges":[{"startOffset":919,"endOffset":1233,"count":3},{"startOffset":1005,"endOffset":1182,"count":0}],"isBlockCoverage":true},{"functionName":"transformRequest","ranges":[{"startOffset":1346,"endOffset":2518,"count":9},{"startOffset":1672,"endOffset":1698,"count":0},{"startOffset":1738,"endOffset":1771,"count":0},{"startOffset":1811,"endOffset":1937,"count":0},{"startOffset":2133,"endOffset":2173,"count":3},{"startOffset":2176,"endOffset":2330,"count":0},{"startOffset":2356,"endOffset":2393,"count":6},{"startOffset":2395,"endOffset":2496,"count":3},{"startOffset":2496,"endOffset":2517,"count":6}],"isBlockCoverage":true},{"functionName":"transformResponse","ranges":[{"startOffset":2544,"endOffset":3280,"count":9},{"startOffset":2620,"endOffset":2644,"count":0},{"startOffset":2845,"endOffset":2876,"count":0},{"startOffset":2968,"endOffset":3258,"count":7},{"startOffset":3023,"endOffset":3252,"count":2},{"startOffset":3066,"endOffset":3244,"count":0},{"startOffset":3258,"endOffset":3279,"count":4}],"isBlockCoverage":true},{"functionName":"validateStatus","ranges":[{"startOffset":3601,"endOffset":3680,"count":9}],"isBlockCoverage":true},{"functionName":"forEachMethodNoData","ranges":[{"startOffset":3817,"endOffset":3890,"count":3}],"isBlockCoverage":true},{"functionName":"forEachMethodWithData","ranges":[{"startOffset":3934,"endOffset":4040,"count":3}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/normalizeHeaderName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":357,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeHeaderName","ranges":[{"startOffset":66,"endOffset":355,"count":18}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":147,"endOffset":351,"count":126},{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/AxiosError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2254,"count":1}],"isBlockCoverage":true},{"functionName":"AxiosError","ranges":[{"startOffset":432,"endOffset":718,"count":4}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":766,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1581,"endOffset":1636,"count":10}],"isBlockCoverage":true},{"functionName":"AxiosError.from","ranges":[{"startOffset":1813,"endOffset":2222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/defaults/transitional.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true}]},{"scriptId":"560","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/toFormData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1784,"count":1}],"isBlockCoverage":true},{"functionName":"toFormData","ranges":[{"startOffset":171,"endOffset":1753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/adapters/http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14145,"count":1}],"isBlockCoverage":true},{"functionName":"setProxy","ranges":[{"startOffset":829,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"httpAdapter","ranges":[{"startOffset":1515,"endOffset":14143,"count":9}],"isBlockCoverage":true},{"functionName":"dispatchHttpRequest","ranges":[{"startOffset":1567,"endOffset":14139,"count":9},{"startOffset":2450,"endOffset":2681,"count":0},{"startOffset":2897,"endOffset":2933,"count":0},{"startOffset":2935,"endOffset":2991,"count":0},{"startOffset":3006,"endOffset":3030,"count":3},{"startOffset":3032,"endOffset":3906,"count":3},{"startOffset":3067,"endOffset":3104,"count":0},{"startOffset":3141,"endOffset":3200,"count":0},{"startOffset":3284,"endOffset":3499,"count":0},{"startOffset":3537,"endOffset":3574,"count":0},{"startOffset":3576,"endOffset":3748,"count":0},{"startOffset":3988,"endOffset":4133,"count":0},{"startOffset":4287,"endOffset":4311,"count":0},{"startOffset":4367,"endOffset":4515,"count":0},{"startOffset":4547,"endOffset":4728,"count":0},{"startOffset":4743,"endOffset":4771,"count":0},{"startOffset":4773,"endOffset":4829,"count":0},{"startOffset":4911,"endOffset":4930,"count":0},{"startOffset":5056,"endOffset":5244,"count":0},{"startOffset":5567,"endOffset":5620,"count":0},{"startOffset":5936,"endOffset":7170,"count":0},{"startOffset":7193,"endOffset":7410,"count":0},{"startOffset":7469,"endOffset":7517,"count":0},{"startOffset":7545,"endOffset":7588,"count":0},{"startOffset":7625,"endOffset":7679,"count":0},{"startOffset":7718,"endOffset":7779,"count":0},{"startOffset":7813,"endOffset":7878,"count":0},{"startOffset":7910,"endOffset":7923,"count":0},{"startOffset":7980,"endOffset":8039,"count":0},{"startOffset":8076,"endOffset":8145,"count":0},{"startOffset":11977,"endOffset":13384,"count":0},{"startOffset":13431,"endOffset":13903,"count":0},{"startOffset":13960,"endOffset":14101,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":1653,"endOffset":1868,"count":9},{"startOffset":1701,"endOffset":1762,"count":0},{"startOffset":1789,"endOffset":1862,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1887,"endOffset":1961,"count":5}],"isBlockCoverage":true},{"functionName":"reject","ranges":[{"startOffset":2006,"endOffset":2101,"count":4}],"isBlockCoverage":true},{"functionName":"storeLowerName","ranges":[{"startOffset":2225,"endOffset":2308,"count":12}],"isBlockCoverage":true},{"functionName":"trim","ranges":[{"startOffset":6168,"endOffset":6227,"count":0}],"isBlockCoverage":false},{"functionName":"proxyMatch","ranges":[{"startOffset":6269,"endOffset":6715,"count":0}],"isBlockCoverage":false},{"functionName":"handleResponse","ranges":[{"startOffset":8214,"endOffset":11436,"count":9},{"startOffset":8268,"endOffset":8275,"count":0},{"startOffset":8452,"endOffset":8458,"count":0},{"startOffset":8743,"endOffset":8755,"count":0},{"startOffset":8764,"endOffset":8780,"count":0},{"startOffset":8789,"endOffset":9078,"count":0},{"startOffset":9329,"endOffset":9413,"count":0}],"isBlockCoverage":true},{"functionName":"handleStreamData","ranges":[{"startOffset":9516,"endOffset":10156,"count":7},{"startOffset":9767,"endOffset":9814,"count":0},{"startOffset":9816,"endOffset":10146,"count":0}],"isBlockCoverage":true},{"functionName":"handlerStreamAborted","ranges":[{"startOffset":10189,"endOffset":10531,"count":0}],"isBlockCoverage":false},{"functionName":"handleStreamError","ranges":[{"startOffset":10562,"endOffset":10707,"count":0}],"isBlockCoverage":false},{"functionName":"handleStreamEnd","ranges":[{"startOffset":10736,"endOffset":11420,"count":9},{"startOffset":10840,"endOffset":10859,"count":7},{"startOffset":10860,"endOffset":10891,"count":2},{"startOffset":11070,"endOffset":11107,"count":0},{"startOffset":11256,"endOffset":11365,"count":0}],"isBlockCoverage":true},{"functionName":"handleRequestError","ranges":[{"startOffset":11481,"endOffset":11685,"count":0}],"isBlockCoverage":false},{"functionName":"handleRequestSocket","ranges":[{"startOffset":11771,"endOffset":11919,"count":9}],"isBlockCoverage":true},{"functionName":"handleRequestTimeout","ranges":[{"startOffset":13023,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"onCanceled","ranges":[{"startOffset":13526,"endOffset":13690,"count":0}],"isBlockCoverage":false},{"functionName":"handleStreamError","ranges":[{"startOffset":13985,"endOffset":14083,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/settle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"settle","ranges":[{"startOffset":317,"endOffset":797,"count":9},{"startOffset":495,"endOffset":523,"count":5},{"startOffset":523,"endOffset":795,"count":4}],"isBlockCoverage":true}]},{"scriptId":"563","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/buildFullPath.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1}],"isBlockCoverage":true},{"functionName":"buildFullPath","ranges":[{"startOffset":521,"endOffset":693,"count":9},{"startOffset":583,"endOffset":614,"count":0},{"startOffset":616,"endOffset":668,"count":0}],"isBlockCoverage":true}]},{"scriptId":"564","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/isAbsoluteURL.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteURL","ranges":[{"startOffset":211,"endOffset":559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/combineURLs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"combineURLs","ranges":[{"startOffset":222,"endOffset":378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10278,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1809,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":1917,"endOffset":2879,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":3495,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":3608,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":5052,"endOffset":5442,"count":1},{"startOffset":5114,"endOffset":5140,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":5813,"endOffset":7537,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":7570,"endOffset":7637,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":7672,"endOffset":8245,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":8280,"endOffset":8510,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":8704,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10081,"endOffset":10187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/follow-redirects/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18958,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":400,"endOffset":534,"count":6}],"isBlockCoverage":true},{"functionName":"eventHandlers.<computed>","ranges":[{"startOffset":444,"endOffset":531,"count":9}],"isBlockCoverage":true},{"functionName":"RedirectableRequest","ranges":[{"startOffset":1163,"endOffset":1815,"count":9}],"isBlockCoverage":true},{"functionName":"RedirectableRequest._onNativeResponse","ranges":[{"startOffset":1692,"endOffset":1754,"count":9}],"isBlockCoverage":true},{"functionName":"RedirectableRequest.abort","ranges":[{"startOffset":1922,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.write","ranges":[{"startOffset":2092,"endOffset":3167,"count":3},{"startOffset":2201,"endOffset":2242,"count":0},{"startOffset":2340,"endOffset":2419,"count":0},{"startOffset":2448,"endOffset":2499,"count":0},{"startOffset":2649,"endOffset":2710,"count":0},{"startOffset":3026,"endOffset":3165,"count":0}],"isBlockCoverage":true},{"functionName":"RedirectableRequest.end","ranges":[{"startOffset":3241,"endOffset":3857,"count":9},{"startOffset":3338,"endOffset":3392,"count":0},{"startOffset":3426,"endOffset":3477,"count":0},{"startOffset":3526,"endOffset":3622,"count":6},{"startOffset":3622,"endOffset":3855,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3731,"endOffset":3824,"count":3}],"isBlockCoverage":true},{"functionName":"RedirectableRequest.setHeader","ranges":[{"startOffset":3955,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.removeHeader","ranges":[{"startOffset":4170,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectableRequest.setTimeout","ranges":[{"startOffset":4362,"endOffset":5892,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6024,"endOffset":6157,"count":4}],"isBlockCoverage":true},{"functionName":"RedirectableRequest.<computed>","ranges":[{"startOffset":6086,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6250,"endOffset":6411,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6348,"endOffset":6402,"count":9}],"isBlockCoverage":true},{"functionName":"RedirectableRequest._sanitizeOptions","ranges":[{"startOffset":6464,"endOffset":7285,"count":9},{"startOffset":6548,"endOffset":6579,"count":0},{"startOffset":6778,"endOffset":6936,"count":0},{"startOffset":7141,"endOffset":7279,"count":0}],"isBlockCoverage":true},{"functionName":"RedirectableRequest._performRequest","ranges":[{"startOffset":7395,"endOffset":9569,"count":9},{"startOffset":7567,"endOffset":7659,"count":0},{"startOffset":8138,"endOffset":8188,"count":54},{"startOffset":8424,"endOffset":8556,"count":0},{"startOffset":8692,"endOffset":9567,"count":0}],"isBlockCoverage":true},{"functionName":"writeNext","ranges":[{"startOffset":8819,"endOffset":9559,"count":0}],"isBlockCoverage":true},{"functionName":"RedirectableRequest._processResponse","ranges":[{"startOffset":9677,"endOffset":14400,"count":9},{"startOffset":9810,"endOffset":9942,"count":0},{"startOffset":10443,"endOffset":10485,"count":0},{"startOffset":10486,"endOffset":10511,"count":0},{"startOffset":10512,"endOffset":10532,"count":0},{"startOffset":10727,"endOffset":11824,"count":0},{"startOffset":11826,"endOffset":11860,"count":0},{"startOffset":11861,"endOffset":12211,"count":0},{"startOffset":12213,"endOffset":12755,"count":0},{"startOffset":12799,"endOffset":12817,"count":0},{"startOffset":12818,"endOffset":12889,"count":0},{"startOffset":13020,"endOffset":13556,"count":0},{"startOffset":13557,"endOffset":13659,"count":0},{"startOffset":13661,"endOffset":14398,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":14474,"endOffset":16712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14691,"endOffset":16690,"count":2}],"isBlockCoverage":true},{"functionName":"request","ranges":[{"startOffset":14943,"endOffset":16169,"count":9},{"startOffset":15041,"endOffset":15373,"count":0},{"startOffset":15420,"endOffset":15466,"count":0},{"startOffset":15612,"endOffset":15673,"count":0},{"startOffset":15960,"endOffset":16003,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16226,"endOffset":16407,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":16741,"endOffset":16772,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":16845,"endOffset":17349,"count":0}],"isBlockCoverage":false},{"functionName":"removeMatchingHeaders","ranges":[{"startOffset":17351,"endOffset":17665,"count":0}],"isBlockCoverage":false},{"functionName":"createErrorType","ranges":[{"startOffset":17667,"endOffset":18217,"count":5},{"startOffset":18075,"endOffset":18083,"count":4}],"isBlockCoverage":true},{"functionName":"CustomError","ranges":[{"startOffset":17746,"endOffset":17981,"count":0}],"isBlockCoverage":false},{"functionName":"abortRequest","ranges":[{"startOffset":18219,"endOffset":18392,"count":0}],"isBlockCoverage":false},{"functionName":"isSubdomain","ranges":[{"startOffset":18394,"endOffset":18612,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":18614,"endOffset":18705,"count":30},{"startOffset":18676,"endOffset":18702,"count":21}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":18707,"endOffset":18775,"count":30}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":18777,"endOffset":18864,"count":3}],"isBlockCoverage":true}]},{"scriptId":"568","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/follow-redirects/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":315,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":29,"endOffset":313,"count":9},{"startOffset":57,"endOffset":279,"count":1},{"startOffset":170,"endOffset":193,"count":0},{"startOffset":231,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":247,"endOffset":268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"node:zlib","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29521,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3527,"endOffset":4154,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":4156,"endOffset":4487,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4489,"endOffset":4574,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4576,"endOffset":4906,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4908,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5451,"endOffset":5765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5990,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6630,"endOffset":6921,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":7158,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9435,"endOffset":9472,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9914,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10107,"endOffset":10159,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":10299,"endOffset":10407,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":10553,"endOffset":10625,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._final","ranges":[{"startOffset":10692,"endOffset":10728,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":11326,"endOffset":11401,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":11842,"endOffset":12244,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":12274,"endOffset":12356,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":12389,"endOffset":12449,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":12484,"endOffset":13018,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":13056,"endOffset":13285,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":13288,"endOffset":15573,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":15575,"endOffset":16165,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":16167,"endOffset":18469,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":18471,"endOffset":18661,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18857,"endOffset":21175,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":21525,"endOffset":21791,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21817,"endOffset":22284,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":22328,"endOffset":22463,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":22559,"endOffset":22694,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22790,"endOffset":22913,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":23003,"endOffset":23134,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":23228,"endOffset":23433,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":23535,"endOffset":23682,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":23784,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":24003,"endOffset":24392,"count":18},{"startOffset":24062,"endOffset":24391,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":24075,"endOffset":24176,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":24191,"endOffset":24389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24477,"endOffset":24564,"count":107},{"startOffset":24535,"endOffset":24555,"count":9},{"startOffset":24556,"endOffset":24563,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":24782,"endOffset":26119,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":26213,"endOffset":26377,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":26491,"endOffset":26661,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":26780,"endOffset":26965,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":26901,"endOffset":26958,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27194,"endOffset":27230,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27234,"endOffset":27275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/env/data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43,"count":1}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/cancel/CanceledError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"CanceledError","ranges":[{"startOffset":239,"endOffset":443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/defaults/env/FormData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":74,"count":1}],"isBlockCoverage":true}]},{"scriptId":"573","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/form-data/lib/form_data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13713,"count":1}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":728,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.append","ranges":[{"startOffset":1168,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._trackLength","ranges":[{"startOffset":2036,"endOffset":3077,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lengthRetriever","ranges":[{"startOffset":3118,"endOffset":4649,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartHeader","ranges":[{"startOffset":4690,"endOffset":6038,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentDisposition","ranges":[{"startOffset":6085,"endOffset":6878,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._getContentType","ranges":[{"startOffset":6918,"endOffset":7832,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._multiPartFooter","ranges":[{"startOffset":7873,"endOffset":8100,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._lastBoundary","ranges":[{"startOffset":8138,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getHeaders","ranges":[{"startOffset":8252,"endOffset":8567,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.setBoundary","ranges":[{"startOffset":8603,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBoundary","ranges":[{"startOffset":8690,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getBuffer","ranges":[{"startOffset":8823,"endOffset":9735,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._generateBoundary","ranges":[{"startOffset":9777,"endOffset":10093,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLengthSync","ranges":[{"startOffset":10277,"endOffset":10942,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.hasKnownLength","ranges":[{"startOffset":11145,"endOffset":11285,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.getLength","ranges":[{"startOffset":11319,"endOffset":11843,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.submit","ranges":[{"startOffset":11874,"endOffset":13491,"count":0}],"isBlockCoverage":false},{"functionName":"FormData._error","ranges":[{"startOffset":13522,"endOffset":13633,"count":0}],"isBlockCoverage":false},{"functionName":"FormData.toString","ranges":[{"startOffset":13666,"endOffset":13711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/combined-stream/lib/combined_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"CombinedStream","ranges":[{"startOffset":148,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.create","ranges":[{"startOffset":514,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.isStreamLike","ranges":[{"startOffset":739,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.append","ranges":[{"startOffset":980,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pipe","ranges":[{"startOffset":1526,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._getNext","ranges":[{"startOffset":1675,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._realGetNext","ranges":[{"startOffset":2035,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._pipeNext","ranges":[{"startOffset":2567,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._handleErrors","ranges":[{"startOffset":2908,"endOffset":3016,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.write","ranges":[{"startOffset":3052,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.pause","ranges":[{"startOffset":3133,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.resume","ranges":[{"startOffset":3378,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.end","ranges":[{"startOffset":3682,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream.destroy","ranges":[{"startOffset":3771,"endOffset":3824,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._reset","ranges":[{"startOffset":3861,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._checkDataSize","ranges":[{"startOffset":3997,"endOffset":4229,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._updateDataSize","ranges":[{"startOffset":4275,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"CombinedStream._emitError","ranges":[{"startOffset":4624,"endOffset":4685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/delayed-stream/lib/delayed_stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2319,"count":1}],"isBlockCoverage":true},{"functionName":"DelayedStream","ranges":[{"startOffset":100,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.create","ranges":[{"startOffset":388,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":982,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.setEncoding","ranges":[{"startOffset":1075,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.resume","ranges":[{"startOffset":1189,"endOffset":1277,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pause","ranges":[{"startOffset":1312,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.release","ranges":[{"startOffset":1386,"endOffset":1553,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream.pipe","ranges":[{"startOffset":1587,"endOffset":1686,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._handleEmit","ranges":[{"startOffset":1727,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"DelayedStream._checkIfMaxDataSizeExceeded","ranges":[{"startOffset":2021,"endOffset":2317,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/mime-types/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3663,"count":1}],"isBlockCoverage":true},{"functionName":"charset","ranges":[{"startOffset":841,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":1366,"endOffset":1822,"count":0}],"isBlockCoverage":false},{"functionName":"extension","ranges":[{"startOffset":1934,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2374,"endOffset":2678,"count":0}],"isBlockCoverage":false},{"functionName":"populateMaps","ranges":[{"startOffset":2744,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"forEachMimeType","ranges":[{"startOffset":2912,"endOffset":3659,"count":2279},{"startOffset":3016,"endOffset":3031,"count":965},{"startOffset":3033,"endOffset":3053,"count":1314},{"startOffset":3053,"endOffset":3177,"count":965},{"startOffset":3177,"endOffset":3655,"count":1220},{"startOffset":3238,"endOffset":3583,"count":40},{"startOffset":3417,"endOffset":3511,"count":34},{"startOffset":3441,"endOffset":3510,"count":19},{"startOffset":3457,"endOffset":3509,"count":11},{"startOffset":3513,"endOffset":3575,"count":23},{"startOffset":3583,"endOffset":3655,"count":1197}],"isBlockCoverage":true}]},{"scriptId":"577","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/mime-db/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true}]},{"scriptId":"578","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"579","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/parallel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1017,"count":1}],"isBlockCoverage":true},{"functionName":"parallel","ranges":[{"startOffset":492,"endOffset":1016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/iterate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1794,"count":1}],"isBlockCoverage":true},{"functionName":"iterate","ranges":[{"startOffset":390,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"runJob","ranges":[{"startOffset":1455,"endOffset":1793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":251,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/defer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":140,"endOffset":440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/abort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":122,"endOffset":246,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":400,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"state","ranges":[{"startOffset":341,"endOffset":940,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/lib/terminator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":533,"count":1}],"isBlockCoverage":true},{"functionName":"terminator","ranges":[{"startOffset":270,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/serial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"serial","ranges":[{"startOffset":399,"endOffset":500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/asynckit/serialOrdered.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"serialOrdered","ranges":[{"startOffset":657,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"ascending","ranges":[{"startOffset":1427,"endOffset":1492,"count":0}],"isBlockCoverage":false},{"functionName":"descending","ranges":[{"startOffset":1690,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/form-data/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":45,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/cancel/isCancel.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":1}],"isBlockCoverage":true},{"functionName":"isCancel","ranges":[{"startOffset":32,"endOffset":100,"count":4}],"isBlockCoverage":true}]},{"scriptId":"590","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/core/mergeConfig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3235,"count":1}],"isBlockCoverage":true},{"functionName":"mergeConfig","ranges":[{"startOffset":323,"endOffset":3233,"count":18},{"startOffset":432,"endOffset":437,"count":0}],"isBlockCoverage":true},{"functionName":"getMergedValue","ranges":[{"startOffset":461,"endOffset":796,"count":156},{"startOffset":539,"endOffset":569,"count":6},{"startOffset":571,"endOffset":620,"count":6},{"startOffset":620,"endOffset":773,"count":150},{"startOffset":659,"endOffset":704,"count":29},{"startOffset":704,"endOffset":773,"count":121},{"startOffset":737,"endOffset":773,"count":18},{"startOffset":773,"endOffset":795,"count":103}],"isBlockCoverage":true},{"functionName":"mergeDeepProperties","ranges":[{"startOffset":848,"endOffset":1105,"count":33},{"startOffset":928,"endOffset":994,"count":9},{"startOffset":994,"endOffset":1101,"count":24}],"isBlockCoverage":true},{"functionName":"valueFromConfig2","ranges":[{"startOffset":1157,"endOffset":1300,"count":48},{"startOffset":1234,"endOffset":1296,"count":42}],"isBlockCoverage":true},{"functionName":"defaultToConfig2","ranges":[{"startOffset":1352,"endOffset":1602,"count":72},{"startOffset":1429,"endOffset":1491,"count":0}],"isBlockCoverage":true},{"functionName":"mergeDirectKeys","ranges":[{"startOffset":1654,"endOffset":1871,"count":9},{"startOffset":1712,"endOffset":1778,"count":0}],"isBlockCoverage":true},{"functionName":"computeConfigValue","ranges":[{"startOffset":2983,"endOffset":3211,"count":162},{"startOffset":3050,"endOffset":3072,"count":33},{"startOffset":3145,"endOffset":3173,"count":6},{"startOffset":3175,"endOffset":3206,"count":156}],"isBlockCoverage":true}]},{"scriptId":"591","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2555,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":389,"count":6}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":284,"endOffset":386,"count":27},{"startOffset":345,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"transitional","ranges":[{"startOffset":749,"endOffset":1608,"count":27}],"isBlockCoverage":true},{"functionName":"formatMessage","ranges":[{"startOffset":804,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1011,"endOffset":1605,"count":27},{"startOffset":1069,"endOffset":1232,"count":0},{"startOffset":1250,"endOffset":1277,"count":0},{"startOffset":1279,"endOffset":1541,"count":0},{"startOffset":1594,"endOffset":1600,"count":0}],"isBlockCoverage":true},{"functionName":"assertOptions","ranges":[{"startOffset":1742,"endOffset":2474,"count":9},{"startOffset":1833,"endOffset":1926,"count":0},{"startOffset":2003,"endOffset":2472,"count":27},{"startOffset":2215,"endOffset":2327,"count":0},{"startOffset":2349,"endOffset":2468,"count":0}],"isBlockCoverage":true}]},{"scriptId":"592","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/cancel/CancelToken.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"CancelToken","ranges":[{"startOffset":228,"endOffset":1394,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfRequested","ranges":[{"startOffset":1509,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":1668,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":1961,"endOffset":2150,"count":0}],"isBlockCoverage":false},{"functionName":"source","ranges":[{"startOffset":2301,"endOffset":2464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/spread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"spread","ranges":[{"startOffset":460,"endOffset":562,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/axios/lib/helpers/isAxiosError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"isAxiosError","ranges":[{"startOffset":268,"endOffset":371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8522,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":382,"endOffset":1161,"count":1},{"startOffset":622,"endOffset":1145,"count":13},{"startOffset":725,"endOffset":730,"count":1},{"startOffset":1007,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_parseVault","ranges":[{"startOffset":1163,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":2250,"endOffset":2331,"count":0}],"isBlockCoverage":false},{"functionName":"_warn","ranges":[{"startOffset":2333,"endOffset":2415,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":2417,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"_dotenvKey","ranges":[{"startOffset":2503,"endOffset":2927,"count":1},{"startOffset":2611,"endOffset":2632,"count":0},{"startOffset":2633,"endOffset":2665,"count":0},{"startOffset":2667,"endOffset":2702,"count":0},{"startOffset":2805,"endOffset":2841,"count":0},{"startOffset":2843,"endOffset":2882,"count":0}],"isBlockCoverage":true},{"functionName":"_instructions","ranges":[{"startOffset":2929,"endOffset":3969,"count":0}],"isBlockCoverage":false},{"functionName":"_vaultPath","ranges":[{"startOffset":3971,"endOffset":4254,"count":1},{"startOffset":4073,"endOffset":4088,"count":0},{"startOffset":4089,"endOffset":4115,"count":0},{"startOffset":4117,"endOffset":4152,"count":0},{"startOffset":4216,"endOffset":4228,"count":0}],"isBlockCoverage":true},{"functionName":"_resolveHome","ranges":[{"startOffset":4256,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"_configVault","ranges":[{"startOffset":4375,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"configDotenv","ranges":[{"startOffset":4706,"endOffset":5541,"count":1},{"startOffset":4851,"endOffset":4867,"count":0},{"startOffset":4885,"endOffset":5050,"count":0},{"startOffset":5258,"endOffset":5287,"count":0},{"startOffset":5289,"endOffset":5334,"count":0},{"startOffset":5418,"endOffset":5539,"count":0}],"isBlockCoverage":true},{"functionName":"config","ranges":[{"startOffset":5583,"endOffset":6107,"count":1},{"startOffset":5801,"endOffset":6106,"count":0}],"isBlockCoverage":true},{"functionName":"decrypt","ranges":[{"startOffset":6109,"endOffset":7185,"count":0}],"isBlockCoverage":false},{"functionName":"populate","ranges":[{"startOffset":7230,"endOffset":8029,"count":1},{"startOffset":7426,"endOffset":7533,"count":0},{"startOffset":7597,"endOffset":8027,"count":13},{"startOffset":7662,"endOffset":7974,"count":0}],"isBlockCoverage":true}]},{"scriptId":"596","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24418,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1393,"endOffset":1555,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1557,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1669,"endOffset":3696,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":3698,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":4784,"endOffset":5404,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":5406,"endOffset":7057,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":7059,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":8039,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":9028,"endOffset":9961,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":9963,"endOffset":11518,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":11520,"endOffset":12189,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":12191,"endOffset":13541,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":13543,"endOffset":15361,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":15454,"endOffset":16124,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":16219,"endOffset":17177,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":17179,"endOffset":18460,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":18462,"endOffset":18617,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":18619,"endOffset":18798,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":18800,"endOffset":20477,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":20479,"endOffset":20675,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":20677,"endOffset":20873,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":21029,"endOffset":21089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21124,"endOffset":21137,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":21176,"endOffset":21236,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":21240,"endOffset":21340,"count":9},{"startOffset":21280,"endOffset":21317,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21375,"endOffset":21388,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":21404,"endOffset":21558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4369,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2680,"endOffset":2753,"count":21}],"isBlockCoverage":true},{"functionName":"exports.<computed>","ranges":[{"startOffset":2709,"endOffset":2752,"count":144}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2925,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2972,"endOffset":3017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3195,"endOffset":3243,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3416,"endOffset":3581,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3471,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3524,"endOffset":3573,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3737,"endOffset":3927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1873,"count":1}],"isBlockCoverage":true},{"functionName":"exposeFormat","ranges":[{"startOffset":458,"endOffset":622,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":547,"endOffset":590,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":768,"endOffset":811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":834,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":901,"endOffset":945,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":973,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1042,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1108,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1178,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1318,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1386,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1464,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1539,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1608,"endOffset":1651,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1676,"endOffset":1718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1747,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1823,"endOffset":1870,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1168,"count":1}],"isBlockCoverage":true},{"functionName":"InvalidFormatError","ranges":[{"startOffset":147,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":472,"endOffset":1166,"count":2},{"startOffset":513,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"Format","ranges":[{"startOffset":689,"endOffset":752,"count":4}],"isBlockCoverage":true},{"functionName":"createFormatWrap","ranges":[{"startOffset":947,"endOffset":1013,"count":4}],"isBlockCoverage":true}]},{"scriptId":"600","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/levels.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":171,"endOffset":249,"count":3},{"startOffset":219,"endOffset":228,"count":0}],"isBlockCoverage":true}]},{"scriptId":"601","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/colorize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3038,"count":1}],"isBlockCoverage":true},{"functionName":"Colorizer","ranges":[{"startOffset":474,"endOffset":592,"count":0}],"isBlockCoverage":false},{"functionName":"addColors","ranges":[{"startOffset":757,"endOffset":1099,"count":3},{"startOffset":1044,"endOffset":1049,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":823,"endOffset":972,"count":25},{"startOffset":895,"endOffset":924,"count":0}],"isBlockCoverage":true},{"functionName":"addColors","ranges":[{"startOffset":1257,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"colorize","ranges":[{"startOffset":1443,"endOffset":2082,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":2224,"endOffset":2644,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2886,"endOffset":2913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/safe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"603","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/colors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5868,"count":1},{"startOffset":5716,"endOffset":5837,"count":4}],"isBlockCoverage":true},{"functionName":"colors.enable","ranges":[{"startOffset":1634,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"colors.disable","ranges":[{"startOffset":1693,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"colors.stripColors.colors.strip","ranges":[{"startOffset":1772,"endOffset":1837,"count":0}],"isBlockCoverage":false},{"functionName":"stylize","ranges":[{"startOffset":1914,"endOffset":2318,"count":0}],"isBlockCoverage":false},{"functionName":"escapeStringRegexp","ranges":[{"startOffset":2392,"endOffset":2540,"count":50},{"startOffset":2439,"endOffset":2490,"count":0}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":2543,"endOffset":2869,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2885,"endOffset":3223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2985,"endOffset":3205,"count":50}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3125,"endOffset":3193,"count":0}],"isBlockCoverage":false},{"functionName":"colors","ranges":[{"startOffset":3253,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"applyStyle","ranges":[{"startOffset":3285,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"colors.setTheme","ranges":[{"startOffset":4106,"endOffset":4989,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":4992,"endOffset":5182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5056,"endOffset":5164,"count":50}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5102,"endOffset":5152,"count":0}],"isBlockCoverage":false},{"functionName":"sequencer","ranges":[{"startOffset":5200,"endOffset":5324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5721,"endOffset":5828,"count":4}],"isBlockCoverage":true},{"functionName":"colors.<computed>","ranges":[{"startOffset":5755,"endOffset":5823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/styles.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2513,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2354,"endOffset":2510,"count":50}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/system/supports-colors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4049,"count":1},{"startOffset":1331,"endOffset":1356,"count":0},{"startOffset":1468,"endOffset":1492,"count":0},{"startOffset":1519,"endOffset":1610,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1612,"endOffset":1792,"count":3},{"startOffset":1664,"endOffset":1687,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":1794,"endOffset":3798,"count":3},{"startOffset":1855,"endOffset":1874,"count":0},{"startOffset":1965,"endOffset":1984,"count":0},{"startOffset":2014,"endOffset":2033,"count":0},{"startOffset":2048,"endOffset":2064,"count":2},{"startOffset":2065,"endOffset":2087,"count":0},{"startOffset":2089,"endOffset":2108,"count":0},{"startOffset":2133,"endOffset":2136,"count":0},{"startOffset":2179,"endOffset":2870,"count":0},{"startOffset":2891,"endOffset":3079,"count":0},{"startOffset":3114,"endOffset":3205,"count":0},{"startOffset":3236,"endOffset":3526,"count":0},{"startOffset":3586,"endOffset":3797,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2954,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":3800,"endOffset":3905,"count":3}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/system/has-flag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1148,"endOffset":1413,"count":19},{"startOffset":1281,"endOffset":1285,"count":0},{"startOffset":1356,"endOffset":1410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"607","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/custom/trap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1677,"count":1}],"isBlockCoverage":true},{"functionName":"runTheTrap","ranges":[{"startOffset":20,"endOffset":1675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/custom/zalgo.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2778,"count":1}],"isBlockCoverage":true},{"functionName":"zalgo","ranges":[{"startOffset":33,"endOffset":2775,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/maps/america.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":20,"endOffset":276,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48,"endOffset":273,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/maps/zebra.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":20,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48,"endOffset":141,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/maps/rainbow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":311,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":20,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":132,"endOffset":305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@colors/colors/lib/maps/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":20,"endOffset":452,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":274,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/triple-beam/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true}]},{"scriptId":"614","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/triple-beam/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":538,"count":1}],"isBlockCoverage":true}]},{"scriptId":"615","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/triple-beam/config/cli.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":616,"count":1}],"isBlockCoverage":true}]},{"scriptId":"616","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/triple-beam/config/npm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":516,"count":1}],"isBlockCoverage":true}]},{"scriptId":"617","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/triple-beam/config/syslog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":319,"endOffset":444,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":349,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"useFormat","ranges":[{"startOffset":448,"endOffset":676,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":477,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"forFunctions","ranges":[{"startOffset":680,"endOffset":796,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":731,"endOffset":790,"count":5}],"isBlockCoverage":true},{"functionName":"forProperties","ranges":[{"startOffset":800,"endOffset":1012,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":852,"endOffset":1006,"count":4}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/transports/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":281,"endOffset":325,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":666,"endOffset":707,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":861,"endOffset":904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":676,"count":1}],"isBlockCoverage":true}]},{"scriptId":"621","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/create-logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3140,"count":1}],"isBlockCoverage":true},{"functionName":"isLevelEnabledFunctionName","ranges":[{"startOffset":320,"endOffset":442,"count":7}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":676,"endOffset":3138,"count":1}],"isBlockCoverage":true},{"functionName":"DerivedLogger","ranges":[{"startOffset":1230,"endOffset":1280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1432,"endOffset":3116,"count":7},{"startOffset":1530,"endOffset":1705,"count":0}],"isBlockCoverage":true},{"functionName":"DerivedLogger.<computed>","ranges":[{"startOffset":2118,"endOffset":2971,"count":141},{"startOffset":2228,"endOffset":2237,"count":0},{"startOffset":2398,"endOffset":2404,"count":0},{"startOffset":2551,"endOffset":2560,"count":0},{"startOffset":2570,"endOffset":2970,"count":0}],"isBlockCoverage":true},{"functionName":"DerivedLogger.<computed>","ranges":[{"startOffset":3039,"endOffset":3111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19615,"count":1}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":1190,"endOffset":1278,"count":1}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":1282,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":2351,"endOffset":4134,"count":1},{"startOffset":2702,"endOffset":2729,"count":0},{"startOffset":2944,"endOffset":2958,"count":0},{"startOffset":2959,"endOffset":2979,"count":0},{"startOffset":3030,"endOffset":3071,"count":0},{"startOffset":3097,"endOffset":3138,"count":0},{"startOffset":3370,"endOffset":3511,"count":0},{"startOffset":3638,"endOffset":3961,"count":0},{"startOffset":3990,"endOffset":4046,"count":0},{"startOffset":4074,"endOffset":4130,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3471,"endOffset":3503,"count":0}],"isBlockCoverage":false},{"functionName":"isLevelEnabled","ranges":[{"startOffset":4138,"endOffset":4877,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":5989,"endOffset":7647,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":7947,"endOffset":9666,"count":141},{"startOffset":8002,"endOffset":8034,"count":0},{"startOffset":8422,"endOffset":8461,"count":0},{"startOffset":8676,"endOffset":8709,"count":4},{"startOffset":8711,"endOffset":8835,"count":0},{"startOffset":8929,"endOffset":9123,"count":0}],"isBlockCoverage":true},{"functionName":"_final","ranges":[{"startOffset":9863,"endOffset":10167,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":10364,"endOffset":11398,"count":3},{"startOffset":10792,"endOffset":10834,"count":0},{"startOffset":10926,"endOffset":11048,"count":0},{"startOffset":11260,"endOffset":11299,"count":0},{"startOffset":11337,"endOffset":11376,"count":0}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":11604,"endOffset":11921,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":12047,"endOffset":12096,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":12289,"endOffset":12425,"count":0}],"isBlockCoverage":false},{"functionName":"setLevels","ranges":[{"startOffset":12559,"endOffset":12610,"count":0}],"isBlockCoverage":false},{"functionName":"query","ranges":[{"startOffset":12954,"endOffset":14542,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":14754,"endOffset":15632,"count":0}],"isBlockCoverage":false},{"functionName":"startTimer","ranges":[{"startOffset":16016,"endOffset":16065,"count":0}],"isBlockCoverage":false},{"functionName":"profile","ranges":[{"startOffset":16384,"endOffset":17193,"count":0}],"isBlockCoverage":false},{"functionName":"handleExceptions","ranges":[{"startOffset":17324,"endOffset":17555,"count":0}],"isBlockCoverage":false},{"functionName":"unhandleExceptions","ranges":[{"startOffset":17686,"endOffset":17925,"count":0}],"isBlockCoverage":false},{"functionName":"cli","ranges":[{"startOffset":18042,"endOffset":18295,"count":0}],"isBlockCoverage":false},{"functionName":"_onEvent","ranges":[{"startOffset":18542,"endOffset":18996,"count":6}],"isBlockCoverage":true},{"functionName":"transportEvent","ranges":[{"startOffset":18575,"endOffset":18817,"count":0}],"isBlockCoverage":false},{"functionName":"_addDefaultMeta","ranges":[{"startOffset":19000,"endOffset":19104,"count":141},{"startOffset":19049,"endOffset":19100,"count":0}],"isBlockCoverage":true},{"functionName":"getLevelValue","ranges":[{"startOffset":19108,"endOffset":19248,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19462,"endOffset":19584,"count":1},{"startOffset":19572,"endOffset":19579,"count":0}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1},{"startOffset":78,"endOffset":87,"count":0},{"startOffset":89,"endOffset":203,"count":0},{"startOffset":304,"endOffset":314,"count":0}],"isBlockCoverage":true}]},{"scriptId":"624","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36023,"count":1},{"startOffset":1643,"endOffset":1725,"count":0},{"startOffset":1738,"endOffset":1755,"count":0},{"startOffset":2064,"endOffset":2104,"count":0}],"isBlockCoverage":true},{"functionName":"EElistenerCount","ranges":[{"startOffset":1349,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":1741,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1757,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":1826,"endOffset":1920,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":2082,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2966,"endOffset":3752,"count":3},{"startOffset":3221,"endOffset":3584,"count":0},{"startOffset":3586,"endOffset":3750,"count":0}],"isBlockCoverage":true},{"functionName":"ReadableState","ranges":[{"startOffset":3753,"endOffset":6617,"count":1},{"startOffset":3823,"endOffset":3853,"count":0},{"startOffset":3875,"endOffset":3880,"count":0},{"startOffset":4226,"endOffset":4262,"count":0},{"startOffset":4477,"endOffset":4508,"count":0},{"startOffset":6434,"endOffset":6615,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6618,"endOffset":7236,"count":1},{"startOffset":6732,"endOffset":6761,"count":0},{"startOffset":7103,"endOffset":7129,"count":0},{"startOffset":7177,"endOffset":7209,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7456,"endOffset":7589,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7598,"endOffset":7876,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":8016,"endOffset":8049,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":8278,"endOffset":8749,"count":141},{"startOffset":8389,"endOffset":8636,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":8844,"endOffset":8923,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":8925,"endOffset":10565,"count":141},{"startOffset":9101,"endOffset":9164,"count":0},{"startOffset":9209,"endOffset":9241,"count":0},{"startOffset":9254,"endOffset":9295,"count":0},{"startOffset":9322,"endOffset":9350,"count":0},{"startOffset":9411,"endOffset":9463,"count":0},{"startOffset":9465,"endOffset":9518,"count":0},{"startOffset":9541,"endOffset":9688,"count":0},{"startOffset":9711,"endOffset":9785,"count":0},{"startOffset":9812,"endOffset":9843,"count":0},{"startOffset":9908,"endOffset":9920,"count":0},{"startOffset":9922,"endOffset":10106,"count":0},{"startOffset":10186,"endOffset":10281,"count":0},{"startOffset":10540,"endOffset":10561,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":10566,"endOffset":11003,"count":141},{"startOffset":10741,"endOffset":10969,"count":0}],"isBlockCoverage":true},{"functionName":"chunkInvalid","ranges":[{"startOffset":11004,"endOffset":11261,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":11292,"endOffset":11355,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11419,"endOffset":12102,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":12160,"endOffset":12524,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12637,"endOffset":13234,"count":138},{"startOffset":12685,"endOffset":12721,"count":1},{"startOffset":12723,"endOffset":12732,"count":137},{"startOffset":12732,"endOffset":12766,"count":1},{"startOffset":12766,"endOffset":13233,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":13331,"endOffset":16902,"count":138},{"startOffset":13456,"endOffset":13486,"count":1},{"startOffset":13672,"endOffset":13693,"count":137},{"startOffset":13694,"endOffset":13798,"count":137},{"startOffset":13763,"endOffset":13781,"count":0},{"startOffset":13800,"endOffset":13968,"count":0},{"startOffset":14076,"endOffset":14090,"count":137},{"startOffset":14092,"endOffset":14161,"count":0},{"startOffset":15436,"endOffset":15477,"count":0},{"startOffset":15701,"endOffset":15765,"count":1},{"startOffset":15765,"endOffset":16286,"count":137},{"startOffset":16250,"endOffset":16282,"count":0},{"startOffset":16311,"endOffset":16336,"count":1},{"startOffset":16336,"endOffset":16352,"count":137},{"startOffset":16451,"endOffset":16511,"count":0},{"startOffset":16804,"endOffset":16818,"count":1},{"startOffset":16820,"endOffset":16838,"count":0},{"startOffset":16863,"endOffset":16886,"count":0}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":16904,"endOffset":17635,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17836,"endOffset":18161,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18162,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19132,"endOffset":19288,"count":141},{"startOffset":19198,"endOffset":19286,"count":136}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19289,"endOffset":21062,"count":136},{"startOffset":20814,"endOffset":20852,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":21333,"endOffset":21416,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21444,"endOffset":25163,"count":3},{"startOffset":21559,"endOffset":21605,"count":1},{"startOffset":21610,"endOffset":21671,"count":1},{"startOffset":21676,"endOffset":21727,"count":1},{"startOffset":21844,"endOffset":21869,"count":0},{"startOffset":21954,"endOffset":21962,"count":0},{"startOffset":21988,"endOffset":22012,"count":0},{"startOffset":25097,"endOffset":25146,"count":0}],"isBlockCoverage":true},{"functionName":"onunpipe","ranges":[{"startOffset":22074,"endOffset":22300,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":22303,"endOffset":22361,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":22654,"endOffset":23485,"count":0}],"isBlockCoverage":false},{"functionName":"ondata","ranges":[{"startOffset":23514,"endOffset":24140,"count":423},{"startOffset":23646,"endOffset":24136,"count":0}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":24262,"endOffset":24443,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":24623,"endOffset":24706,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":24740,"endOffset":24845,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":24881,"endOffset":24947,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25165,"endOffset":25490,"count":3}],"isBlockCoverage":true},{"functionName":"pipeOnDrainFunctionResult","ranges":[{"startOffset":25202,"endOffset":25487,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":25519,"endOffset":26722,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":26847,"endOffset":27742,"count":7},{"startOffset":26975,"endOffset":27300,"count":3},{"startOffset":27300,"endOffset":27726,"count":4},{"startOffset":27329,"endOffset":27726,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":27836,"endOffset":28347,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":28389,"endOffset":28924,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":28926,"endOffset":29354,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":29355,"endOffset":29443,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":29597,"endOffset":29918,"count":3},{"startOffset":29668,"endOffset":29877,"count":1}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":29920,"endOffset":30070,"count":1}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":30071,"endOffset":30317,"count":1},{"startOffset":30300,"endOffset":30315,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":30345,"endOffset":30611,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":30613,"endOffset":30758,"count":1},{"startOffset":30755,"endOffset":30756,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":30942,"endOffset":32458,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":32541,"endOffset":32763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32998,"endOffset":33064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33293,"endOffset":33375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33605,"endOffset":33665,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":33674,"endOffset":33779,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34078,"endOffset":34137,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":34367,"endOffset":34885,"count":1},{"startOffset":34457,"endOffset":34884,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":34886,"endOffset":35104,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":35105,"endOffset":35683,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":35738,"endOffset":35897,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":35901,"endOffset":36023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"625","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36,"count":1}],"isBlockCoverage":true}]},{"scriptId":"626","url":"node:internal/blob","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9516,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableStream","ranges":[{"startOffset":1785,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"isBlob","ranges":[{"startOffset":2047,"endOffset":2116,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2118,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"Blob","ranges":[{"startOffset":3049,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4165,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4438,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4664,"endOffset":4790,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":4841,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":4997,"endOffset":5104,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":5232,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":6067,"endOffset":7185,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":7233,"endOffset":7398,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":7445,"endOffset":8100,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob","ranges":[{"startOffset":8104,"endOffset":8199,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedBlob.<computed>","ranges":[{"startOffset":8237,"endOffset":8245,"count":0}],"isBlockCoverage":false},{"functionName":"createBlob","ranges":[{"startOffset":8248,"endOffset":8451,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObjectURL","ranges":[{"startOffset":8804,"endOffset":9415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"627","url":"node:internal/file","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2066,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":473,"endOffset":1829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6905,"count":1},{"startOffset":2542,"endOffset":2554,"count":0}],"isBlockCoverage":true},{"functionName":"ownKeys","ranges":[{"startOffset":15,"endOffset":356,"count":0}],"isBlockCoverage":false},{"functionName":"_objectSpread","ranges":[{"startOffset":357,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"_defineProperty","ranges":[{"startOffset":864,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"_classCallCheck","ranges":[{"startOffset":1101,"endOffset":1254,"count":1},{"startOffset":1191,"endOffset":1252,"count":0}],"isBlockCoverage":true},{"functionName":"_defineProperties","ranges":[{"startOffset":1255,"endOffset":1588,"count":1},{"startOffset":1338,"endOffset":1586,"count":11}],"isBlockCoverage":true},{"functionName":"_createClass","ranges":[{"startOffset":1589,"endOffset":1874,"count":1},{"startOffset":1738,"endOffset":1782,"count":0}],"isBlockCoverage":true},{"functionName":"_toPropertyKey","ranges":[{"startOffset":1875,"endOffset":1998,"count":11},{"startOffset":1976,"endOffset":1981,"count":1},{"startOffset":1982,"endOffset":1995,"count":10}],"isBlockCoverage":true},{"functionName":"_toPrimitive","ranges":[{"startOffset":1999,"endOffset":2376,"count":11},{"startOffset":2066,"endOffset":2083,"count":0},{"startOffset":2098,"endOffset":2356,"count":0},{"startOffset":2357,"endOffset":2365,"count":0}],"isBlockCoverage":true},{"functionName":"copyBuffer","ranges":[{"startOffset":2556,"endOffset":2651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2682,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"BufferList","ranges":[{"startOffset":2698,"endOffset":2829,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":2888,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":3136,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":3364,"endOffset":3587,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":3624,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3743,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":3961,"endOffset":4255,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":4377,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":4929,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":5098,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":5856,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6636,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3109,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":77,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorAndCloseNT","ranges":[{"startOffset":1593,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1684,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1875,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":2433,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2496,"endOffset":3010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":99,"endOffset":262,"count":5},{"startOffset":197,"endOffset":220,"count":0},{"startOffset":232,"endOffset":252,"count":2},{"startOffset":253,"endOffset":259,"count":3}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":263,"endOffset":686,"count":5},{"startOffset":408,"endOffset":620,"count":0},{"startOffset":672,"endOffset":683,"count":0}],"isBlockCoverage":true}]},{"scriptId":"631","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3715,"count":1}],"isBlockCoverage":true},{"functionName":"createErrorType","ranges":[{"startOffset":34,"endOffset":513,"count":12},{"startOffset":95,"endOffset":117,"count":8}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":121,"endOffset":283,"count":0}],"isBlockCoverage":false},{"functionName":"NodeError","ranges":[{"startOffset":322,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"oneOf","ranges":[{"startOffset":585,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"startsWith","ranges":[{"startOffset":1183,"endOffset":1298,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":1400,"endOffset":1598,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":1700,"endOffset":1919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1962,"endOffset":2062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2116,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2908,"endOffset":2981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3090,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3525,"endOffset":3579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"633","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21907,"count":1},{"startOffset":2145,"endOffset":2227,"count":0},{"startOffset":2240,"endOffset":2257,"count":0},{"startOffset":8301,"endOffset":8405,"count":0}],"isBlockCoverage":true},{"functionName":"WriteReq","ranges":[{"startOffset":1354,"endOffset":1488,"count":0}],"isBlockCoverage":false},{"functionName":"CorkedRequest","ranges":[{"startOffset":1579,"endOffset":1742,"count":4}],"isBlockCoverage":true},{"functionName":"CorkedRequest.finish","ranges":[{"startOffset":1688,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"OurUint8Array","ranges":[{"startOffset":2243,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":2259,"endOffset":2327,"count":0}],"isBlockCoverage":false},{"functionName":"_isUint8Array","ranges":[{"startOffset":2328,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":3247,"endOffset":3264,"count":564}],"isBlockCoverage":true},{"functionName":"WritableState","ranges":[{"startOffset":3265,"endOffset":7167,"count":4},{"startOffset":3335,"endOffset":3365,"count":0},{"startOffset":3387,"endOffset":3392,"count":0},{"startOffset":3734,"endOffset":3770,"count":0},{"startOffset":3927,"endOffset":3993,"count":1},{"startOffset":3961,"endOffset":3992,"count":0}],"isBlockCoverage":true},{"functionName":"WritableState.onwrite","ranges":[{"startOffset":6031,"endOffset":6075,"count":564}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7204,"endOffset":7371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7374,"endOffset":7694,"count":1},{"startOffset":7680,"endOffset":7692,"count":0}],"isBlockCoverage":true},{"functionName":"writableStateBufferGetter","ranges":[{"startOffset":7493,"endOffset":7572,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8090,"endOffset":8293,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":8329,"endOffset":8402,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":8406,"endOffset":9611,"count":4},{"startOffset":8453,"endOffset":8483,"count":1},{"startOffset":9085,"endOffset":9125,"count":3},{"startOffset":9127,"endOffset":9156,"count":0},{"startOffset":9325,"endOffset":9353,"count":0},{"startOffset":9400,"endOffset":9430,"count":0},{"startOffset":9478,"endOffset":9510,"count":0},{"startOffset":9556,"endOffset":9584,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":9707,"endOffset":9776,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":9778,"endOffset":9990,"count":0}],"isBlockCoverage":false},{"functionName":"validChunk","ranges":[{"startOffset":10214,"endOffset":10587,"count":564},{"startOffset":10294,"endOffset":10338,"count":0},{"startOffset":10396,"endOffset":10474,"count":0},{"startOffset":10485,"endOffset":10570,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":10615,"endOffset":11266,"count":564},{"startOffset":10734,"endOffset":10757,"count":0},{"startOffset":10771,"endOffset":10797,"count":0},{"startOffset":10799,"endOffset":10844,"count":0},{"startOffset":10883,"endOffset":10928,"count":0},{"startOffset":10942,"endOffset":10962,"count":0},{"startOffset":11078,"endOffset":11102,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":11294,"endOffset":11341,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":11371,"endOffset":11586,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11628,"endOffset":12050,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12276,"endOffset":12363,"count":0}],"isBlockCoverage":false},{"functionName":"decodeChunk","ranges":[{"startOffset":12368,"endOffset":12567,"count":564},{"startOffset":12439,"endOffset":12471,"count":0},{"startOffset":12472,"endOffset":12500,"count":0},{"startOffset":12502,"endOffset":12549,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12799,"endOffset":12865,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":13058,"endOffset":14027,"count":564},{"startOffset":13226,"endOffset":13304,"count":0},{"startOffset":13342,"endOffset":13356,"count":0},{"startOffset":13513,"endOffset":13536,"count":0},{"startOffset":13574,"endOffset":13939,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":14028,"endOffset":14388,"count":564},{"startOffset":14210,"endOffset":14259,"count":0},{"startOffset":14276,"endOffset":14313,"count":0}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":14389,"endOffset":15099,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteStateUpdate","ranges":[{"startOffset":15100,"endOffset":15243,"count":564}],"isBlockCoverage":true},{"functionName":"onwrite","ranges":[{"startOffset":15244,"endOffset":15925,"count":564},{"startOffset":15395,"endOffset":15429,"count":0},{"startOffset":15469,"endOffset":15511,"count":0},{"startOffset":15731,"endOffset":15772,"count":0},{"startOffset":15787,"endOffset":15859,"count":149},{"startOffset":15859,"endOffset":15919,"count":415}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15926,"endOffset":16083,"count":564}],"isBlockCoverage":true},{"functionName":"onwriteDrain","ranges":[{"startOffset":16276,"endOffset":16422,"count":564},{"startOffset":16360,"endOffset":16420,"count":0}],"isBlockCoverage":true},{"functionName":"clearBuffer","ranges":[{"startOffset":16487,"endOffset":18291,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":18320,"endOffset":18404,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18466,"endOffset":18990,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19216,"endOffset":19275,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":19280,"endOffset":19426,"count":1128},{"startOffset":19331,"endOffset":19352,"count":0},{"startOffset":19353,"endOffset":19386,"count":0},{"startOffset":19387,"endOffset":19405,"count":0},{"startOffset":19406,"endOffset":19423,"count":0}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":19427,"endOffset":19674,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":19675,"endOffset":20023,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":20024,"endOffset":20568,"count":564},{"startOffset":20106,"endOffset":20551,"count":0}],"isBlockCoverage":true},{"functionName":"endWritable","ranges":[{"startOffset":20569,"endOffset":20807,"count":0}],"isBlockCoverage":false},{"functionName":"onCorkedFinish","ranges":[{"startOffset":20808,"endOffset":21093,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21313,"endOffset":21446,"count":423},{"startOffset":21373,"endOffset":21400,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":21455,"endOffset":21733,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":21873,"endOffset":21906,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/util-deprecate/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4381,"count":1},{"startOffset":1419,"endOffset":1511,"count":0},{"startOffset":1815,"endOffset":1936,"count":11},{"startOffset":1878,"endOffset":1932,"count":7}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":1422,"endOffset":1511,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1939,"endOffset":2374,"count":1},{"startOffset":1999,"endOffset":2026,"count":0},{"startOffset":2173,"endOffset":2195,"count":0},{"startOffset":2232,"endOffset":2254,"count":0},{"startOffset":2296,"endOffset":2368,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2604,"endOffset":2670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2897,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3211,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"onend","ranges":[{"startOffset":3305,"endOffset":3535,"count":0}],"isBlockCoverage":false},{"functionName":"onEndNT","ranges":[{"startOffset":3536,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3794,"endOffset":3997,"count":141},{"startOffset":3891,"endOffset":3918,"count":0},{"startOffset":3960,"endOffset":3992,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4006,"endOffset":4377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7936,"count":1}],"isBlockCoverage":true},{"functionName":"afterTransform","ranges":[{"startOffset":3961,"endOffset":4470,"count":141},{"startOffset":4099,"endOffset":4164,"count":0},{"startOffset":4293,"endOffset":4309,"count":0},{"startOffset":4396,"endOffset":4427,"count":0}],"isBlockCoverage":true},{"functionName":"Transform","ranges":[{"startOffset":4471,"endOffset":5392,"count":1},{"startOffset":4537,"endOffset":4567,"count":0},{"startOffset":5167,"endOffset":5203,"count":0},{"startOffset":5249,"endOffset":5277,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":5393,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5660,"endOffset":5796,"count":141}],"isBlockCoverage":true},{"functionName":"Transform._transform","ranges":[{"startOffset":6279,"endOffset":6367,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6398,"endOffset":6711,"count":141},{"startOffset":6624,"endOffset":6642,"count":0},{"startOffset":6643,"endOffset":6674,"count":0}],"isBlockCoverage":true},{"functionName":"Transform._read","ranges":[{"startOffset":6883,"endOffset":7254,"count":419},{"startOffset":6960,"endOffset":6979,"count":141},{"startOffset":6981,"endOffset":7087,"count":141},{"startOffset":7087,"endOffset":7252,"count":278}],"isBlockCoverage":true},{"functionName":"Transform._destroy","ranges":[{"startOffset":7287,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7393,"endOffset":7936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1628,"count":1}],"isBlockCoverage":true},{"functionName":"PassThrough","ranges":[{"startOffset":1401,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1574,"endOffset":1627,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3084,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":231,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":521,"endOffset":539,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":540,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":636,"endOffset":3062,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/readable-stream/lib/internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2416,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":137,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":468,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":572,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":668,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1423,"endOffset":1452,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":1453,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1505,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":1669,"endOffset":2389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/forEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4024,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":504,"endOffset":599,"count":4},{"startOffset":572,"endOffset":577,"count":1},{"startOffset":578,"endOffset":596,"count":3}],"isBlockCoverage":true},{"functionName":"eachLimit","ranges":[{"startOffset":3768,"endOffset":3929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/eachOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5746,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":825,"endOffset":920,"count":7},{"startOffset":893,"endOffset":898,"count":1},{"startOffset":899,"endOffset":917,"count":6}],"isBlockCoverage":true},{"functionName":"eachOfArrayLike","ranges":[{"startOffset":973,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"eachOfGeneric","ranges":[{"startOffset":1753,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"eachOf","ranges":[{"startOffset":5425,"endOffset":5654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":282,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":113,"endOffset":245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/breakLoop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":255,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/eachOfLimit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1637,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":414,"endOffset":509,"count":3},{"startOffset":482,"endOffset":487,"count":1},{"startOffset":488,"endOffset":506,"count":2}],"isBlockCoverage":true},{"functionName":"eachOfLimit","ranges":[{"startOffset":1387,"endOffset":1540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/eachOfLimit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2641,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":628,"endOffset":723,"count":5},{"startOffset":696,"endOffset":701,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":743,"endOffset":2602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":365,"count":1}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":106,"endOffset":328,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1463,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":333,"endOffset":428,"count":2},{"startOffset":401,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"createArrayIterator","ranges":[{"startOffset":430,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"createES2015Iterator","ranges":[{"startOffset":611,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectIterator","ranges":[{"startOffset":839,"endOffset":1162,"count":0}],"isBlockCoverage":false},{"functionName":"createIterator","ranges":[{"startOffset":1164,"endOffset":1426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/getIterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":101,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/onlyOnce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":363,"count":1}],"isBlockCoverage":true},{"functionName":"onlyOnce","ranges":[{"startOffset":110,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/wrapAsync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":262,"endOffset":357,"count":1},{"startOffset":330,"endOffset":335,"count":0}],"isBlockCoverage":true},{"functionName":"isAsync","ranges":[{"startOffset":359,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncGenerator","ranges":[{"startOffset":440,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncIterable","ranges":[{"startOffset":531,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAsync","ranges":[{"startOffset":626,"endOffset":810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/asyncify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3739,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":411,"endOffset":506,"count":2},{"startOffset":479,"endOffset":484,"count":1},{"startOffset":485,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"asyncify","ranges":[{"startOffset":2555,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"handlePromise","ranges":[{"startOffset":3272,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"invokeCallback","ranges":[{"startOffset":3502,"endOffset":3702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/initialParams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":101,"endOffset":253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/setImmediate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1},{"startOffset":678,"endOffset":824,"count":0}],"isBlockCoverage":true},{"functionName":"fallback","ranges":[{"startOffset":480,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":530,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":564,"endOffset":605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/asyncEachOfLimit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1979,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":287,"endOffset":292,"count":0}],"isBlockCoverage":true},{"functionName":"asyncEachOfLimit","ranges":[{"startOffset":340,"endOffset":1942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/awaitify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":796,"count":1}],"isBlockCoverage":true},{"functionName":"awaitify","ranges":[{"startOffset":199,"endOffset":759,"count":3},{"startOffset":268,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"awaitable","ranges":[{"startOffset":311,"endOffset":734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/async/internal/withoutIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"_withoutIndex","ranges":[{"startOffset":115,"endOffset":217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/is-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":32,"endOffset":127,"count":3}],"isBlockCoverage":true},{"functionName":"isStream.writable","ranges":[{"startOffset":150,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"isStream.readable","ranges":[{"startOffset":316,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"isStream.duplex","ranges":[{"startOffset":479,"endOffset":545,"count":0}],"isBlockCoverage":false},{"functionName":"isStream.transform","ranges":[{"startOffset":569,"endOffset":647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/exception-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6909,"count":1}],"isBlockCoverage":true},{"functionName":"ExceptionHandler","ranges":[{"startOffset":650,"endOffset":824,"count":1},{"startOffset":689,"endOffset":762,"count":0}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":969,"endOffset":1302,"count":0}],"isBlockCoverage":false},{"functionName":"unhandle","ranges":[{"startOffset":1489,"endOffset":1728,"count":0}],"isBlockCoverage":false},{"functionName":"getAllInfo","ranges":[{"startOffset":1890,"endOffset":2469,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessInfo","ranges":[{"startOffset":2617,"endOffset":2948,"count":0}],"isBlockCoverage":false},{"functionName":"getOsInfo","ranges":[{"startOffset":3091,"endOffset":3183,"count":0}],"isBlockCoverage":false},{"functionName":"getTrace","ranges":[{"startOffset":3357,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"_addHandler","ranges":[{"startOffset":3907,"endOffset":4145,"count":0}],"isBlockCoverage":false},{"functionName":"_uncaughtException","ranges":[{"startOffset":4359,"endOffset":6287,"count":0}],"isBlockCoverage":false},{"functionName":"_getExceptionHandlers","ranges":[{"startOffset":6483,"endOffset":6905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":223,"count":1},{"startOffset":115,"endOffset":165,"count":0}],"isBlockCoverage":true}]},{"scriptId":"660","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/node/development.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"dev","ranges":[{"startOffset":303,"endOffset":639,"count":3},{"startOffset":404,"endOffset":420,"count":0},{"startOffset":607,"endOffset":638,"count":0}],"isBlockCoverage":true}]},{"scriptId":"661","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/diagnostics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4518,"count":1}],"isBlockCoverage":true},{"functionName":"devnull","ranges":[{"startOffset":276,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":514,"endOffset":629,"count":1},{"startOffset":572,"endOffset":585,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":725,"endOffset":768,"count":1}],"isBlockCoverage":true},{"functionName":"enabled","ranges":[{"startOffset":1007,"endOffset":1758,"count":3},{"startOffset":1129,"endOffset":1183,"count":0},{"startOffset":1217,"endOffset":1229,"count":0},{"startOffset":1269,"endOffset":1757,"count":0}],"isBlockCoverage":true},{"functionName":"pinky","ranges":[{"startOffset":1546,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"modify","ranges":[{"startOffset":1930,"endOffset":2035,"count":1},{"startOffset":1982,"endOffset":1995,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2203,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":2436,"endOffset":2594,"count":0}],"isBlockCoverage":false},{"functionName":"introduce","ranges":[{"startOffset":2806,"endOffset":3004,"count":3},{"startOffset":2913,"endOffset":2988,"count":24}],"isBlockCoverage":true},{"functionName":"nope","ranges":[{"startOffset":3102,"endOffset":3300,"count":3}],"isBlockCoverage":true},{"functionName":"diagnopes","ranges":[{"startOffset":3243,"endOffset":3287,"count":7}],"isBlockCoverage":true},{"functionName":"yep","ranges":[{"startOffset":3486,"endOffset":3959,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4197,"endOffset":4517,"count":1}],"isBlockCoverage":true}]},{"scriptId":"662","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/modifiers/namespace-ansi.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"ansiModifier","ranges":[{"startOffset":322,"endOffset":554,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/colorspace/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true},{"functionName":"colorspace","ranges":[{"startOffset":419,"endOffset":738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11119,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":445,"endOffset":543,"count":15}],"isBlockCoverage":true},{"functionName":"Color","ranges":[{"startOffset":567,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2942,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2994,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":3051,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"percentString","ranges":[{"startOffset":3338,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"array","ranges":[{"startOffset":3564,"endOffset":3662,"count":0}],"isBlockCoverage":false},{"functionName":"object","ranges":[{"startOffset":3674,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"unitArray","ranges":[{"startOffset":3977,"endOffset":4147,"count":0}],"isBlockCoverage":false},{"functionName":"unitObject","ranges":[{"startOffset":4163,"endOffset":4335,"count":0}],"isBlockCoverage":false},{"functionName":"round","ranges":[{"startOffset":4346,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"alpha","ranges":[{"startOffset":4506,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4837,"endOffset":4889,"count":0}],"isBlockCoverage":false},{"functionName":"keyword","ranges":[{"startOffset":5604,"endOffset":5730,"count":0}],"isBlockCoverage":false},{"functionName":"hex","ranges":[{"startOffset":5739,"endOffset":5870,"count":0}],"isBlockCoverage":false},{"functionName":"rgbNumber","ranges":[{"startOffset":5885,"endOffset":6008,"count":0}],"isBlockCoverage":false},{"functionName":"luminosity","ranges":[{"startOffset":6024,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"contrast","ranges":[{"startOffset":6380,"endOffset":6628,"count":0}],"isBlockCoverage":false},{"functionName":"level","ranges":[{"startOffset":6639,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"isDark","ranges":[{"startOffset":6815,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"isLight","ranges":[{"startOffset":7032,"endOffset":7073,"count":0}],"isBlockCoverage":false},{"functionName":"negate","ranges":[{"startOffset":7085,"endOffset":7213,"count":0}],"isBlockCoverage":false},{"functionName":"lighten","ranges":[{"startOffset":7226,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"darken","ranges":[{"startOffset":7337,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"saturate","ranges":[{"startOffset":7450,"endOffset":7549,"count":0}],"isBlockCoverage":false},{"functionName":"desaturate","ranges":[{"startOffset":7565,"endOffset":7664,"count":0}],"isBlockCoverage":false},{"functionName":"whiten","ranges":[{"startOffset":7676,"endOffset":7775,"count":0}],"isBlockCoverage":false},{"functionName":"blacken","ranges":[{"startOffset":7788,"endOffset":7887,"count":0}],"isBlockCoverage":false},{"functionName":"grayscale","ranges":[{"startOffset":7902,"endOffset":8115,"count":0}],"isBlockCoverage":false},{"functionName":"fade","ranges":[{"startOffset":8125,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"opaquer","ranges":[{"startOffset":8217,"endOffset":8296,"count":0}],"isBlockCoverage":false},{"functionName":"rotate","ranges":[{"startOffset":8308,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"mix","ranges":[{"startOffset":8492,"endOffset":9297,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9383,"endOffset":10089,"count":15},{"startOffset":9444,"endOffset":9458,"count":3},{"startOffset":9458,"endOffset":10088,"count":12}],"isBlockCoverage":true},{"functionName":"Color.<computed>","ranges":[{"startOffset":9551,"endOffset":9883,"count":0}],"isBlockCoverage":false},{"functionName":"Color.<computed>","ranges":[{"startOffset":9936,"endOffset":10086,"count":0}],"isBlockCoverage":false},{"functionName":"roundTo","ranges":[{"startOffset":10093,"endOffset":10163,"count":0}],"isBlockCoverage":false},{"functionName":"roundToPlace","ranges":[{"startOffset":10165,"endOffset":10258,"count":0}],"isBlockCoverage":false},{"functionName":"getset","ranges":[{"startOffset":10260,"endOffset":10783,"count":22},{"startOffset":10334,"endOffset":10341,"count":1},{"startOffset":10342,"endOffset":10351,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10369,"endOffset":10445,"count":26},{"startOffset":10399,"endOffset":10420,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10477,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"maxfn","ranges":[{"startOffset":10785,"endOffset":10875,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10815,"endOffset":10872,"count":0}],"isBlockCoverage":false},{"functionName":"assertArray","ranges":[{"startOffset":10877,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"zeroArray","ranges":[{"startOffset":10950,"endOffset":11093,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5716,"count":1},{"startOffset":254,"endOffset":347,"count":148}],"isBlockCoverage":true},{"functionName":"cs.get","ranges":[{"startOffset":408,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"cs.get.rgb","ranges":[{"startOffset":820,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"cs.get.hsl","ranges":[{"startOffset":2790,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"cs.get.hwb","ranges":[{"startOffset":3371,"endOffset":3926,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.hex","ranges":[{"startOffset":3941,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.rgb","ranges":[{"startOffset":4163,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.rgb.percent","ranges":[{"startOffset":4488,"endOffset":4815,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.hsl","ranges":[{"startOffset":4830,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.hwb","ranges":[{"startOffset":5215,"endOffset":5421,"count":0}],"isBlockCoverage":false},{"functionName":"cs.to.keyword","ranges":[{"startOffset":5440,"endOffset":5497,"count":0}],"isBlockCoverage":false},{"functionName":"clamp","ranges":[{"startOffset":5511,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"hexDouble","ranges":[{"startOffset":5589,"endOffset":5715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4617,"count":1}],"isBlockCoverage":true}]},{"scriptId":"667","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/simple-swizzle/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"swizzle","ranges":[{"startOffset":161,"endOffset":475,"count":0}],"isBlockCoverage":false},{"functionName":"swizzle.wrap","ranges":[{"startOffset":493,"endOffset":569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/is-arrayish/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":318,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayish","ranges":[{"startOffset":17,"endOffset":316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color/node_modules/color-convert/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"wrapRaw","ranges":[{"startOffset":136,"endOffset":509,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":176,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRounded","ranges":[{"startOffset":511,"endOffset":1187,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":555,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1204,"endOffset":1695,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1541,"endOffset":1691,"count":210}],"isBlockCoverage":true}]},{"scriptId":"670","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color/node_modules/color-convert/conversions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16850,"count":1},{"startOffset":312,"endOffset":401,"count":148},{"startOffset":1111,"endOffset":1793,"count":15},{"startOffset":1190,"endOffset":1254,"count":0},{"startOffset":1293,"endOffset":1363,"count":0},{"startOffset":1429,"endOffset":1501,"count":0}],"isBlockCoverage":true},{"functionName":"convert.rgb.hsl","ranges":[{"startOffset":1813,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hsv","ranges":[{"startOffset":2453,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hwb","ranges":[{"startOffset":3122,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.cmyk","ranges":[{"startOffset":3376,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"comparativeDistance","ranges":[{"startOffset":3776,"endOffset":3913,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.keyword","ranges":[{"startOffset":3937,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"convert.keyword.rgb","ranges":[{"startOffset":4543,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.xyz","ranges":[{"startOffset":4616,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.lab","ranges":[{"startOffset":5152,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.rgb","ranges":[{"startOffset":5624,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hsv","ranges":[{"startOffset":6304,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.rgb","ranges":[{"startOffset":6660,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hsl","ranges":[{"startOffset":7143,"endOffset":7437,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.rgb","ranges":[{"startOffset":7507,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"convert.cmyk.rgb","ranges":[{"startOffset":8228,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.rgb","ranges":[{"startOffset":8544,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.lab","ranges":[{"startOffset":9231,"endOffset":9649,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.xyz","ranges":[{"startOffset":9670,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.lch","ranges":[{"startOffset":10132,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lch.lab","ranges":[{"startOffset":10383,"endOffset":10573,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi16","ranges":[{"startOffset":10597,"endOffset":11000,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.ansi16","ranges":[{"startOffset":11024,"endOffset":11199,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi256","ranges":[{"startOffset":11224,"endOffset":11712,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi16.rgb","ranges":[{"startOffset":11736,"endOffset":12128,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi256.rgb","ranges":[{"startOffset":12153,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hex","ranges":[{"startOffset":12461,"endOffset":12709,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hex.rgb","ranges":[{"startOffset":12730,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hcg","ranges":[{"startOffset":13189,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hcg","ranges":[{"startOffset":13783,"endOffset":14037,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hcg","ranges":[{"startOffset":14058,"endOffset":14233,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.rgb","ranges":[{"startOffset":14254,"endOffset":14993,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsv","ranges":[{"startOffset":15014,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsl","ranges":[{"startOffset":15210,"endOffset":15469,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hwb","ranges":[{"startOffset":15490,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.hcg","ranges":[{"startOffset":15651,"endOffset":15839,"count":0}],"isBlockCoverage":false},{"functionName":"convert.apple.rgb","ranges":[{"startOffset":15862,"endOffset":15970,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.apple","ranges":[{"startOffset":15993,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.rgb","ranges":[{"startOffset":16115,"endOffset":16207,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hsl.convert.gray.hsv","ranges":[{"startOffset":16248,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hwb","ranges":[{"startOffset":16314,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.cmyk","ranges":[{"startOffset":16383,"endOffset":16430,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.lab","ranges":[{"startOffset":16452,"endOffset":16496,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hex","ranges":[{"startOffset":16518,"endOffset":16738,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.gray","ranges":[{"startOffset":16760,"endOffset":16848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color/node_modules/color-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4617,"count":1}],"isBlockCoverage":true}]},{"scriptId":"672","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/color/node_modules/color-convert/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"buildGraph","ranges":[{"startOffset":389,"endOffset":741,"count":15},{"startOffset":583,"endOffset":723,"count":225}],"isBlockCoverage":true},{"functionName":"deriveBFS","ranges":[{"startOffset":797,"endOffset":1337,"count":15},{"startOffset":965,"endOffset":1319,"count":225},{"startOffset":1106,"endOffset":1316,"count":660},{"startOffset":1201,"endOffset":1312,"count":210}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1339,"endOffset":1421,"count":210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1373,"endOffset":1418,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConversion","ranges":[{"startOffset":1423,"endOffset":1786,"count":210}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1805,"endOffset":2224,"count":15},{"startOffset":1972,"endOffset":2201,"count":225},{"startOffset":2059,"endOffset":2141,"count":15},{"startOffset":2141,"endOffset":2201,"count":210}],"isBlockCoverage":true}]},{"scriptId":"673","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/text-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":477,"count":1}],"isBlockCoverage":true},{"functionName":"hex","ranges":[{"startOffset":168,"endOffset":475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/kuler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2557,"count":1}],"isBlockCoverage":true},{"functionName":"Kuler","ranges":[{"startOffset":211,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"hex","ranges":[{"startOffset":654,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"rgb","ranges":[{"startOffset":1455,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"ansi","ranges":[{"startOffset":1840,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":2121,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"style","ranges":[{"startOffset":2355,"endOffset":2491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/adapters/process.env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"processenv","ranges":[{"startOffset":138,"endOffset":218,"count":3}],"isBlockCoverage":true}]},{"scriptId":"676","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/adapters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":199,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"adapter","ranges":[{"startOffset":230,"endOffset":397,"count":3},{"startOffset":315,"endOffset":396,"count":0}],"isBlockCoverage":true}]},{"scriptId":"677","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/enabled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":770,"count":1}],"isBlockCoverage":true},{"functionName":"enabled","ranges":[{"startOffset":295,"endOffset":768,"count":3},{"startOffset":360,"endOffset":767,"count":0}],"isBlockCoverage":true}]},{"scriptId":"678","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/@dabh/diagnostics/logger/console.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":515,"endOffset":743,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/one-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1027,"count":1}],"isBlockCoverage":true},{"functionName":"one","ranges":[{"startOffset":277,"endOffset":1025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/fn.name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":988,"count":1}],"isBlockCoverage":true},{"functionName":"name","ranges":[{"startOffset":245,"endOffset":986,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/stack-trace/lib/stack-trace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3385,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":14,"endOffset":480,"count":0}],"isBlockCoverage":false},{"functionName":"exports.parse","ranges":[{"startOffset":499,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"CallSite","ranges":[{"startOffset":2511,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2890,"endOffset":3076,"count":9}],"isBlockCoverage":true},{"functionName":"CallSite.<computed>","ranges":[{"startOffset":3030,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3102,"endOffset":3288,"count":4}],"isBlockCoverage":true},{"functionName":"CallSite.<computed>","ranges":[{"startOffset":3242,"endOffset":3286,"count":0}],"isBlockCoverage":false},{"functionName":"exports._createParsedCallSite","ranges":[{"startOffset":3324,"endOffset":3383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/exception-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1506,"count":1}],"isBlockCoverage":true},{"functionName":"ExceptionStream","ranges":[{"startOffset":589,"endOffset":978,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1354,"endOffset":1502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/rejection-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6982,"count":1}],"isBlockCoverage":true},{"functionName":"RejectionHandler","ranges":[{"startOffset":651,"endOffset":825,"count":1},{"startOffset":690,"endOffset":763,"count":0}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":971,"endOffset":1306,"count":0}],"isBlockCoverage":false},{"functionName":"unhandle","ranges":[{"startOffset":1494,"endOffset":1740,"count":0}],"isBlockCoverage":false},{"functionName":"getAllInfo","ranges":[{"startOffset":1902,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessInfo","ranges":[{"startOffset":2628,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"getOsInfo","ranges":[{"startOffset":3102,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getTrace","ranges":[{"startOffset":3368,"endOffset":3738,"count":0}],"isBlockCoverage":false},{"functionName":"_addHandler","ranges":[{"startOffset":3918,"endOffset":4156,"count":0}],"isBlockCoverage":false},{"functionName":"_unhandledRejection","ranges":[{"startOffset":4370,"endOffset":6360,"count":0}],"isBlockCoverage":false},{"functionName":"_getRejectionHandlers","ranges":[{"startOffset":6556,"endOffset":6978,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston-transport/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3836,"count":1}],"isBlockCoverage":true},{"functionName":"LegacyTransportStream","ranges":[{"startOffset":508,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1840,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":2658,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"_deprecated","ranges":[{"startOffset":3155,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3591,"endOffset":3834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston-transport/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6996,"count":1}],"isBlockCoverage":true},{"functionName":"TransportStream","ranges":[{"startOffset":746,"endOffset":2151,"count":3},{"startOffset":1089,"endOffset":1112,"count":0},{"startOffset":1133,"endOffset":1158,"count":0},{"startOffset":1180,"endOffset":1207,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1284,"endOffset":1643,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1733,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":2554,"endOffset":3801,"count":423},{"startOffset":2639,"endOffset":2664,"count":0},{"startOffset":2667,"endOffset":2699,"count":0},{"startOffset":2983,"endOffset":3020,"count":141},{"startOffset":3087,"endOffset":3738,"count":149},{"startOffset":3119,"endOffset":3165,"count":0},{"startOffset":3487,"endOffset":3528,"count":0},{"startOffset":3564,"endOffset":3689,"count":0},{"startOffset":3738,"endOffset":3800,"count":274}],"isBlockCoverage":true},{"functionName":"_writev","ranges":[{"startOffset":4162,"endOffset":5514,"count":0}],"isBlockCoverage":false},{"functionName":"_accept","ranges":[{"startOffset":5944,"endOffset":6698,"count":0}],"isBlockCoverage":false},{"functionName":"_nop","ranges":[{"startOffset":6821,"endOffset":6908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/profiler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1279,"count":1}],"isBlockCoverage":true},{"functionName":"Profiler","ranges":[{"startOffset":480,"endOffset":646,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":847,"endOffset":1275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/container.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3361,"count":1}],"isBlockCoverage":true},{"functionName":"Container","ranges":[{"startOffset":554,"endOffset":643,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":976,"endOffset":1738,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2071,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2374,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2658,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"_removeLogger","ranges":[{"startOffset":2949,"endOffset":3109,"count":0}],"isBlockCoverage":false},{"functionName":"_delete","ranges":[{"startOffset":3311,"endOffset":3357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":983,"count":1}],"isBlockCoverage":true},{"functionName":"replacer","ranges":[{"startOffset":252,"endOffset":580,"count":423},{"startOffset":538,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":817,"endOffset":980,"count":141}],"isBlockCoverage":true}]},{"scriptId":"689","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/safe-stable-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19368,"count":1}],"isBlockCoverage":true},{"functionName":"strEscape","ranges":[{"startOffset":761,"endOffset":986,"count":564},{"startOffset":928,"endOffset":955,"count":548},{"startOffset":955,"endOffset":985,"count":16}],"isBlockCoverage":true},{"functionName":"insertSort","ranges":[{"startOffset":988,"endOffset":1513,"count":290},{"startOffset":1196,"endOffset":1225,"count":0},{"startOffset":1267,"endOffset":1496,"count":439},{"startOffset":1389,"endOffset":1457,"count":290}],"isBlockCoverage":true},{"functionName":"isTypedArrayWithEntries","ranges":[{"startOffset":1725,"endOffset":1866,"count":290},{"startOffset":1843,"endOffset":1864,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyTypedArray","ranges":[{"startOffset":1868,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"getCircularValueOption","ranges":[{"startOffset":2226,"endOffset":2861,"count":142},{"startOffset":2323,"endOffset":2835,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2613,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"getBooleanOption","ranges":[{"startOffset":2863,"endOffset":3154,"count":284},{"startOffset":2959,"endOffset":3108,"count":0},{"startOffset":3145,"endOffset":3152,"count":0}],"isBlockCoverage":true},{"functionName":"getPositiveIntegerOption","ranges":[{"startOffset":3156,"endOffset":3661,"count":284},{"startOffset":3260,"endOffset":3611,"count":0},{"startOffset":3652,"endOffset":3659,"count":0}],"isBlockCoverage":true},{"functionName":"getItemCount","ranges":[{"startOffset":3663,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"getUniqueReplacerSet","ranges":[{"startOffset":3772,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOption","ranges":[{"startOffset":4028,"endOffset":4529,"count":142},{"startOffset":4111,"endOffset":4527,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4295,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"configure","ranges":[{"startOffset":4531,"endOffset":19367,"count":142},{"startOffset":4641,"endOffset":4804,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyFnReplacer","ranges":[{"startOffset":5134,"endOffset":8791,"count":423},{"startOffset":5280,"endOffset":5297,"count":141},{"startOffset":5298,"endOffset":5335,"count":141},{"startOffset":5337,"endOffset":5376,"count":0},{"startOffset":5458,"endOffset":5504,"count":282},{"startOffset":5511,"endOffset":8395,"count":141},{"startOffset":5556,"endOffset":5591,"count":0},{"startOffset":5633,"endOffset":5675,"count":0},{"startOffset":5804,"endOffset":7004,"count":0},{"startOffset":7111,"endOffset":7144,"count":0},{"startOffset":7190,"endOffset":7231,"count":0},{"startOffset":7314,"endOffset":7421,"count":0},{"startOffset":7700,"endOffset":7980,"count":282},{"startOffset":8021,"endOffset":8213,"count":0},{"startOffset":8240,"endOffset":8263,"count":0},{"startOffset":8265,"endOffset":8341,"count":0},{"startOffset":8402,"endOffset":8493,"count":0},{"startOffset":8500,"endOffset":8564,"count":0},{"startOffset":8571,"endOffset":8613,"count":0},{"startOffset":8620,"endOffset":8697,"count":0},{"startOffset":8727,"endOffset":8781,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyArrayReplacer","ranges":[{"startOffset":8795,"endOffset":11693,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyIndent","ranges":[{"startOffset":11697,"endOffset":15405,"count":0}],"isBlockCoverage":false},{"functionName":"stringifySimple","ranges":[{"startOffset":15409,"endOffset":18589,"count":596},{"startOffset":15490,"endOffset":15536,"count":0},{"startOffset":15543,"endOffset":18193,"count":149},{"startOffset":15588,"endOffset":15623,"count":0},{"startOffset":15672,"endOffset":15942,"count":0},{"startOffset":15984,"endOffset":16026,"count":0},{"startOffset":16084,"endOffset":16970,"count":0},{"startOffset":17077,"endOffset":17110,"count":0},{"startOffset":17156,"endOffset":17197,"count":0},{"startOffset":17348,"endOffset":17547,"count":0},{"startOffset":17710,"endOffset":17946,"count":447},{"startOffset":17837,"endOffset":17936,"count":0},{"startOffset":17987,"endOffset":18139,"count":0},{"startOffset":18200,"endOffset":18291,"count":0},{"startOffset":18298,"endOffset":18362,"count":0},{"startOffset":18369,"endOffset":18411,"count":447},{"startOffset":18418,"endOffset":18495,"count":0},{"startOffset":18525,"endOffset":18579,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":18593,"endOffset":19345,"count":290},{"startOffset":18669,"endOffset":19299,"count":141},{"startOffset":18730,"endOffset":18788,"count":0},{"startOffset":18825,"endOffset":18870,"count":0},{"startOffset":19038,"endOffset":19186,"count":0},{"startOffset":19194,"endOffset":19293,"count":0},{"startOffset":19299,"endOffset":19344,"count":149}],"isBlockCoverage":true}]},{"scriptId":"690","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1196,"count":1}],"isBlockCoverage":true}]},{"scriptId":"691","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/oracledb.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41388,"count":1},{"startOffset":1829,"endOffset":1860,"count":0}],"isBlockCoverage":true},{"functionName":"_initCLib","ranges":[{"startOffset":2883,"endOffset":4764,"count":0}],"isBlockCoverage":false},{"functionName":"_initializeThinDriver","ranges":[{"startOffset":4790,"endOffset":4847,"count":1}],"isBlockCoverage":true},{"functionName":"_isPrivilege","ranges":[{"startOffset":5102,"endOffset":5424,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyOptions","ranges":[{"startOffset":5763,"endOffset":19270,"count":43},{"startOffset":6173,"endOffset":6381,"count":0},{"startOffset":6738,"endOffset":6899,"count":0},{"startOffset":7294,"endOffset":7459,"count":0},{"startOffset":7542,"endOffset":7707,"count":0},{"startOffset":7776,"endOffset":7913,"count":0},{"startOffset":8003,"endOffset":8192,"count":0},{"startOffset":8323,"endOffset":8481,"count":0},{"startOffset":8549,"endOffset":8683,"count":0},{"startOffset":8756,"endOffset":8933,"count":0},{"startOffset":9006,"endOffset":9151,"count":0},{"startOffset":9242,"endOffset":9411,"count":0},{"startOffset":9505,"endOffset":9679,"count":0},{"startOffset":9773,"endOffset":9959,"count":0},{"startOffset":10033,"endOffset":10182,"count":0},{"startOffset":10274,"endOffset":10468,"count":0},{"startOffset":10550,"endOffset":10722,"count":0},{"startOffset":10804,"endOffset":10978,"count":0},{"startOffset":11070,"endOffset":11262,"count":0},{"startOffset":11372,"endOffset":11609,"count":0},{"startOffset":11693,"endOffset":11866,"count":0},{"startOffset":11935,"endOffset":12071,"count":0},{"startOffset":12162,"endOffset":12343,"count":0},{"startOffset":12398,"endOffset":16249,"count":0},{"startOffset":16337,"endOffset":16498,"count":0},{"startOffset":16598,"endOffset":16745,"count":0},{"startOffset":16836,"endOffset":17028,"count":0},{"startOffset":17129,"endOffset":17341,"count":0},{"startOffset":17413,"endOffset":19042,"count":0},{"startOffset":19140,"endOffset":19183,"count":0},{"startOffset":19185,"endOffset":19246,"count":0}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":19525,"endOffset":21941,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":22225,"endOffset":23386,"count":43},{"startOffset":22433,"endOffset":22472,"count":0},{"startOffset":22506,"endOffset":22531,"count":0},{"startOffset":22673,"endOffset":22837,"count":0},{"startOffset":23130,"endOffset":23164,"count":1}],"isBlockCoverage":true},{"functionName":"getPool","ranges":[{"startOffset":23603,"endOffset":23995,"count":0}],"isBlockCoverage":false},{"functionName":"initOracleClient","ranges":[{"startOffset":24216,"endOffset":25631,"count":0}],"isBlockCoverage":false},{"functionName":"shutdown","ranges":[{"startOffset":25839,"endOffset":27006,"count":0}],"isBlockCoverage":false},{"functionName":"startup","ranges":[{"startOffset":27212,"endOffset":28360,"count":0}],"isBlockCoverage":false},{"functionName":"get autoCommit","ranges":[{"startOffset":35908,"endOffset":35962,"count":0}],"isBlockCoverage":false},{"functionName":"get connectionClass","ranges":[{"startOffset":35967,"endOffset":36031,"count":0}],"isBlockCoverage":false},{"functionName":"get dbObjectAsPojo","ranges":[{"startOffset":36036,"endOffset":36098,"count":0}],"isBlockCoverage":false},{"functionName":"get edition","ranges":[{"startOffset":36103,"endOffset":36151,"count":0}],"isBlockCoverage":false},{"functionName":"get errorOnConcurrentExecute","ranges":[{"startOffset":36156,"endOffset":36238,"count":0}],"isBlockCoverage":false},{"functionName":"get events","ranges":[{"startOffset":36243,"endOffset":36289,"count":0}],"isBlockCoverage":false},{"functionName":"get externalAuth","ranges":[{"startOffset":36294,"endOffset":36352,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchArraySize","ranges":[{"startOffset":36357,"endOffset":36419,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchAsBuffer","ranges":[{"startOffset":36424,"endOffset":36484,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchAsString","ranges":[{"startOffset":36489,"endOffset":36549,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchTypeHandler","ranges":[{"startOffset":36554,"endOffset":36620,"count":0}],"isBlockCoverage":false},{"functionName":"get lobPrefetchSize","ranges":[{"startOffset":36625,"endOffset":36689,"count":0}],"isBlockCoverage":false},{"functionName":"get maxRows","ranges":[{"startOffset":36694,"endOffset":36742,"count":0}],"isBlockCoverage":false},{"functionName":"get oracleClientVersion","ranges":[{"startOffset":36747,"endOffset":36819,"count":0}],"isBlockCoverage":false},{"functionName":"get oracleClientVersionString","ranges":[{"startOffset":36824,"endOffset":36908,"count":0}],"isBlockCoverage":false},{"functionName":"get outFormat","ranges":[{"startOffset":36913,"endOffset":36965,"count":0}],"isBlockCoverage":false},{"functionName":"get poolIncrement","ranges":[{"startOffset":36970,"endOffset":37030,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMax","ranges":[{"startOffset":37035,"endOffset":37083,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMaxPerShard","ranges":[{"startOffset":37088,"endOffset":37152,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMin","ranges":[{"startOffset":37157,"endOffset":37205,"count":0}],"isBlockCoverage":false},{"functionName":"get poolPingInterval","ranges":[{"startOffset":37210,"endOffset":37276,"count":0}],"isBlockCoverage":false},{"functionName":"get poolTimeout","ranges":[{"startOffset":37281,"endOffset":37337,"count":0}],"isBlockCoverage":false},{"functionName":"get prefetchRows","ranges":[{"startOffset":37342,"endOffset":37400,"count":0}],"isBlockCoverage":false},{"functionName":"get stmtCacheSize","ranges":[{"startOffset":37405,"endOffset":37465,"count":0}],"isBlockCoverage":false},{"functionName":"get thin","ranges":[{"startOffset":37470,"endOffset":37512,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":37517,"endOffset":37646,"count":0}],"isBlockCoverage":false},{"functionName":"get versionString","ranges":[{"startOffset":37651,"endOffset":37713,"count":0}],"isBlockCoverage":false},{"functionName":"get versionSuffix","ranges":[{"startOffset":37718,"endOffset":37780,"count":0}],"isBlockCoverage":false},{"functionName":"set autoCommit","ranges":[{"startOffset":37807,"endOffset":37937,"count":1}],"isBlockCoverage":true},{"functionName":"set connectionClass","ranges":[{"startOffset":37942,"endOffset":38086,"count":0}],"isBlockCoverage":false},{"functionName":"set dbObjectAsPojo","ranges":[{"startOffset":38091,"endOffset":38233,"count":0}],"isBlockCoverage":false},{"functionName":"set edition","ranges":[{"startOffset":38238,"endOffset":38358,"count":0}],"isBlockCoverage":false},{"functionName":"set errorOnConcurrentExecute","ranges":[{"startOffset":38363,"endOffset":38541,"count":0}],"isBlockCoverage":false},{"functionName":"set events","ranges":[{"startOffset":38546,"endOffset":38664,"count":0}],"isBlockCoverage":false},{"functionName":"set externalAuth","ranges":[{"startOffset":38669,"endOffset":38805,"count":0}],"isBlockCoverage":false},{"functionName":"set fetchArraySize","ranges":[{"startOffset":38810,"endOffset":38968,"count":0}],"isBlockCoverage":false},{"functionName":"set fetchAsBuffer","ranges":[{"startOffset":38973,"endOffset":39170,"count":0}],"isBlockCoverage":false},{"functionName":"set fetchAsString","ranges":[{"startOffset":39175,"endOffset":39372,"count":0}],"isBlockCoverage":false},{"functionName":"set fetchTypeHandler","ranges":[{"startOffset":39377,"endOffset":39565,"count":0}],"isBlockCoverage":false},{"functionName":"set lobPrefetchSize","ranges":[{"startOffset":39570,"endOffset":39732,"count":0}],"isBlockCoverage":false},{"functionName":"set maxRows","ranges":[{"startOffset":39737,"endOffset":39869,"count":0}],"isBlockCoverage":false},{"functionName":"set outFormat","ranges":[{"startOffset":39874,"endOffset":40106,"count":0}],"isBlockCoverage":false},{"functionName":"set poolIncrement","ranges":[{"startOffset":40111,"endOffset":40267,"count":0}],"isBlockCoverage":false},{"functionName":"set poolMax","ranges":[{"startOffset":40272,"endOffset":40404,"count":0}],"isBlockCoverage":false},{"functionName":"set poolMaxPerShard","ranges":[{"startOffset":40409,"endOffset":40571,"count":0}],"isBlockCoverage":false},{"functionName":"set poolMin","ranges":[{"startOffset":40576,"endOffset":40708,"count":0}],"isBlockCoverage":false},{"functionName":"set poolPingInterval","ranges":[{"startOffset":40713,"endOffset":40908,"count":0}],"isBlockCoverage":false},{"functionName":"set poolTimeout","ranges":[{"startOffset":40913,"endOffset":41063,"count":0}],"isBlockCoverage":false},{"functionName":"set prefetchRows","ranges":[{"startOffset":41068,"endOffset":41221,"count":0}],"isBlockCoverage":false},{"functionName":"set stmtCacheSize","ranges":[{"startOffset":41226,"endOffset":41382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5344,"count":1}],"isBlockCoverage":true}]},{"scriptId":"693","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1367,"count":1}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12085,"count":1},{"startOffset":1446,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"getInstallURL","ranges":[{"startOffset":2011,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"getInstallHelp","ranges":[{"startOffset":2257,"endOffset":5038,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5395,"endOffset":6268,"count":63},{"startOffset":6177,"endOffset":6248,"count":9}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":5442,"endOffset":6158,"count":241},{"startOffset":5783,"endOffset":6157,"count":0}],"isBlockCoverage":true},{"functionName":"stackCapture","ranges":[{"startOffset":5685,"endOffset":5775,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6018,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"stackCapture","ranges":[{"startOffset":6068,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6398,"endOffset":7189,"count":56}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6434,"endOffset":7186,"count":198},{"startOffset":6811,"endOffset":7114,"count":197},{"startOffset":7114,"endOffset":7182,"count":196}],"isBlockCoverage":true},{"functionName":"preventConcurrent","ranges":[{"startOffset":7191,"endOffset":7466,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7246,"endOffset":7463,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFns","ranges":[{"startOffset":7816,"endOffset":8325,"count":8},{"startOffset":7937,"endOffset":8008,"count":2},{"startOffset":8062,"endOffset":8323,"count":54},{"startOffset":8158,"endOffset":8267,"count":5},{"startOffset":8267,"endOffset":8319,"count":49}],"isBlockCoverage":true},{"functionName":"isArrayOfStrings","ranges":[{"startOffset":8327,"endOffset":8530,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":8532,"endOffset":8614,"count":56}],"isBlockCoverage":true},{"functionName":"isObjectOrArray","ranges":[{"startOffset":8616,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"isShardingKey","ranges":[{"startOffset":8733,"endOffset":9077,"count":0}],"isBlockCoverage":false},{"functionName":"isSodaDocument","ranges":[{"startOffset":9079,"endOffset":9168,"count":0}],"isBlockCoverage":false},{"functionName":"isXid","ranges":[{"startOffset":9170,"endOffset":9465,"count":0}],"isBlockCoverage":false},{"functionName":"verifySodaDoc","ranges":[{"startOffset":9467,"endOffset":9655,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenExpired","ranges":[{"startOffset":9657,"endOffset":10242,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenValid","ranges":[{"startOffset":10244,"endOffset":10847,"count":0}],"isBlockCoverage":false},{"functionName":"addTypeProperties","ranges":[{"startOffset":11295,"endOffset":11713,"count":40},{"startOffset":11519,"endOffset":11581,"count":0},{"startOffset":11593,"endOffset":11641,"count":0}],"isBlockCoverage":true}]},{"scriptId":"695","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35190,"count":1}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":23912,"endOffset":24048,"count":815},{"startOffset":23959,"endOffset":24046,"count":0}],"isBlockCoverage":true},{"functionName":"assertArgCount","ranges":[{"startOffset":24330,"endOffset":24495,"count":240}],"isBlockCoverage":true},{"functionName":"assertParamPropBool","ranges":[{"startOffset":24772,"endOffset":24966,"count":0}],"isBlockCoverage":false},{"functionName":"assertParamPropFunction","ranges":[{"startOffset":25239,"endOffset":25438,"count":0}],"isBlockCoverage":false},{"functionName":"assertParamPropInt","ranges":[{"startOffset":25715,"endOffset":25905,"count":0}],"isBlockCoverage":false},{"functionName":"assertParamPropUnsignedInt","ranges":[{"startOffset":26198,"endOffset":26418,"count":0}],"isBlockCoverage":false},{"functionName":"assertParamPropString","ranges":[{"startOffset":26689,"endOffset":26884,"count":0}],"isBlockCoverage":false},{"functionName":"assertParamPropValue","ranges":[{"startOffset":27159,"endOffset":27313,"count":141}],"isBlockCoverage":true},{"functionName":"assertParamValue","ranges":[{"startOffset":27567,"endOffset":27685,"count":192}],"isBlockCoverage":true},{"functionName":"assertPropValue","ranges":[{"startOffset":27938,"endOffset":28046,"count":1}],"isBlockCoverage":true},{"functionName":"getErr","ranges":[{"startOffset":28327,"endOffset":28821,"count":0}],"isBlockCoverage":false},{"functionName":"throwErr","ranges":[{"startOffset":29096,"endOffset":29151,"count":0}],"isBlockCoverage":false},{"functionName":"throwNotImplemented","ranges":[{"startOffset":29407,"endOffset":29490,"count":0}],"isBlockCoverage":false},{"functionName":"transformErr","ranges":[{"startOffset":29818,"endOffset":31227,"count":4},{"startOffset":29871,"endOffset":31094,"count":2},{"startOffset":30471,"endOffset":31084,"count":0},{"startOffset":31128,"endOffset":31211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"696","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":false}]},{"scriptId":"697","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2548,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":293,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":679,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":848,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":903,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":995,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1048,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1140,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1191,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1272,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1321,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1462,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1538,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1660,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1728,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":1893,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":1983,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2121,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2294,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2420,"endOffset":2494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12280,"count":1}],"isBlockCoverage":true},{"functionName":"DbType","ranges":[{"startOffset":1449,"endOffset":1922,"count":28},{"startOffset":1637,"endOffset":1641,"count":4},{"startOffset":1685,"endOffset":1689,"count":0},{"startOffset":1723,"endOffset":1727,"count":20},{"startOffset":1792,"endOffset":1796,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1926,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2081,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2142,"endOffset":2194,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeByColumnTypeName","ranges":[{"startOffset":2503,"endOffset":2692,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeByNum","ranges":[{"startOffset":2976,"endOffset":3132,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeByOraTypeNum","ranges":[{"startOffset":3487,"endOffset":3739,"count":40},{"startOffset":3558,"endOffset":3562,"count":30},{"startOffset":3649,"endOffset":3720,"count":0}],"isBlockCoverage":true}]},{"scriptId":"699","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2140,"count":1}],"isBlockCoverage":true}]},{"scriptId":"700","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/aqDeqOptions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7328,"count":1}],"isBlockCoverage":true},{"functionName":"getCondition","ranges":[{"startOffset":1470,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"getConsumerName","ranges":[{"startOffset":1815,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"getCorrelation","ranges":[{"startOffset":2164,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"getMode","ranges":[{"startOffset":2496,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"getMsgId","ranges":[{"startOffset":2821,"endOffset":2909,"count":0}],"isBlockCoverage":false},{"functionName":"getNavigation","ranges":[{"startOffset":3158,"endOffset":3251,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformation","ranges":[{"startOffset":3508,"endOffset":3609,"count":0}],"isBlockCoverage":false},{"functionName":"getVisibility","ranges":[{"startOffset":3858,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"getWait","ranges":[{"startOffset":4188,"endOffset":4269,"count":0}],"isBlockCoverage":false},{"functionName":"setCondition","ranges":[{"startOffset":4513,"endOffset":4604,"count":0}],"isBlockCoverage":false},{"functionName":"setConsumerName","ranges":[{"startOffset":4855,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"setCorrelation","ranges":[{"startOffset":5201,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"setMode","ranges":[{"startOffset":5530,"endOffset":5611,"count":0}],"isBlockCoverage":false},{"functionName":"setMsgId","ranges":[{"startOffset":5852,"endOffset":5940,"count":0}],"isBlockCoverage":false},{"functionName":"setNavigation","ranges":[{"startOffset":6186,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"setTransformation","ranges":[{"startOffset":6533,"endOffset":6634,"count":0}],"isBlockCoverage":false},{"functionName":"setVisibility","ranges":[{"startOffset":6880,"endOffset":6973,"count":0}],"isBlockCoverage":false},{"functionName":"setWait","ranges":[{"startOffset":7207,"endOffset":7288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/aqEnqOptions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3358,"count":1}],"isBlockCoverage":true},{"functionName":"getDeliveryMode","ranges":[{"startOffset":1477,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformation","ranges":[{"startOffset":1832,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"getVisibility","ranges":[{"startOffset":2182,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"setDeliveryMode","ranges":[{"startOffset":2526,"endOffset":2624,"count":0}],"isBlockCoverage":false},{"functionName":"setTransformation","ranges":[{"startOffset":2878,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"setVisibility","ranges":[{"startOffset":3225,"endOffset":3318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/aqMessage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4919,"count":1}],"isBlockCoverage":true},{"functionName":"getCorrelation","ranges":[{"startOffset":1475,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"getDelay","ranges":[{"startOffset":1799,"endOffset":1874,"count":0}],"isBlockCoverage":false},{"functionName":"getDeliveryMode","ranges":[{"startOffset":2126,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"getExceptionQueue","ranges":[{"startOffset":2472,"endOffset":2566,"count":0}],"isBlockCoverage":false},{"functionName":"getExpiration","ranges":[{"startOffset":2813,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"getMsgId","ranges":[{"startOffset":3140,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"getNumAttempts","ranges":[{"startOffset":3476,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"getOriginalMsgId","ranges":[{"startOffset":3829,"endOffset":3926,"count":0}],"isBlockCoverage":false},{"functionName":"getPayload","ranges":[{"startOffset":4167,"endOffset":4246,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":4489,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"getState","ranges":[{"startOffset":4807,"endOffset":4882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/aqQueue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2874,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1538,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"deqMany","ranges":[{"startOffset":1814,"endOffset":1902,"count":0}],"isBlockCoverage":false},{"functionName":"deqOne","ranges":[{"startOffset":2127,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"enqMany","ranges":[{"startOffset":2440,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"enqOne","ranges":[{"startOffset":2753,"endOffset":2839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/dbObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5790,"count":1}],"isBlockCoverage":true},{"functionName":"DbObjectImpl","ranges":[{"startOffset":1443,"endOffset":1498,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1724,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":2033,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"deleteElement","ranges":[{"startOffset":2331,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"getElement","ranges":[{"startOffset":2657,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIndex","ranges":[{"startOffset":2983,"endOffset":3079,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":3326,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"getLastIndex","ranges":[{"startOffset":3645,"endOffset":3739,"count":0}],"isBlockCoverage":false},{"functionName":"getNextIndex","ranges":[{"startOffset":3973,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevIndex","ranges":[{"startOffset":4305,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"getValues","ranges":[{"startOffset":4654,"endOffset":4741,"count":0}],"isBlockCoverage":false},{"functionName":"hasElement","ranges":[{"startOffset":4987,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"setElement","ranges":[{"startOffset":5327,"endOffset":5415,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":5671,"endOffset":5754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18932,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectionImpl","ranges":[{"startOffset":1336,"endOffset":1451,"count":43}],"isBlockCoverage":true},{"functionName":"_acquireLock","ranges":[{"startOffset":1737,"endOffset":2092,"count":198},{"startOffset":1786,"endOffset":2059,"count":155},{"startOffset":1833,"endOffset":1894,"count":0},{"startOffset":2053,"endOffset":2059,"count":154},{"startOffset":2059,"endOffset":2091,"count":197}],"isBlockCoverage":true},{"functionName":"_inProgress","ranges":[{"startOffset":1919,"endOffset":2051,"count":155}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":2413,"endOffset":2450,"count":198}],"isBlockCoverage":true},{"functionName":"_getDbObjectType","ranges":[{"startOffset":2770,"endOffset":3573,"count":0}],"isBlockCoverage":false},{"functionName":"_isDate","ranges":[{"startOffset":3899,"endOffset":3948,"count":0}],"isBlockCoverage":false},{"functionName":"_releaseLock","ranges":[{"startOffset":4217,"endOffset":4404,"count":196},{"startOffset":4273,"endOffset":4355,"count":154},{"startOffset":4355,"endOffset":4400,"count":42}],"isBlockCoverage":true},{"functionName":"breakExecution","ranges":[{"startOffset":4641,"endOffset":4735,"count":0}],"isBlockCoverage":false},{"functionName":"changePassword","ranges":[{"startOffset":4975,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5263,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"commit","ranges":[{"startOffset":5547,"endOffset":5623,"count":0}],"isBlockCoverage":false},{"functionName":"createLob","ranges":[{"startOffset":5854,"endOffset":5931,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":6170,"endOffset":6246,"count":0}],"isBlockCoverage":false},{"functionName":"executeMany","ranges":[{"startOffset":6489,"endOffset":6584,"count":0}],"isBlockCoverage":false},{"functionName":"getCallTimeout","ranges":[{"startOffset":6812,"endOffset":6890,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentSchema","ranges":[{"startOffset":7116,"endOffset":7198,"count":0}],"isBlockCoverage":false},{"functionName":"getDbObjectClass","ranges":[{"startOffset":7444,"endOffset":7535,"count":0}],"isBlockCoverage":false},{"functionName":"getExternalName","ranges":[{"startOffset":7775,"endOffset":7859,"count":0}],"isBlockCoverage":false},{"functionName":"getInstanceName","ranges":[{"startOffset":8130,"endOffset":8231,"count":0}],"isBlockCoverage":false},{"functionName":"getInternalName","ranges":[{"startOffset":8471,"endOffset":8555,"count":0}],"isBlockCoverage":false},{"functionName":"getOracleServerVersion","ranges":[{"startOffset":8817,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"getOracleServerVersionString","ranges":[{"startOffset":9185,"endOffset":9298,"count":0}],"isBlockCoverage":false},{"functionName":"getQueue","ranges":[{"startOffset":9525,"endOffset":9592,"count":0}],"isBlockCoverage":false},{"functionName":"getSodaDatabase","ranges":[{"startOffset":9851,"endOffset":9933,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementInfo","ranges":[{"startOffset":10170,"endOffset":10267,"count":0}],"isBlockCoverage":false},{"functionName":"getStmtCacheSize","ranges":[{"startOffset":10506,"endOffset":10598,"count":0}],"isBlockCoverage":false},{"functionName":"getTag","ranges":[{"startOffset":10834,"endOffset":10918,"count":0}],"isBlockCoverage":false},{"functionName":"isHealthy","ranges":[{"startOffset":11159,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":11490,"endOffset":11568,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":11784,"endOffset":11862,"count":0}],"isBlockCoverage":false},{"functionName":"setAction","ranges":[{"startOffset":12101,"endOffset":12191,"count":0}],"isBlockCoverage":false},{"functionName":"setCallTimeout","ranges":[{"startOffset":12416,"endOffset":12494,"count":0}],"isBlockCoverage":false},{"functionName":"setClientId","ranges":[{"startOffset":12737,"endOffset":12831,"count":0}],"isBlockCoverage":false},{"functionName":"setClientInfo","ranges":[{"startOffset":13078,"endOffset":13176,"count":0}],"isBlockCoverage":false},{"functionName":"setCurrentSchema","ranges":[{"startOffset":13399,"endOffset":13485,"count":0}],"isBlockCoverage":false},{"functionName":"setDbOp","ranges":[{"startOffset":13720,"endOffset":13806,"count":0}],"isBlockCoverage":false},{"functionName":"setECID","ranges":[{"startOffset":14041,"endOffset":14127,"count":0}],"isBlockCoverage":false},{"functionName":"setExternalName","ranges":[{"startOffset":14364,"endOffset":14448,"count":0}],"isBlockCoverage":false},{"functionName":"setInternalName","ranges":[{"startOffset":14685,"endOffset":14769,"count":0}],"isBlockCoverage":false},{"functionName":"setStmtCacheSize","ranges":[{"startOffset":15005,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"setModule","ranges":[{"startOffset":15343,"endOffset":15433,"count":0}],"isBlockCoverage":false},{"functionName":"setTag","ranges":[{"startOffset":15666,"endOffset":15750,"count":0}],"isBlockCoverage":false},{"functionName":"shutdown","ranges":[{"startOffset":15974,"endOffset":16061,"count":0}],"isBlockCoverage":false},{"functionName":"startup","ranges":[{"startOffset":16281,"endOffset":16365,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":16594,"endOffset":16684,"count":0}],"isBlockCoverage":false},{"functionName":"tpcBegin","ranges":[{"startOffset":16906,"endOffset":16990,"count":0}],"isBlockCoverage":false},{"functionName":"tpcCommit","ranges":[{"startOffset":17214,"endOffset":17301,"count":0}],"isBlockCoverage":false},{"functionName":"tpcEnd","ranges":[{"startOffset":17519,"endOffset":17599,"count":0}],"isBlockCoverage":false},{"functionName":"tpcForget","ranges":[{"startOffset":17823,"endOffset":17910,"count":0}],"isBlockCoverage":false},{"functionName":"tpcPrepare","ranges":[{"startOffset":18147,"endOffset":18234,"count":0}],"isBlockCoverage":false},{"functionName":"tpcRollback","ranges":[{"startOffset":18463,"endOffset":18554,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":18789,"endOffset":18869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6942,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":1306,"endOffset":2177,"count":1}],"isBlockCoverage":true},{"functionName":"_getDateComponents","ranges":[{"startOffset":2750,"endOffset":3308,"count":0}],"isBlockCoverage":false},{"functionName":"_makeDate","ranges":[{"startOffset":3820,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"addToOptions","ranges":[{"startOffset":4393,"endOffset":4579,"count":179},{"startOffset":4464,"endOffset":4575,"count":1167},{"startOffset":4544,"endOffset":4569,"count":1112}],"isBlockCoverage":true},{"functionName":"createFetchTypeMap","ranges":[{"startOffset":5035,"endOffset":6904,"count":1},{"startOffset":5280,"endOffset":6492,"count":0},{"startOffset":6580,"endOffset":6817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"707","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/lob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2961,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1585,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1957,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":2244,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2564,"endOffset":2630,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2865,"endOffset":2930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6978,"count":1}],"isBlockCoverage":true},{"functionName":"_accessTokenHandler","ranges":[{"startOffset":1575,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2199,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":2501,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":2799,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"getConnectionsInUse","ranges":[{"startOffset":3145,"endOffset":3237,"count":0}],"isBlockCoverage":false},{"functionName":"getConnectionsOpen","ranges":[{"startOffset":3491,"endOffset":3580,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolIncrement","ranges":[{"startOffset":3851,"endOffset":3937,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMax","ranges":[{"startOffset":4192,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMaxPerShard","ranges":[{"startOffset":4539,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMin","ranges":[{"startOffset":4886,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolPingInterval","ranges":[{"startOffset":5203,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolTimeout","ranges":[{"startOffset":5518,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"getStmtCacheSize","ranges":[{"startOffset":5856,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"getSodaMetaDataCache","ranges":[{"startOffset":6214,"endOffset":6314,"count":0}],"isBlockCoverage":false},{"functionName":"reconfigure","ranges":[{"startOffset":6550,"endOffset":6627,"count":0}],"isBlockCoverage":false},{"functionName":"setAccessToken","ranges":[{"startOffset":6867,"endOffset":6946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/resultset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8600,"count":1}],"isBlockCoverage":true},{"functionName":"_determineFetchType","ranges":[{"startOffset":1686,"endOffset":5511,"count":40},{"startOffset":2053,"endOffset":2688,"count":0},{"startOffset":2978,"endOffset":3020,"count":0},{"startOffset":3022,"endOffset":3384,"count":0},{"startOffset":3677,"endOffset":4018,"count":0},{"startOffset":4499,"endOffset":4555,"count":30},{"startOffset":4557,"endOffset":4630,"count":30},{"startOffset":4630,"endOffset":5272,"count":10},{"startOffset":5044,"endOffset":5120,"count":0},{"startOffset":5169,"endOffset":5264,"count":0},{"startOffset":5297,"endOffset":5309,"count":0},{"startOffset":5311,"endOffset":5429,"count":0},{"startOffset":5451,"endOffset":5500,"count":30}],"isBlockCoverage":true},{"functionName":"converter","ranges":[{"startOffset":4579,"endOffset":4621,"count":75},{"startOffset":4599,"endOffset":4605,"count":0}],"isBlockCoverage":true},{"functionName":"converter","ranges":[{"startOffset":5068,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":5193,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":5378,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"_getConnImpl","ranges":[{"startOffset":5831,"endOffset":5879,"count":0}],"isBlockCoverage":false},{"functionName":"_setup","ranges":[{"startOffset":6339,"endOffset":8000,"count":10},{"startOffset":6820,"endOffset":6930,"count":40},{"startOffset":6977,"endOffset":7996,"count":40},{"startOffset":7039,"endOffset":7156,"count":0},{"startOffset":7305,"endOffset":7356,"count":0},{"startOffset":7508,"endOffset":7550,"count":0},{"startOffset":7601,"endOffset":7648,"count":0},{"startOffset":7675,"endOffset":7723,"count":30},{"startOffset":7785,"endOffset":7990,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":8210,"endOffset":8279,"count":0}],"isBlockCoverage":false},{"functionName":"getRows","ranges":[{"startOffset":8500,"endOffset":8563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/sodaCollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6389,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1545,"endOffset":1604,"count":0}],"isBlockCoverage":false},{"functionName":"createIndex","ranges":[{"startOffset":1836,"endOffset":1929,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":2140,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"dropIndex","ranges":[{"startOffset":2430,"endOffset":2521,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":2771,"endOffset":2844,"count":0}],"isBlockCoverage":false},{"functionName":"getDataGuide","ranges":[{"startOffset":3102,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"getMetaData","ranges":[{"startOffset":3433,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":3752,"endOffset":3837,"count":0}],"isBlockCoverage":false},{"functionName":"insertMany","ranges":[{"startOffset":4094,"endOffset":4189,"count":0}],"isBlockCoverage":false},{"functionName":"insertManyAndGet","ranges":[{"startOffset":4511,"endOffset":4610,"count":0}],"isBlockCoverage":false},{"functionName":"insertOne","ranges":[{"startOffset":4848,"endOffset":4941,"count":0}],"isBlockCoverage":false},{"functionName":"insertOneAndGet","ranges":[{"startOffset":5233,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":5565,"endOffset":5648,"count":0}],"isBlockCoverage":false},{"functionName":"saveAndGet","ranges":[{"startOffset":5933,"endOffset":6022,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":6260,"endOffset":6347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/sodaDatabase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2970,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1543,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"createCollection","ranges":[{"startOffset":1829,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"createDocument","ranges":[{"startOffset":2148,"endOffset":2230,"count":0}],"isBlockCoverage":false},{"functionName":"getCollectionNames","ranges":[{"startOffset":2496,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"openCollection","ranges":[{"startOffset":2833,"endOffset":2930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/sodaDocCursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2257,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1544,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1813,"endOffset":1892,"count":0}],"isBlockCoverage":false},{"functionName":"getNext","ranges":[{"startOffset":2124,"endOffset":2216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/sodaDocument.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3563,"count":1}],"isBlockCoverage":true},{"functionName":"getContentAsBuffer","ranges":[{"startOffset":1478,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"getContentAsString","ranges":[{"startOffset":1813,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"getCreatedOn","ranges":[{"startOffset":2143,"endOffset":2237,"count":0}],"isBlockCoverage":false},{"functionName":"getKey","ranges":[{"startOffset":2458,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"getLastModified","ranges":[{"startOffset":2783,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaType","ranges":[{"startOffset":3115,"endOffset":3207,"count":0}],"isBlockCoverage":false},{"functionName":"getVersion","ranges":[{"startOffset":3436,"endOffset":3523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/impl/sodaOperation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3996,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1550,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":1863,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"getCursor","ranges":[{"startOffset":2185,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"getDocuments","ranges":[{"startOffset":2515,"endOffset":2601,"count":0}],"isBlockCoverage":false},{"functionName":"getOne","ranges":[{"startOffset":2838,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3153,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"replaceOne","ranges":[{"startOffset":3481,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"replaceOneAndGet","ranges":[{"startOffset":3858,"endOffset":3955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/aqDeqOptions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5666,"count":1}],"isBlockCoverage":true},{"functionName":"get condition","ranges":[{"startOffset":1554,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"set condition","ranges":[{"startOffset":1617,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"get consumerName","ranges":[{"startOffset":2001,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"set consumerName","ranges":[{"startOffset":2070,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"get correlation","ranges":[{"startOffset":2460,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"set correlation","ranges":[{"startOffset":2527,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":2900,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"set mode","ranges":[{"startOffset":2953,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"get msgId","ranges":[{"startOffset":3477,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"set msgId","ranges":[{"startOffset":3532,"endOffset":3647,"count":0}],"isBlockCoverage":false},{"functionName":"get navigation","ranges":[{"startOffset":3896,"endOffset":3957,"count":0}],"isBlockCoverage":false},{"functionName":"set navigation","ranges":[{"startOffset":3961,"endOffset":4219,"count":0}],"isBlockCoverage":false},{"functionName":"get transformation","ranges":[{"startOffset":4476,"endOffset":4545,"count":0}],"isBlockCoverage":false},{"functionName":"set transformation","ranges":[{"startOffset":4549,"endOffset":4694,"count":0}],"isBlockCoverage":false},{"functionName":"get visibility","ranges":[{"startOffset":4943,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"set visibility","ranges":[{"startOffset":5008,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"get wait","ranges":[{"startOffset":5450,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"set wait","ranges":[{"startOffset":5503,"endOffset":5630,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/aqEnqOptions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2909,"count":1}],"isBlockCoverage":true},{"functionName":"get deliveryMode","ranges":[{"startOffset":1523,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"set deliveryMode","ranges":[{"startOffset":1592,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"get transformation","ranges":[{"startOffset":2137,"endOffset":2206,"count":0}],"isBlockCoverage":false},{"functionName":"set transformation","ranges":[{"startOffset":2210,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"get visibility","ranges":[{"startOffset":2604,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"set visibility","ranges":[{"startOffset":2669,"endOffset":2873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/aqMessage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4752,"count":1}],"isBlockCoverage":true},{"functionName":"get correlation","ranges":[{"startOffset":1476,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"get delay","ranges":[{"startOffset":1769,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"get deliveryMode","ranges":[{"startOffset":2065,"endOffset":2130,"count":0}],"isBlockCoverage":false},{"functionName":"get exceptionQueue","ranges":[{"startOffset":2379,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"get expiration","ranges":[{"startOffset":2688,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"get msgId","ranges":[{"startOffset":2984,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"get numAttempts","ranges":[{"startOffset":3284,"endOffset":3347,"count":0}],"isBlockCoverage":false},{"functionName":"get originalMsgId","ranges":[{"startOffset":3599,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"get payload","ranges":[{"startOffset":3900,"endOffset":4145,"count":0}],"isBlockCoverage":false},{"functionName":"get priority","ranges":[{"startOffset":4381,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"get state","ranges":[{"startOffset":4668,"endOffset":4719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/aqQueue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10371,"count":1}],"isBlockCoverage":true},{"functionName":"_isPayload","ranges":[{"startOffset":1830,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"_makeMessage","ranges":[{"startOffset":2246,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyMessage","ranges":[{"startOffset":2874,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4921,"endOffset":6046,"count":0}],"isBlockCoverage":false},{"functionName":"deqMany","ranges":[{"startOffset":6336,"endOffset":6613,"count":0}],"isBlockCoverage":false},{"functionName":"deqOne","ranges":[{"startOffset":6863,"endOffset":7032,"count":0}],"isBlockCoverage":false},{"functionName":"get deqOptions","ranges":[{"startOffset":7282,"endOffset":7498,"count":0}],"isBlockCoverage":false},{"functionName":"enqMany","ranges":[{"startOffset":7783,"endOffset":8226,"count":0}],"isBlockCoverage":false},{"functionName":"enqOne","ranges":[{"startOffset":8456,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"get enqOptions","ranges":[{"startOffset":8914,"endOffset":9130,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":9350,"endOffset":9389,"count":0}],"isBlockCoverage":false},{"functionName":"get payloadType","ranges":[{"startOffset":9611,"endOffset":9664,"count":0}],"isBlockCoverage":false},{"functionName":"get payloadTypeName","ranges":[{"startOffset":9895,"endOffset":9956,"count":0}],"isBlockCoverage":false},{"functionName":"get payloadTypeClass","ranges":[{"startOffset":10189,"endOffset":10252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"719","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/dbObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14876,"count":1}],"isBlockCoverage":true},{"functionName":"_getAttrValue","ranges":[{"startOffset":1821,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"_setAttrValue","ranges":[{"startOffset":2215,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"_toPojo","ranges":[{"startOffset":2779,"endOffset":3291,"count":0}],"isBlockCoverage":false},{"functionName":"_transformValueOut","ranges":[{"startOffset":3559,"endOffset":4004,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":4230,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"get attributes","ranges":[{"startOffset":4816,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"deleteElement","ranges":[{"startOffset":5598,"endOffset":5769,"count":0}],"isBlockCoverage":false},{"functionName":"get elementType","ranges":[{"startOffset":6083,"endOffset":6144,"count":0}],"isBlockCoverage":false},{"functionName":"get elementTypeClass","ranges":[{"startOffset":6488,"endOffset":6559,"count":0}],"isBlockCoverage":false},{"functionName":"get elementTypeName","ranges":[{"startOffset":6840,"endOffset":6909,"count":0}],"isBlockCoverage":false},{"functionName":"get fqn","ranges":[{"startOffset":7193,"endOffset":7238,"count":0}],"isBlockCoverage":false},{"functionName":"getElement","ranges":[{"startOffset":7490,"endOffset":7728,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":7965,"endOffset":8057,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIndex","ranges":[{"startOffset":8295,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"getLastIndex","ranges":[{"startOffset":8635,"endOffset":8737,"count":0}],"isBlockCoverage":false},{"functionName":"getNextIndex","ranges":[{"startOffset":8973,"endOffset":9142,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevIndex","ranges":[{"startOffset":9382,"endOffset":9551,"count":0}],"isBlockCoverage":false},{"functionName":"getValues","ranges":[{"startOffset":9780,"endOffset":10032,"count":0}],"isBlockCoverage":false},{"functionName":"hasElement","ranges":[{"startOffset":10298,"endOffset":10463,"count":0}],"isBlockCoverage":false},{"functionName":"get isCollection","ranges":[{"startOffset":10713,"endOffset":10776,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":11011,"endOffset":11058,"count":0}],"isBlockCoverage":false},{"functionName":"get schema","ranges":[{"startOffset":11297,"endOffset":11348,"count":0}],"isBlockCoverage":false},{"functionName":"setElement","ranges":[{"startOffset":11623,"endOffset":12043,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":12300,"endOffset":12476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12511,"endOffset":12630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12634,"endOffset":12819,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12823,"endOffset":13014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13018,"endOffset":13073,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":13077,"endOffset":13120,"count":0}],"isBlockCoverage":false},{"functionName":"transformErr","ranges":[{"startOffset":13162,"endOffset":13357,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13201,"endOffset":13354,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFns","ranges":[{"startOffset":13438,"endOffset":13592,"count":1},{"startOffset":13509,"endOffset":13590,"count":14}],"isBlockCoverage":true},{"functionName":"deleteProperty","ranges":[{"startOffset":13946,"endOffset":14164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14169,"endOffset":14471,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14476,"endOffset":14719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/lob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7486,"count":1}],"isBlockCoverage":true},{"functionName":"Lob","ranges":[{"startOffset":1431,"endOffset":1645,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1779,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":2397,"endOffset":2783,"count":0}],"isBlockCoverage":false},{"functionName":"_readData","ranges":[{"startOffset":2863,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"_setup","ranges":[{"startOffset":3160,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":3728,"endOffset":4249,"count":0}],"isBlockCoverage":false},{"functionName":"_writeData","ranges":[{"startOffset":4329,"endOffset":4555,"count":0}],"isBlockCoverage":false},{"functionName":"get chunkSize","ranges":[{"startOffset":4784,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5447,"endOffset":5725,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":5979,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":6360,"endOffset":6403,"count":0}],"isBlockCoverage":false},{"functionName":"get pieceSize","ranges":[{"startOffset":6688,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"set pieceSize","ranges":[{"startOffset":6741,"endOffset":6967,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":7185,"endOffset":7224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/transformer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8665,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":1959,"endOffset":2899,"count":338},{"startOffset":2085,"endOffset":2897,"count":0}],"isBlockCoverage":true},{"functionName":"transformJsonValue","ranges":[{"startOffset":3375,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"transformValueIn","ranges":[{"startOffset":4920,"endOffset":8581,"count":340},{"startOffset":5067,"endOffset":5084,"count":338},{"startOffset":5090,"endOffset":5107,"count":2},{"startOffset":5107,"endOffset":5207,"count":338},{"startOffset":5207,"endOffset":5389,"count":0},{"startOffset":5389,"endOffset":8425,"count":338},{"startOffset":5433,"endOffset":5497,"count":0},{"startOffset":5534,"endOffset":6172,"count":80},{"startOffset":5906,"endOffset":5932,"count":0},{"startOffset":5964,"endOffset":6082,"count":0},{"startOffset":6172,"endOffset":8425,"count":258},{"startOffset":6402,"endOffset":6439,"count":0},{"startOffset":6441,"endOffset":6493,"count":0},{"startOffset":6537,"endOffset":8425,"count":0},{"startOffset":8425,"endOffset":8580,"count":0}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/resultset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12057,"count":1}],"isBlockCoverage":true},{"functionName":"ResultSet","ranges":[{"startOffset":1438,"endOffset":1619,"count":10}],"isBlockCoverage":true},{"functionName":"_getAllRows","ranges":[{"startOffset":1854,"endOffset":2802,"count":10},{"startOffset":2252,"endOffset":2280,"count":0},{"startOffset":2282,"endOffset":2329,"count":0},{"startOffset":2550,"endOffset":2581,"count":9},{"startOffset":2611,"endOffset":2682,"count":0}],"isBlockCoverage":true},{"functionName":"_getRows","ranges":[{"startOffset":3195,"endOffset":3651,"count":10},{"startOffset":3294,"endOffset":3592,"count":0}],"isBlockCoverage":true},{"functionName":"_processRows","ranges":[{"startOffset":4063,"endOffset":6793,"count":10},{"startOffset":4225,"endOffset":4661,"count":0},{"startOffset":4757,"endOffset":4958,"count":0},{"startOffset":5071,"endOffset":5574,"count":0},{"startOffset":5987,"endOffset":6402,"count":30},{"startOffset":6148,"endOffset":6319,"count":75},{"startOffset":6230,"endOffset":6278,"count":0},{"startOffset":6500,"endOffset":6788,"count":0}],"isBlockCoverage":true},{"functionName":"_setup","ranges":[{"startOffset":7002,"endOffset":7108,"count":10}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":7361,"endOffset":7737,"count":0}],"isBlockCoverage":false},{"functionName":"getRow","ranges":[{"startOffset":8144,"endOffset":8708,"count":0}],"isBlockCoverage":false},{"functionName":"getRows","ranges":[{"startOffset":9247,"endOffset":10722,"count":0}],"isBlockCoverage":false},{"functionName":"get metaData","ranges":[{"startOffset":10976,"endOffset":11080,"count":0}],"isBlockCoverage":false},{"functionName":"toQueryStream","ranges":[{"startOffset":11322,"endOffset":11662,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11666,"endOffset":11928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/queryStream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3690,"count":1}],"isBlockCoverage":true},{"functionName":"QueryStream","ranges":[{"startOffset":1281,"endOffset":1595,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1738,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"_open","ranges":[{"startOffset":2353,"endOffset":2624,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":2778,"endOffset":3655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53043,"count":1}],"isBlockCoverage":true},{"functionName":"Connection","ranges":[{"startOffset":2134,"endOffset":2232,"count":43}],"isBlockCoverage":true},{"functionName":"_addDefaultsToExecOpts","ranges":[{"startOffset":2507,"endOffset":2848,"count":136}],"isBlockCoverage":true},{"functionName":"_buildDbObjectClass","ranges":[{"startOffset":3163,"endOffset":4727,"count":0}],"isBlockCoverage":false},{"functionName":"_getDbObjectClass","ranges":[{"startOffset":5114,"endOffset":5503,"count":0}],"isBlockCoverage":false},{"functionName":"_getDbObjectClassForName","ranges":[{"startOffset":5875,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"_isBindDir","ranges":[{"startOffset":6429,"endOffset":6584,"count":0}],"isBlockCoverage":false},{"functionName":"_isBindValue","ranges":[{"startOffset":6860,"endOffset":7256,"count":340},{"startOffset":6945,"endOffset":6979,"count":338},{"startOffset":6980,"endOffset":7014,"count":80},{"startOffset":7015,"endOffset":7050,"count":0},{"startOffset":7051,"endOffset":7080,"count":0},{"startOffset":7081,"endOffset":7112,"count":0},{"startOffset":7113,"endOffset":7140,"count":0},{"startOffset":7141,"endOffset":7170,"count":0},{"startOffset":7171,"endOffset":7206,"count":0},{"startOffset":7207,"endOffset":7245,"count":0}],"isBlockCoverage":true},{"functionName":"_processBindUnit","ranges":[{"startOffset":7559,"endOffset":10703,"count":0}],"isBlockCoverage":false},{"functionName":"_processBindValue","ranges":[{"startOffset":11116,"endOffset":11662,"count":340},{"startOffset":11274,"endOffset":11368,"count":0},{"startOffset":11479,"endOffset":11522,"count":0},{"startOffset":11524,"endOffset":11658,"count":0}],"isBlockCoverage":true},{"functionName":"_processExecuteBind","ranges":[{"startOffset":12016,"endOffset":13844,"count":340},{"startOffset":12388,"endOffset":12475,"count":0},{"startOffset":12948,"endOffset":13072,"count":2},{"startOffset":13144,"endOffset":13194,"count":0},{"startOffset":13195,"endOffset":13246,"count":0},{"startOffset":13247,"endOffset":13294,"count":0},{"startOffset":13295,"endOffset":13343,"count":0},{"startOffset":13344,"endOffset":13393,"count":0},{"startOffset":13394,"endOffset":13449,"count":0},{"startOffset":13450,"endOffset":13506,"count":0},{"startOffset":13507,"endOffset":13554,"count":0},{"startOffset":13555,"endOffset":13607,"count":0},{"startOffset":13608,"endOffset":13664,"count":0},{"startOffset":13665,"endOffset":13720,"count":0},{"startOffset":13721,"endOffset":13767,"count":0},{"startOffset":13769,"endOffset":13839,"count":0}],"isBlockCoverage":true},{"functionName":"_processExecuteBinds","ranges":[{"startOffset":14190,"endOffset":14832,"count":136},{"startOffset":14282,"endOffset":14470,"count":135},{"startOffset":14329,"endOffset":14464,"count":336},{"startOffset":14470,"endOffset":14806,"count":1},{"startOffset":14646,"endOffset":14800,"count":4}],"isBlockCoverage":true},{"functionName":"_processExecuteManyBinds","ranges":[{"startOffset":15182,"endOffset":17583,"count":0}],"isBlockCoverage":false},{"functionName":"_transformOutBind","ranges":[{"startOffset":17965,"endOffset":18797,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyExecOpts","ranges":[{"startOffset":19102,"endOffset":23909,"count":12},{"startOffset":19659,"endOffset":19833,"count":0},{"startOffset":19929,"endOffset":20107,"count":0},{"startOffset":20180,"endOffset":21014,"count":0},{"startOffset":21122,"endOffset":21331,"count":0},{"startOffset":21574,"endOffset":22309,"count":0},{"startOffset":22499,"endOffset":22709,"count":0},{"startOffset":22803,"endOffset":22978,"count":0},{"startOffset":23084,"endOffset":23320,"count":0},{"startOffset":23424,"endOffset":23624,"count":0},{"startOffset":23712,"endOffset":23874,"count":0}],"isBlockCoverage":true},{"functionName":"get action","ranges":[{"startOffset":24138,"endOffset":24173,"count":0}],"isBlockCoverage":false},{"functionName":"set action","ranges":[{"startOffset":24177,"endOffset":24360,"count":0}],"isBlockCoverage":false},{"functionName":"breakExecution","ranges":[{"startOffset":24597,"endOffset":24770,"count":0}],"isBlockCoverage":false},{"functionName":"get callTimeout","ranges":[{"startOffset":24995,"endOffset":25102,"count":0}],"isBlockCoverage":false},{"functionName":"set callTimeout","ranges":[{"startOffset":25106,"endOffset":25322,"count":0}],"isBlockCoverage":false},{"functionName":"changePassword","ranges":[{"startOffset":25562,"endOffset":25974,"count":0}],"isBlockCoverage":false},{"functionName":"get clientId","ranges":[{"startOffset":26205,"endOffset":26242,"count":0}],"isBlockCoverage":false},{"functionName":"set clientId","ranges":[{"startOffset":26246,"endOffset":26435,"count":0}],"isBlockCoverage":false},{"functionName":"get clientInfo","ranges":[{"startOffset":26668,"endOffset":26707,"count":0}],"isBlockCoverage":false},{"functionName":"set clientInfo","ranges":[{"startOffset":26711,"endOffset":26906,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":27155,"endOffset":27713,"count":30},{"startOffset":27271,"endOffset":27409,"count":0}],"isBlockCoverage":true},{"functionName":"commit","ranges":[{"startOffset":27934,"endOffset":28091,"count":31},{"startOffset":28087,"endOffset":28090,"count":30}],"isBlockCoverage":true},{"functionName":"createLob","ranges":[{"startOffset":28336,"endOffset":28705,"count":0}],"isBlockCoverage":false},{"functionName":"get currentSchema","ranges":[{"startOffset":28966,"endOffset":29077,"count":0}],"isBlockCoverage":false},{"functionName":"set currentSchema","ranges":[{"startOffset":29081,"endOffset":29285,"count":0}],"isBlockCoverage":false},{"functionName":"get dbOp","ranges":[{"startOffset":29512,"endOffset":29545,"count":0}],"isBlockCoverage":false},{"functionName":"set dbOp","ranges":[{"startOffset":29549,"endOffset":29726,"count":0}],"isBlockCoverage":false},{"functionName":"get thin","ranges":[{"startOffset":30045,"endOffset":30087,"count":0}],"isBlockCoverage":false},{"functionName":"get ecid","ranges":[{"startOffset":30314,"endOffset":30347,"count":0}],"isBlockCoverage":false},{"functionName":"set ecid","ranges":[{"startOffset":30351,"endOffset":30528,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":30767,"endOffset":32920,"count":136},{"startOffset":31110,"endOffset":31166,"count":12},{"startOffset":31406,"endOffset":31413,"count":134},{"startOffset":31413,"endOffset":31549,"count":2},{"startOffset":31468,"endOffset":31526,"count":0},{"startOffset":31549,"endOffset":31728,"count":134},{"startOffset":31728,"endOffset":32052,"count":10},{"startOffset":31898,"endOffset":31945,"count":0},{"startOffset":32052,"endOffset":32121,"count":134},{"startOffset":32121,"endOffset":32290,"count":0},{"startOffset":32290,"endOffset":32498,"count":134},{"startOffset":32498,"endOffset":32894,"count":0},{"startOffset":32894,"endOffset":32919,"count":134}],"isBlockCoverage":true},{"functionName":"executeMany","ranges":[{"startOffset":33178,"endOffset":34559,"count":0}],"isBlockCoverage":false},{"functionName":"get externalName","ranges":[{"startOffset":34817,"endOffset":34926,"count":0}],"isBlockCoverage":false},{"functionName":"set externalName","ranges":[{"startOffset":34930,"endOffset":35131,"count":0}],"isBlockCoverage":false},{"functionName":"getDbObjectClass","ranges":[{"startOffset":35557,"endOffset":35809,"count":0}],"isBlockCoverage":false},{"functionName":"getQueue","ranges":[{"startOffset":36040,"endOffset":36474,"count":0}],"isBlockCoverage":false},{"functionName":"getSodaDatabase","ranges":[{"startOffset":36771,"endOffset":37007,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementInfo","ranges":[{"startOffset":37246,"endOffset":37761,"count":0}],"isBlockCoverage":false},{"functionName":"get instanceName","ranges":[{"startOffset":38123,"endOffset":38232,"count":0}],"isBlockCoverage":false},{"functionName":"get internalName","ranges":[{"startOffset":38490,"endOffset":38599,"count":0}],"isBlockCoverage":false},{"functionName":"set internalName","ranges":[{"startOffset":38603,"endOffset":38804,"count":0}],"isBlockCoverage":false},{"functionName":"isHealthy","ranges":[{"startOffset":39117,"endOffset":39223,"count":0}],"isBlockCoverage":false},{"functionName":"get module","ranges":[{"startOffset":39452,"endOffset":39487,"count":0}],"isBlockCoverage":false},{"functionName":"set module","ranges":[{"startOffset":39491,"endOffset":39674,"count":0}],"isBlockCoverage":false},{"functionName":"get oracleServerVersion","ranges":[{"startOffset":39931,"endOffset":40054,"count":0}],"isBlockCoverage":false},{"functionName":"get oracleServerVersionString","ranges":[{"startOffset":40315,"endOffset":40450,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":40692,"endOffset":40845,"count":0}],"isBlockCoverage":false},{"functionName":"queryStream","ranges":[{"startOffset":41121,"endOffset":41956,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":42182,"endOffset":42343,"count":0}],"isBlockCoverage":false},{"functionName":"shutdown","ranges":[{"startOffset":42564,"endOffset":42892,"count":0}],"isBlockCoverage":false},{"functionName":"startup","ranges":[{"startOffset":43111,"endOffset":43595,"count":0}],"isBlockCoverage":false},{"functionName":"get stmtCacheSize","ranges":[{"startOffset":43823,"endOffset":43934,"count":0}],"isBlockCoverage":false},{"functionName":"set stmtCacheSize","ranges":[{"startOffset":43938,"endOffset":44160,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":44478,"endOffset":46400,"count":0}],"isBlockCoverage":false},{"functionName":"get tag","ranges":[{"startOffset":46634,"endOffset":46725,"count":0}],"isBlockCoverage":false},{"functionName":"set tag","ranges":[{"startOffset":46729,"endOffset":46903,"count":0}],"isBlockCoverage":false},{"functionName":"tpcBegin","ranges":[{"startOffset":47131,"endOffset":47679,"count":0}],"isBlockCoverage":false},{"functionName":"tpcCommit","ranges":[{"startOffset":47910,"endOffset":48334,"count":0}],"isBlockCoverage":false},{"functionName":"tpcEnd","ranges":[{"startOffset":48559,"endOffset":48981,"count":0}],"isBlockCoverage":false},{"functionName":"tpcForget","ranges":[{"startOffset":49262,"endOffset":49485,"count":0}],"isBlockCoverage":false},{"functionName":"tpcPrepare","ranges":[{"startOffset":49729,"endOffset":50002,"count":0}],"isBlockCoverage":false},{"functionName":"tpcRecover","ranges":[{"startOffset":50251,"endOffset":51106,"count":0}],"isBlockCoverage":false},{"functionName":"tpcRollback","ranges":[{"startOffset":51365,"endOffset":51633,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":51894,"endOffset":52252,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/sodaDatabase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5109,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnection","ranges":[{"startOffset":1454,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"createCollection","ranges":[{"startOffset":1730,"endOffset":2519,"count":0}],"isBlockCoverage":false},{"functionName":"createDocument","ranges":[{"startOffset":2740,"endOffset":3495,"count":0}],"isBlockCoverage":false},{"functionName":"getCollectionNames","ranges":[{"startOffset":3760,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"openCollection","ranges":[{"startOffset":4591,"endOffset":4964,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/sodaCollection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9424,"count":1}],"isBlockCoverage":true},{"functionName":"createIndex","ranges":[{"startOffset":1640,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":2104,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"dropIndex","ranges":[{"startOffset":2488,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":3244,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"getDataGuide","ranges":[{"startOffset":3618,"endOffset":3789,"count":0}],"isBlockCoverage":false},{"functionName":"insertMany","ranges":[{"startOffset":4054,"endOffset":4457,"count":0}],"isBlockCoverage":false},{"functionName":"insertManyAndGet","ranges":[{"startOffset":4790,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"insertOne","ranges":[{"startOffset":5873,"endOffset":6099,"count":0}],"isBlockCoverage":false},{"functionName":"insertOneAndGet","ranges":[{"startOffset":6398,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"get metaData","ranges":[{"startOffset":7202,"endOffset":7271,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":7498,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":7778,"endOffset":7994,"count":0}],"isBlockCoverage":false},{"functionName":"saveAndGet","ranges":[{"startOffset":8286,"endOffset":8831,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":9068,"endOffset":9167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"727","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/sodaDocument.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3665,"count":1}],"isBlockCoverage":true},{"functionName":"get createdOn","ranges":[{"startOffset":1420,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"getContent","ranges":[{"startOffset":1724,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"getContentAsBuffer","ranges":[{"startOffset":2040,"endOffset":2110,"count":0}],"isBlockCoverage":false},{"functionName":"getContentAsString","ranges":[{"startOffset":2352,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"get key","ranges":[{"startOffset":2643,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":2935,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"get mediaType","ranges":[{"startOffset":3234,"endOffset":3293,"count":0}],"isBlockCoverage":false},{"functionName":"get version","ranges":[{"startOffset":3522,"endOffset":3577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/sodaOperation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7267,"count":1}],"isBlockCoverage":true},{"functionName":"SodaOperation","ranges":[{"startOffset":1415,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":1809,"endOffset":1922,"count":0}],"isBlockCoverage":false},{"functionName":"getCursor","ranges":[{"startOffset":2198,"endOffset":2386,"count":0}],"isBlockCoverage":false},{"functionName":"getDocuments","ranges":[{"startOffset":2638,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"getOne","ranges":[{"startOffset":3230,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"replaceOne","ranges":[{"startOffset":3746,"endOffset":3932,"count":0}],"isBlockCoverage":false},{"functionName":"replaceOneAndGet","ranges":[{"startOffset":4278,"endOffset":4593,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":4916,"endOffset":5031,"count":0}],"isBlockCoverage":false},{"functionName":"fetchArraySize","ranges":[{"startOffset":5104,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":5362,"endOffset":5539,"count":0}],"isBlockCoverage":false},{"functionName":"hint","ranges":[{"startOffset":5601,"endOffset":5764,"count":0}],"isBlockCoverage":false},{"functionName":"key","ranges":[{"startOffset":5825,"endOffset":6016,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":6078,"endOffset":6384,"count":0}],"isBlockCoverage":false},{"functionName":"limit","ranges":[{"startOffset":6456,"endOffset":6615,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":6686,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":6917,"endOffset":7080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/sodaDocCursor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2380,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1563,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"getNext","ranges":[{"startOffset":1987,"endOffset":2275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27669,"count":1}],"isBlockCoverage":true},{"functionName":"Pool","ranges":[{"startOffset":1543,"endOffset":1883,"count":0}],"isBlockCoverage":false},{"functionName":"_checkPoolOpen","ranges":[{"startOffset":2189,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"_checkRequestQueue","ranges":[{"startOffset":3422,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"get _enableStats","ranges":[{"startOffset":4225,"endOffset":4284,"count":0}],"isBlockCoverage":false},{"functionName":"_resetStatistics","ranges":[{"startOffset":4512,"endOffset":4947,"count":0}],"isBlockCoverage":false},{"functionName":"_setup","ranges":[{"startOffset":5256,"endOffset":5950,"count":0}],"isBlockCoverage":false},{"functionName":"_updateWaitStatistics","ranges":[{"startOffset":6244,"endOffset":6612,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyGetConnectionOptions","ranges":[{"startOffset":6971,"endOffset":8877,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9176,"endOffset":10787,"count":0}],"isBlockCoverage":false},{"functionName":"get connectionsInUse","ranges":[{"startOffset":11042,"endOffset":11115,"count":0}],"isBlockCoverage":false},{"functionName":"get connectionsOpen","ranges":[{"startOffset":11369,"endOffset":11440,"count":0}],"isBlockCoverage":false},{"functionName":"get connectString","ranges":[{"startOffset":11690,"endOffset":11747,"count":0}],"isBlockCoverage":false},{"functionName":"get thin","ranges":[{"startOffset":12052,"endOffset":12094,"count":0}],"isBlockCoverage":false},{"functionName":"get edition","ranges":[{"startOffset":12331,"endOffset":12376,"count":0}],"isBlockCoverage":false},{"functionName":"get enableStatistics","ranges":[{"startOffset":12629,"endOffset":12692,"count":0}],"isBlockCoverage":false},{"functionName":"get events","ranges":[{"startOffset":12938,"endOffset":12985,"count":0}],"isBlockCoverage":false},{"functionName":"get externalAuth","ranges":[{"startOffset":13243,"endOffset":13298,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":13748,"endOffset":18515,"count":0}],"isBlockCoverage":false},{"functionName":"getStatistics","ranges":[{"startOffset":18795,"endOffset":18954,"count":0}],"isBlockCoverage":false},{"functionName":"get homogeneous","ranges":[{"startOffset":19210,"endOffset":19263,"count":0}],"isBlockCoverage":false},{"functionName":"logStatistics","ranges":[{"startOffset":19654,"endOffset":19834,"count":0}],"isBlockCoverage":false},{"functionName":"get poolAlias","ranges":[{"startOffset":20069,"endOffset":20118,"count":0}],"isBlockCoverage":false},{"functionName":"get poolIncrement","ranges":[{"startOffset":20400,"endOffset":20467,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMax","ranges":[{"startOffset":20722,"endOffset":20777,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMaxPerShard","ranges":[{"startOffset":21060,"endOffset":21131,"count":0}],"isBlockCoverage":false},{"functionName":"get poolMin","ranges":[{"startOffset":21386,"endOffset":21441,"count":0}],"isBlockCoverage":false},{"functionName":"get poolPingInterval","ranges":[{"startOffset":21689,"endOffset":21762,"count":0}],"isBlockCoverage":false},{"functionName":"get poolTimeout","ranges":[{"startOffset":22004,"endOffset":22067,"count":0}],"isBlockCoverage":false},{"functionName":"get queueMax","ranges":[{"startOffset":22340,"endOffset":22387,"count":0}],"isBlockCoverage":false},{"functionName":"get queueTimeout","ranges":[{"startOffset":22689,"endOffset":22744,"count":0}],"isBlockCoverage":false},{"functionName":"reconfigure","ranges":[{"startOffset":23003,"endOffset":25115,"count":0}],"isBlockCoverage":false},{"functionName":"get sessionCallback","ranges":[{"startOffset":25370,"endOffset":25431,"count":0}],"isBlockCoverage":false},{"functionName":"setAccessToken","ranges":[{"startOffset":25674,"endOffset":25974,"count":0}],"isBlockCoverage":false},{"functionName":"get sodaMetaDataCache","ranges":[{"startOffset":26235,"endOffset":26310,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":26528,"endOffset":26571,"count":0}],"isBlockCoverage":false},{"functionName":"get stmtCacheSize","ranges":[{"startOffset":26860,"endOffset":26927,"count":0}],"isBlockCoverage":false},{"functionName":"get user","ranges":[{"startOffset":27158,"endOffset":27197,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/poolStatistics.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6250,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStatistics","ranges":[{"startOffset":1508,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"logStatistics","ranges":[{"startOffset":3649,"endOffset":6213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/winston/lib/winston/transports/console.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3348,"count":1}],"isBlockCoverage":true},{"functionName":"Console","ranges":[{"startOffset":664,"endOffset":1071,"count":3},{"startOffset":1013,"endOffset":1026,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":1278,"endOffset":2604,"count":149},{"startOffset":1435,"endOffset":1801,"count":0},{"startOffset":1848,"endOffset":2277,"count":0},{"startOffset":2432,"endOffset":2516,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1317,"endOffset":1348,"count":148}],"isBlockCoverage":true},{"functionName":"_stringArrayToSet","ranges":[{"startOffset":2930,"endOffset":3344,"count":6},{"startOffset":3003,"endOffset":3091,"count":0},{"startOffset":3128,"endOffset":3343,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3195,"endOffset":3334,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/logform/simple.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":546,"endOffset":976,"count":149},{"startOffset":728,"endOffset":755,"count":0},{"startOffset":795,"endOffset":883,"count":0}],"isBlockCoverage":true}]},{"scriptId":"734","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/spec/controller.unit.spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":736,"endOffset":7449,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":807,"endOffset":1351,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1386,"endOffset":2216,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1418,"endOffset":1713,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2251,"endOffset":3649,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2283,"endOffset":2570,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2614,"endOffset":2903,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2948,"endOffset":3250,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3680,"endOffset":4903,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3712,"endOffset":4175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4230,"endOffset":4453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4937,"endOffset":6274,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4969,"endOffset":5442,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5497,"endOffset":5822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6308,"endOffset":7442,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6340,"endOffset":6692,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6737,"endOffset":7035,"count":1}],"isBlockCoverage":true}]},{"scriptId":"735","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/src/controllers/PolymorphicController.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4667,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":367,"endOffset":4621,"count":1}],"isBlockCoverage":true},{"functionName":"PolymorphicController","ranges":[{"startOffset":407,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"setEndpoints","ranges":[{"startOffset":882,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"getAllThings","ranges":[{"startOffset":930,"endOffset":1310,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1138,"endOffset":1177,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1192,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"getThingById","ranges":[{"startOffset":1314,"endOffset":1730,"count":3},{"startOffset":1490,"endOffset":1497,"count":1},{"startOffset":1497,"endOffset":1729,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1619,"endOffset":1658,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1673,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"addThing","ranges":[{"startOffset":1734,"endOffset":2238,"count":2},{"startOffset":1912,"endOffset":2237,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2103,"endOffset":2142,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2157,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"updateThing","ranges":[{"startOffset":2242,"endOffset":2792,"count":2},{"startOffset":2423,"endOffset":2791,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2657,"endOffset":2696,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2711,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"deleteThing","ranges":[{"startOffset":2797,"endOffset":3289,"count":2},{"startOffset":2972,"endOffset":3288,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3157,"endOffset":3196,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3211,"endOffset":3283,"count":0}],"isBlockCoverage":false},{"functionName":"#sendResult","ranges":[{"startOffset":3293,"endOffset":3425,"count":6},{"startOffset":3343,"endOffset":3390,"count":1},{"startOffset":3397,"endOffset":3420,"count":5}],"isBlockCoverage":true},{"functionName":"#validateInput","ranges":[{"startOffset":3605,"endOffset":4619,"count":10},{"startOffset":3780,"endOffset":4027,"count":5},{"startOffset":3869,"endOffset":4012,"count":2},{"startOffset":4012,"endOffset":4027,"count":3},{"startOffset":4034,"endOffset":4057,"count":5},{"startOffset":4064,"endOffset":4504,"count":5},{"startOffset":4106,"endOffset":4113,"count":1},{"startOffset":4113,"endOffset":4333,"count":4},{"startOffset":4333,"endOffset":4398,"count":2},{"startOffset":4400,"endOffset":4504,"count":2},{"startOffset":4511,"endOffset":4592,"count":0},{"startOffset":4598,"endOffset":4618,"count":5}],"isBlockCoverage":true}]},{"scriptId":"736","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"737","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"738","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5,"count":1}],"isBlockCoverage":true}]},{"scriptId":"739","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6,"count":1}],"isBlockCoverage":true}]},{"scriptId":"740","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"741","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true}]},{"scriptId":"742","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/express.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2409,"count":1}],"isBlockCoverage":true},{"functionName":"createApplication","ranges":[{"startOffset":696,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2406,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2164,"endOffset":2374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2681,"count":1}],"isBlockCoverage":true},{"functionName":"bodyParser","ranges":[{"startOffset":1413,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"createParserGetter","ranges":[{"startOffset":1950,"endOffset":2047,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1996,"endOffset":2045,"count":5}],"isBlockCoverage":true},{"functionName":"loadParser","ranges":[{"startOffset":2095,"endOffset":2680,"count":5},{"startOffset":2194,"endOffset":2217,"count":1},{"startOffset":2217,"endOffset":2299,"count":4},{"startOffset":2299,"endOffset":2366,"count":1},{"startOffset":2371,"endOffset":2436,"count":1},{"startOffset":2441,"endOffset":2508,"count":1},{"startOffset":2513,"endOffset":2592,"count":1},{"startOffset":2596,"endOffset":2679,"count":4}],"isBlockCoverage":true}]},{"scriptId":"744","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10932,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":347,"endOffset":666,"count":18},{"startOffset":573,"endOffset":617,"count":0},{"startOffset":619,"endOffset":644,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":730,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1224,"endOffset":1369,"count":15}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1415,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1730,"endOffset":2308,"count":9},{"startOffset":1776,"endOffset":1839,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":1930,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"eehaslisteners","ranges":[{"startOffset":2624,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2865,"endOffset":3095,"count":9},{"startOffset":2927,"endOffset":2980,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":3143,"endOffset":3380,"count":9},{"startOffset":3207,"endOffset":3263,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3423,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":5167,"endOffset":5537,"count":24},{"startOffset":5242,"endOffset":5258,"count":0},{"startOffset":5363,"endOffset":5418,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5593,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":6232,"endOffset":6668,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6721,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7305,"endOffset":7432,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7484,"endOffset":7903,"count":24}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7950,"endOffset":8014,"count":24}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":8080,"endOffset":8686,"count":15},{"startOffset":8150,"endOffset":8213,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8740,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9955,"endOffset":10931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/merge-descriptors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1215,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":612,"endOffset":1214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/application.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14593,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1425,"endOffset":1538,"count":0}],"isBlockCoverage":false},{"functionName":"defaultConfiguration","ranges":[{"startOffset":1630,"endOffset":3237,"count":0}],"isBlockCoverage":false},{"functionName":"lazyrouter","ranges":[{"startOffset":3477,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":4028,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":4609,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"route","ranges":[{"startOffset":6012,"endOffset":6092,"count":0}],"isBlockCoverage":false},{"functionName":"engine","ranges":[{"startOffset":7349,"endOffset":7618,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":7899,"endOffset":8130,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8439,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":9687,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":10025,"endOffset":10091,"count":0}],"isBlockCoverage":false},{"functionName":"disabled","ranges":[{"startOffset":10332,"endOffset":10391,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":10508,"endOffset":10570,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":10689,"endOffset":10753,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10835,"endOffset":11148,"count":34}],"isBlockCoverage":true},{"functionName":"app.<computed>","ranges":[{"startOffset":10869,"endOffset":11145,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":11380,"endOffset":11611,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":12081,"endOffset":13530,"count":0}],"isBlockCoverage":false},{"functionName":"listen","ranges":[{"startOffset":14086,"endOffset":14196,"count":0}],"isBlockCoverage":false},{"functionName":"logerror","ranges":[{"startOffset":14279,"endOffset":14412,"count":0}],"isBlockCoverage":false},{"functionName":"tryRender","ranges":[{"startOffset":14460,"endOffset":14592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/finalhandler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6689,"count":1},{"startOffset":617,"endOffset":683,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":619,"endOffset":683,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":810,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"finalhandler","ranges":[{"startOffset":1455,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorHeaders","ranges":[{"startOffset":2888,"endOffset":3202,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorMessage","ranges":[{"startOffset":3381,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorStatusCode","ranges":[{"startOffset":3836,"endOffset":4172,"count":0}],"isBlockCoverage":false},{"functionName":"getResourceName","ranges":[{"startOffset":4419,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"getResponseStatusCode","ranges":[{"startOffset":4658,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":5014,"endOffset":5139,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5327,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":6477,"endOffset":6688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"750","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":61}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":12},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":12},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"751","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":12},{"startOffset":895,"endOffset":1003,"count":186}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":12}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":31},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":12},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4430,"count":1},{"startOffset":489,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":491,"endOffset":555,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":752,"endOffset":969,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1083,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1604,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2577,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2977,"endOffset":3314,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3508,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":3861,"endOffset":3973,"count":1},{"startOffset":3942,"endOffset":3971,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":4095,"endOffset":4429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"createMessageToStatusCodeMap","ranges":[{"startOffset":906,"endOffset":1170,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":999,"endOffset":1153,"count":63}],"isBlockCoverage":true},{"functionName":"createStatusCodeList","ranges":[{"startOffset":1231,"endOffset":1359,"count":1}],"isBlockCoverage":true},{"functionName":"mapCode","ranges":[{"startOffset":1303,"endOffset":1356,"count":63}],"isBlockCoverage":true},{"functionName":"getStatusCode","ranges":[{"startOffset":1424,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"getStatusMessage","ranges":[{"startOffset":1721,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"status","ranges":[{"startOffset":2288,"endOffset":2609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/unpipe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1118,"count":1}],"isBlockCoverage":true},{"functionName":"hasPipeDataListeners","ranges":[{"startOffset":242,"endOffset":460,"count":0}],"isBlockCoverage":false},{"functionName":"unpipe","ranges":[{"startOffset":553,"endOffset":1117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/router/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15124,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":923,"endOffset":1317,"count":1}],"isBlockCoverage":true},{"functionName":"router","ranges":[{"startOffset":974,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":2470,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":3360,"endOffset":8106,"count":0}],"isBlockCoverage":false},{"functionName":"process_params","ranges":[{"startOffset":8194,"endOffset":9887,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":10433,"endOffset":11460,"count":1},{"startOffset":10581,"endOffset":10792,"count":0},{"startOffset":10883,"endOffset":10959,"count":0},{"startOffset":11070,"endOffset":11175,"count":0},{"startOffset":11240,"endOffset":11256,"count":0}],"isBlockCoverage":true},{"functionName":"route","ranges":[{"startOffset":11756,"endOffset":12019,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12084,"endOffset":12250,"count":35}],"isBlockCoverage":true},{"functionName":"proto.<computed>","ranges":[{"startOffset":12120,"endOffset":12247,"count":5}],"isBlockCoverage":true},{"functionName":"appendMethods","ranges":[{"startOffset":12293,"endOffset":12485,"count":0}],"isBlockCoverage":false},{"functionName":"getPathname","ranges":[{"startOffset":12514,"endOffset":12630,"count":0}],"isBlockCoverage":false},{"functionName":"getProtohost","ranges":[{"startOffset":12669,"endOffset":13063,"count":0}],"isBlockCoverage":false},{"functionName":"gettype","ranges":[{"startOffset":13095,"endOffset":13292,"count":0}],"isBlockCoverage":false},{"functionName":"matchLayer","ranges":[{"startOffset":13392,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"mergeParams","ranges":[{"startOffset":13541,"endOffset":14199,"count":0}],"isBlockCoverage":false},{"functionName":"restore","ranges":[{"startOffset":14237,"endOffset":14639,"count":0}],"isBlockCoverage":false},{"functionName":"sendOptionsResponse","ranges":[{"startOffset":14669,"endOffset":14848,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":14869,"endOffset":15123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/router/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4281,"count":1}],"isBlockCoverage":true},{"functionName":"Route","ranges":[{"startOffset":663,"endOffset":818,"count":5}],"isBlockCoverage":true},{"functionName":"_handles_method","ranges":[{"startOffset":925,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"_options","ranges":[{"startOffset":1250,"endOffset":1557,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":1645,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"all","ranges":[{"startOffset":3163,"endOffset":3650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3669,"endOffset":4278,"count":34}],"isBlockCoverage":true},{"functionName":"Route.<computed>","ranges":[{"startOffset":3715,"endOffset":4275,"count":5},{"startOffset":3897,"endOffset":4068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"762","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/array-flatten/array-flatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"flattenWithDepth","ranges":[{"startOffset":230,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"flattenForever","ranges":[{"startOffset":659,"endOffset":904,"count":6},{"startOffset":800,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"arrayFlatten","ranges":[{"startOffset":1045,"endOffset":1194,"count":6},{"startOffset":1147,"endOffset":1193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"763","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/router/layer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3296,"count":1}],"isBlockCoverage":true},{"functionName":"Layer","ranges":[{"startOffset":486,"endOffset":951,"count":16},{"startOffset":554,"endOffset":600,"count":5},{"startOffset":600,"endOffset":647,"count":11},{"startOffset":647,"endOffset":652,"count":0},{"startOffset":697,"endOffset":713,"count":0},{"startOffset":928,"endOffset":949,"count":6}],"isBlockCoverage":true},{"functionName":"handle_error","ranges":[{"startOffset":1146,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1561,"endOffset":1775,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1943,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"decode_param","ranges":[{"startOffset":2965,"endOffset":3295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/path-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3328,"count":1}],"isBlockCoverage":true},{"functionName":"pathtoRegexp","ranges":[{"startOffset":520,"endOffset":3326,"count":11},{"startOffset":585,"endOffset":590,"count":0},{"startOffset":606,"endOffset":611,"count":0},{"startOffset":711,"endOffset":715,"count":0},{"startOffset":847,"endOffset":1033,"count":0},{"startOffset":1062,"endOffset":1447,"count":0},{"startOffset":1480,"endOffset":1484,"count":0},{"startOffset":1517,"endOffset":1522,"count":6},{"startOffset":1523,"endOffset":1529,"count":5},{"startOffset":2645,"endOffset":3148,"count":7},{"startOffset":2740,"endOffset":2768,"count":0},{"startOffset":2845,"endOffset":2868,"count":0},{"startOffset":2951,"endOffset":3134,"count":0},{"startOffset":3229,"endOffset":3234,"count":10},{"startOffset":3235,"endOffset":3287,"count":1},{"startOffset":3268,"endOffset":3272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1654,"endOffset":2280,"count":7},{"startOffset":1746,"endOffset":1751,"count":0},{"startOffset":2028,"endOffset":2032,"count":0},{"startOffset":2087,"endOffset":2094,"count":0},{"startOffset":2127,"endOffset":2160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2302,"endOffset":2530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/methods/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1},{"startOffset":299,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentNodeMethods","ranges":[{"startOffset":383,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"lowerCaseMethod","ranges":[{"startOffset":460,"endOffset":531,"count":34}],"isBlockCoverage":true},{"functionName":"getBasicNodeMethods","ranges":[{"startOffset":624,"endOffset":1039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/utils-merge/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":276,"endOffset":379,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/middleware/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"exports.init","ranges":[{"startOffset":502,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/middleware/query.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":400,"endOffset":883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/qs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"771","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/qs/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10356,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":217,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"indices","ranges":[{"startOffset":315,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"repeat","ranges":[{"startOffset":407,"endOffset":461,"count":0}],"isBlockCoverage":false},{"functionName":"pushToArray","ranges":[{"startOffset":582,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"serializeDate","ranges":[{"startOffset":1118,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"isNonNullishPrimitive","ranges":[{"startOffset":1273,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":1516,"endOffset":5632,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStringifyOptions","ranges":[{"startOffset":5667,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":7909,"endOffset":10354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/side-channel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3391,"count":1}],"isBlockCoverage":true},{"functionName":"listGetNode","ranges":[{"startOffset":948,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"listGet","ranges":[{"startOffset":1266,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"listSet","ranges":[{"startOffset":1376,"endOffset":1669,"count":0}],"isBlockCoverage":false},{"functionName":"listHas","ranges":[{"startOffset":1685,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"getSideChannel","ranges":[{"startOffset":1769,"endOffset":3389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/get-intrinsic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13323,"count":1},{"startOffset":420,"endOffset":491,"count":0},{"startOffset":993,"endOffset":1009,"count":0},{"startOffset":1132,"endOffset":1230,"count":0},{"startOffset":1318,"endOffset":1329,"count":0},{"startOffset":1433,"endOffset":1444,"count":0},{"startOffset":1535,"endOffset":1546,"count":0},{"startOffset":1648,"endOffset":1659,"count":0},{"startOffset":1897,"endOffset":1908,"count":0},{"startOffset":1963,"endOffset":1974,"count":0},{"startOffset":2042,"endOffset":2053,"count":0},{"startOffset":2130,"endOffset":2141,"count":0},{"startOffset":2230,"endOffset":2241,"count":0},{"startOffset":2564,"endOffset":2575,"count":0},{"startOffset":2647,"endOffset":2658,"count":0},{"startOffset":2746,"endOffset":2757,"count":0},{"startOffset":2892,"endOffset":2903,"count":0},{"startOffset":2968,"endOffset":2979,"count":0},{"startOffset":3045,"endOffset":3056,"count":0},{"startOffset":3206,"endOffset":3217,"count":0},{"startOffset":3262,"endOffset":3273,"count":0},{"startOffset":3312,"endOffset":3323,"count":0},{"startOffset":3413,"endOffset":3424,"count":0},{"startOffset":3625,"endOffset":3636,"count":0},{"startOffset":3689,"endOffset":3700,"count":0},{"startOffset":3821,"endOffset":3832,"count":0},{"startOffset":3902,"endOffset":3913,"count":0},{"startOffset":4003,"endOffset":4014,"count":0},{"startOffset":4122,"endOffset":4133,"count":0},{"startOffset":4263,"endOffset":4274,"count":0},{"startOffset":4309,"endOffset":4320,"count":0},{"startOffset":4499,"endOffset":4510,"count":0},{"startOffset":4590,"endOffset":4601,"count":0},{"startOffset":4676,"endOffset":4687,"count":0},{"startOffset":4756,"endOffset":4767,"count":0},{"startOffset":4853,"endOffset":4864,"count":0},{"startOffset":4921,"endOffset":4932,"count":0},{"startOffset":4989,"endOffset":5000,"count":0}],"isBlockCoverage":true},{"functionName":"getEvalledConstructor","ranges":[{"startOffset":192,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"throwTypeError","ranges":[{"startOffset":516,"endOffset":556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":589,"endOffset":988,"count":1},{"startOffset":929,"endOffset":981,"count":0}],"isBlockCoverage":true},{"functionName":"getProto","ranges":[{"startOffset":1151,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"doEval","ranges":[{"startOffset":5304,"endOffset":5974,"count":0}],"isBlockCoverage":false},{"functionName":"stringToPath","ranges":[{"startOffset":9440,"endOffset":9991,"count":16},{"startOffset":9564,"endOffset":9579,"count":9},{"startOffset":9581,"endOffset":9661,"count":0},{"startOffset":9684,"endOffset":9700,"count":9},{"startOffset":9702,"endOffset":9782,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9831,"endOffset":9971,"count":38},{"startOffset":9908,"endOffset":9949,"count":0}],"isBlockCoverage":true},{"functionName":"getBaseIntrinsic","ranges":[{"startOffset":10038,"endOffset":10714,"count":16},{"startOffset":10169,"endOffset":10254,"count":0},{"startOffset":10366,"endOffset":10405,"count":0},{"startOffset":10441,"endOffset":10457,"count":0},{"startOffset":10459,"endOffset":10567,"count":0},{"startOffset":10644,"endOffset":10713,"count":0}],"isBlockCoverage":true},{"functionName":"GetIntrinsic","ranges":[{"startOffset":10734,"endOffset":13321,"count":16},{"startOffset":10830,"endOffset":10903,"count":0},{"startOffset":10930,"endOffset":10966,"count":11},{"startOffset":10968,"endOffset":11041,"count":0},{"startOffset":11085,"endOffset":11201,"count":0},{"startOffset":11288,"endOffset":11292,"count":0},{"startOffset":11522,"endOffset":11605,"count":0},{"startOffset":11664,"endOffset":13304,"count":22},{"startOffset":11888,"endOffset":11905,"count":0},{"startOffset":11910,"endOffset":11998,"count":0},{"startOffset":12039,"endOffset":12074,"count":0},{"startOffset":12210,"endOffset":12257,"count":5},{"startOffset":12257,"endOffset":13301,"count":17},{"startOffset":12309,"endOffset":12478,"count":0},{"startOffset":12520,"endOffset":13139,"count":13},{"startOffset":13030,"endOffset":13063,"count":0},{"startOffset":13065,"endOffset":13095,"count":0},{"startOffset":13139,"endOffset":13209,"count":4}],"isBlockCoverage":true}]},{"scriptId":"774","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":131,"endOffset":418,"count":1},{"startOffset":200,"endOffset":217,"count":0},{"startOffset":253,"endOffset":270,"count":0},{"startOffset":315,"endOffset":332,"count":0},{"startOffset":373,"endOffset":390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"775","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1761,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1759,"count":1},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1198,"count":0},{"startOffset":1200,"endOffset":1320,"count":0},{"startOffset":1322,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1758,"count":0}],"isBlockCoverage":true}]},{"scriptId":"776","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/has-proto/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"hasProto","ranges":[{"startOffset":81,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"777","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/function-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1},{"startOffset":107,"endOffset":124,"count":0}],"isBlockCoverage":true}]},{"scriptId":"778","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/function-bind/implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1463,"count":1}],"isBlockCoverage":true},{"functionName":"bind","ranges":[{"startOffset":247,"endOffset":1461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/has/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":129,"count":1}],"isBlockCoverage":true}]},{"scriptId":"780","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/call-bind/callBound.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":413,"count":1}],"isBlockCoverage":true},{"functionName":"callBoundIntrinsic","ranges":[{"startOffset":177,"endOffset":411,"count":6},{"startOffset":390,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"781","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/call-bind/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1306,"count":1},{"startOffset":268,"endOffset":295,"count":0},{"startOffset":551,"endOffset":629,"count":0},{"startOffset":1261,"endOffset":1305,"count":0}],"isBlockCoverage":true},{"functionName":"callBind","ranges":[{"startOffset":650,"endOffset":1078,"count":7}],"isBlockCoverage":true},{"functionName":"applyBind","ranges":[{"startOffset":1097,"endOffset":1169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/object-inspect/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18582,"count":1},{"startOffset":180,"endOffset":186,"count":0},{"startOffset":301,"endOffset":307,"count":0},{"startOffset":539,"endOffset":545,"count":0},{"startOffset":660,"endOffset":666,"count":0},{"startOffset":839,"endOffset":845,"count":0},{"startOffset":968,"endOffset":974,"count":0},{"startOffset":1101,"endOffset":1107,"count":0},{"startOffset":1717,"endOffset":1723,"count":0},{"startOffset":1880,"endOffset":1886,"count":0},{"startOffset":2132,"endOffset":2142,"count":0},{"startOffset":2184,"endOffset":2190,"count":0},{"startOffset":2292,"endOffset":2316,"count":0},{"startOffset":2342,"endOffset":2531,"count":0},{"startOffset":3403,"endOffset":3409,"count":0},{"startOffset":12673,"endOffset":12714,"count":0}],"isBlockCoverage":true},{"functionName":"gPO","ranges":[{"startOffset":2426,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericSeparator","ranges":[{"startOffset":2534,"endOffset":3256,"count":0}],"isBlockCoverage":false},{"functionName":"inspect_","ranges":[{"startOffset":3429,"endOffset":10713,"count":0}],"isBlockCoverage":false},{"functionName":"wrapQuotes","ranges":[{"startOffset":10716,"endOffset":10880,"count":0}],"isBlockCoverage":false},{"functionName":"quote","ranges":[{"startOffset":10882,"endOffset":10956,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":10958,"endOffset":11093,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":11094,"endOffset":11227,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":11228,"endOffset":11365,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":11366,"endOffset":11501,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":11502,"endOffset":11639,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":11640,"endOffset":11777,"count":0}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":11778,"endOffset":11917,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":12027,"endOffset":12408,"count":1},{"startOffset":12079,"endOffset":12158,"count":0},{"startOffset":12220,"endOffset":12260,"count":0},{"startOffset":12261,"endOffset":12276,"count":0},{"startOffset":12278,"endOffset":12407,"count":0}],"isBlockCoverage":true},{"functionName":"isBigInt","ranges":[{"startOffset":12410,"endOffset":12626,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":12676,"endOffset":12714,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":12716,"endOffset":12776,"count":0}],"isBlockCoverage":false},{"functionName":"toStr","ranges":[{"startOffset":12778,"endOffset":12838,"count":0}],"isBlockCoverage":false},{"functionName":"nameOf","ranges":[{"startOffset":12840,"endOffset":13017,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":13019,"endOffset":13201,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":13203,"endOffset":13542,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakMap","ranges":[{"startOffset":13544,"endOffset":13924,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakRef","ranges":[{"startOffset":13926,"endOffset":14133,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":14135,"endOffset":14474,"count":0}],"isBlockCoverage":false},{"functionName":"isWeakSet","ranges":[{"startOffset":14476,"endOffset":14856,"count":0}],"isBlockCoverage":false},{"functionName":"isElement","ranges":[{"startOffset":14858,"endOffset":15122,"count":0}],"isBlockCoverage":false},{"functionName":"inspectString","ranges":[{"startOffset":15124,"endOffset":15634,"count":0}],"isBlockCoverage":false},{"functionName":"lowbyte","ranges":[{"startOffset":15636,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"markBoxed","ranges":[{"startOffset":15906,"endOffset":15967,"count":0}],"isBlockCoverage":false},{"functionName":"weakCollectionOf","ranges":[{"startOffset":15969,"endOffset":16032,"count":0}],"isBlockCoverage":false},{"functionName":"collectionOf","ranges":[{"startOffset":16034,"endOffset":16241,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineValues","ranges":[{"startOffset":16243,"endOffset":16418,"count":0}],"isBlockCoverage":false},{"functionName":"getIndent","ranges":[{"startOffset":16420,"endOffset":16806,"count":0}],"isBlockCoverage":false},{"functionName":"indentedJoin","ranges":[{"startOffset":16808,"endOffset":17019,"count":0}],"isBlockCoverage":false},{"functionName":"arrObjKeys","ranges":[{"startOffset":17021,"endOffset":18581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/object-inspect/util.inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"784","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/qs/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":317,"count":1},{"startOffset":209,"endOffset":296,"count":256},{"startOffset":245,"endOffset":250,"count":16},{"startOffset":251,"endOffset":255,"count":240}],"isBlockCoverage":true},{"functionName":"compactQueue","ranges":[{"startOffset":342,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"arrayToObject","ranges":[{"startOffset":803,"endOffset":1079,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1094,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"assignSingleSource","ranges":[{"startOffset":2722,"endOffset":2897,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2913,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3310,"endOffset":5309,"count":0}],"isBlockCoverage":false},{"functionName":"compact","ranges":[{"startOffset":5326,"endOffset":5934,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":5952,"endOffset":6048,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":6066,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"combine","ranges":[{"startOffset":6274,"endOffset":6328,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMap","ranges":[{"startOffset":6346,"endOffset":6571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/qs/lib/formats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":true},{"functionName":"RFC1738","ranges":[{"startOffset":237,"endOffset":327,"count":0}],"isBlockCoverage":false},{"functionName":"RFC3986","ranges":[{"startOffset":346,"endOffset":408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/qs/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9374,"count":1}],"isBlockCoverage":true},{"functionName":"interpretNumericEntities","ranges":[{"startOffset":567,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayValue","ranges":[{"startOffset":742,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringValues","ranges":[{"startOffset":1550,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"parseObject","ranges":[{"startOffset":3700,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"parseQueryStringKeys","ranges":[{"startOffset":4844,"endOffset":6346,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParseOptions","ranges":[{"startOffset":6377,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":8618,"endOffset":9372,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/view.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3325,"count":1}],"isBlockCoverage":true},{"functionName":"View","ranges":[{"startOffset":854,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":1962,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2485,"endOffset":2603,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2750,"endOffset":3091,"count":0}],"isBlockCoverage":false},{"functionName":"tryStat","ranges":[{"startOffset":3189,"endOffset":3324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5955,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":1107,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeType","ranges":[{"startOffset":1717,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"exports.normalizeTypes","ranges":[{"startOffset":1996,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"acceptParams","ranges":[{"startOffset":2747,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileETag","ranges":[{"startOffset":3271,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"compileQueryParser","ranges":[{"startOffset":3789,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileTrust","ranges":[{"startOffset":4390,"endOffset":4852,"count":0}],"isBlockCoverage":false},{"functionName":"setCharset","ranges":[{"startOffset":5025,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"createETagGenerator","ranges":[{"startOffset":5438,"endOffset":5651,"count":2}],"isBlockCoverage":true},{"functionName":"generateETag","ranges":[{"startOffset":5488,"endOffset":5649,"count":0}],"isBlockCoverage":false},{"functionName":"parseExtendedQueryString","ranges":[{"startOffset":5740,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"newObject","ranges":[{"startOffset":5917,"endOffset":5954,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1},{"startOffset":438,"endOffset":550,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":241,"endOffset":327,"count":1},{"startOffset":296,"endOffset":325,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":552,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":796,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":1002,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1363,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1526,"endOffset":1669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/content-disposition/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10594,"count":1}],"isBlockCoverage":true},{"functionName":"contentDisposition","ranges":[{"startOffset":4223,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"createparams","ranges":[{"startOffset":4683,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6124,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"decodefield","ranges":[{"startOffset":6908,"endOffset":7503,"count":0}],"isBlockCoverage":false},{"functionName":"getlatin1","ranges":[{"startOffset":7609,"endOffset":7739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7854,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"pdecode","ranges":[{"startOffset":9510,"endOffset":9589,"count":0}],"isBlockCoverage":false},{"functionName":"pencode","ranges":[{"startOffset":9697,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":9905,"endOffset":10011,"count":0}],"isBlockCoverage":false},{"functionName":"ustring","ranges":[{"startOffset":10128,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"ContentDisposition","ranges":[{"startOffset":10493,"endOffset":10593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/content-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5002,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":1786,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2587,"endOffset":3947,"count":0}],"isBlockCoverage":false},{"functionName":"getcontenttype","ranges":[{"startOffset":4054,"endOffset":4457,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":4558,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"ContentType","ranges":[{"startOffset":4911,"endOffset":5001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23502,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6571,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":6790,"endOffset":6993,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7131,"endOffset":7777,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7915,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8263,"endOffset":8405,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8519,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8863,"endOffset":9003,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9112,"endOffset":9331,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9445,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9722,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10252,"endOffset":10981,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11102,"endOffset":12769,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":12870,"endOffset":15093,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15207,"endOffset":16062,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16178,"endOffset":16639,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":16784,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17481,"endOffset":17821,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":17998,"endOffset":18867,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":18954,"endOffset":19104,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19204,"endOffset":19386,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19462,"endOffset":19655,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":19777,"endOffset":19903,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20013,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpError","ranges":[{"startOffset":20441,"endOffset":20644,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20793,"endOffset":20899,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":21014,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21472,"endOffset":21662,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":21786,"endOffset":21911,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":22043,"endOffset":22293,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22380,"endOffset":22522,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22599,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23323,"endOffset":23501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6391,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":783,"endOffset":863,"count":63}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":936,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2487,"endOffset":2668,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2530,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2735,"endOffset":3762,"count":29}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2838,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"createIsHttpErrorFunction","ranges":[{"startOffset":3839,"endOffset":4211,"count":1}],"isBlockCoverage":true},{"functionName":"isHttpError","ranges":[{"startOffset":3897,"endOffset":4209,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":4278,"endOffset":5306,"count":12}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":4381,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":5373,"endOffset":5574,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5669,"endOffset":6223,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5751,"endOffset":6220,"count":63},{"startOffset":5889,"endOffset":5984,"count":29},{"startOffset":5991,"endOffset":6086,"count":12},{"startOffset":6113,"endOffset":6216,"count":41}],"isBlockCoverage":true},{"functionName":"toClassName","ranges":[{"startOffset":6290,"endOffset":6390,"count":41},{"startOffset":6361,"endOffset":6377,"count":40},{"startOffset":6382,"endOffset":6388,"count":1}],"isBlockCoverage":true}]},{"scriptId":"794","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":298,"endOffset":503,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":366,"endOffset":452,"count":133}],"isBlockCoverage":true}]},{"scriptId":"795","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4258,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":556,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":1004,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"closeZlibStream","ranges":[{"startOffset":1372,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"destroyZlibStream","ranges":[{"startOffset":2143,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"hasDestroy","ranges":[{"startOffset":3112,"endOffset":3222,"count":0}],"isBlockCoverage":false},{"functionName":"isEventEmitter","ranges":[{"startOffset":3282,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"isFsReadStream","ranges":[{"startOffset":3423,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"isZlibStream","ranges":[{"startOffset":3559,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3903,"endOffset":3922,"count":0}],"isBlockCoverage":false},{"functionName":"onDrainClearBinding","ranges":[{"startOffset":4020,"endOffset":4079,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":4138,"endOffset":4257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"798","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":1},{"startOffset":603,"endOffset":1092,"count":844},{"startOffset":673,"endOffset":953,"count":1069},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":1},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"801","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/proxy-addr/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6000,"count":1}],"isBlockCoverage":true},{"functionName":"alladdrs","ranges":[{"startOffset":879,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":1323,"endOffset":1948,"count":0}],"isBlockCoverage":false},{"functionName":"compileRangeSubnets","ranges":[{"startOffset":2042,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"compileTrust","ranges":[{"startOffset":2346,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"parseipNotation","ranges":[{"startOffset":2683,"endOffset":3531,"count":0}],"isBlockCoverage":false},{"functionName":"parseNetmask","ranges":[{"startOffset":3625,"endOffset":3786,"count":0}],"isBlockCoverage":false},{"functionName":"proxyaddr","ranges":[{"startOffset":3919,"endOffset":4187,"count":0}],"isBlockCoverage":false},{"functionName":"trustNone","ranges":[{"startOffset":4256,"endOffset":4296,"count":0}],"isBlockCoverage":false},{"functionName":"trustMulti","ranges":[{"startOffset":4396,"endOffset":5273,"count":0}],"isBlockCoverage":false},{"functionName":"trustSingle","ranges":[{"startOffset":5370,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/forwarded/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"forwarded","ranges":[{"startOffset":310,"endOffset":625,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketAddr","ranges":[{"startOffset":735,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":942,"endOffset":1577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/ipaddr.js/lib/ipaddr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19333,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19319,"count":1},{"startOffset":257,"endOffset":297,"count":0}],"isBlockCoverage":true},{"functionName":"matchCIDR","ranges":[{"startOffset":313,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.subnetMatch","ranges":[{"startOffset":828,"endOffset":1475,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1495,"endOffset":4290,"count":1}],"isBlockCoverage":true},{"functionName":"IPv4","ranges":[{"startOffset":1512,"endOffset":1917,"count":15},{"startOffset":1592,"endOffset":1666,"count":0},{"startOffset":1720,"endOffset":1883,"count":60},{"startOffset":1794,"endOffset":1875,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv4.IPv4.kind","ranges":[{"startOffset":1945,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toString","ranges":[{"startOffset":2017,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toNormalizedString","ranges":[{"startOffset":2114,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toByteArray","ranges":[{"startOffset":2198,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.match","ranges":[{"startOffset":2281,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.range","ranges":[{"startOffset":3342,"endOffset":3419,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.toIPv4MappedAddress","ranges":[{"startOffset":3463,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.IPv4.prefixLengthFromSubnetMask","ranges":[{"startOffset":3595,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parser","ranges":[{"startOffset":4545,"endOffset":5637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5657,"endOffset":11106,"count":1}],"isBlockCoverage":true},{"functionName":"IPv6","ranges":[{"startOffset":5674,"endOffset":6372,"count":11},{"startOffset":5771,"endOffset":5921,"count":0},{"startOffset":5988,"endOffset":6073,"count":0},{"startOffset":6148,"endOffset":6308,"count":88},{"startOffset":6219,"endOffset":6300,"count":0},{"startOffset":6327,"endOffset":6366,"count":0}],"isBlockCoverage":true},{"functionName":"ipaddr.IPv6.IPv6.kind","ranges":[{"startOffset":6400,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toString","ranges":[{"startOffset":6472,"endOffset":6564,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toRFC5952String","ranges":[{"startOffset":6604,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toByteArray","ranges":[{"startOffset":7228,"endOffset":7491,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toNormalizedString","ranges":[{"startOffset":7534,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toFixedLengthString","ranges":[{"startOffset":8040,"endOffset":8519,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.match","ranges":[{"startOffset":8549,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.range","ranges":[{"startOffset":9656,"endOffset":9733,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.isIPv4MappedAddress","ranges":[{"startOffset":9777,"endOffset":9839,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.toIPv4Address","ranges":[{"startOffset":9877,"endOffset":10196,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.IPv6.prefixLengthFromSubnetMask","ranges":[{"startOffset":10247,"endOffset":11082,"count":0}],"isBlockCoverage":false},{"functionName":"expandIPv6","ranges":[{"startOffset":11548,"endOffset":12889,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parser","ranges":[{"startOffset":12915,"endOffset":13759,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isIPv4.ipaddr.IPv6.isIPv6","ranges":[{"startOffset":13806,"endOffset":13869,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValid","ranges":[{"startOffset":13896,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.isValidFourPartDecimal","ranges":[{"startOffset":14104,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.isValid","ranges":[{"startOffset":14303,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parse","ranges":[{"startOffset":14632,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parse","ranges":[{"startOffset":14861,"endOffset":15086,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.parseCIDR","ranges":[{"startOffset":15115,"endOffset":15620,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.subnetMaskFromPrefixLength","ranges":[{"startOffset":15666,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.broadcastAddressFromCIDR","ranges":[{"startOffset":16213,"endOffset":16814,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv4.networkAddressFromCIDR","ranges":[{"startOffset":16856,"endOffset":17451,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.IPv6.parseCIDR","ranges":[{"startOffset":17480,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.isValid","ranges":[{"startOffset":18008,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parse","ranges":[{"startOffset":18121,"endOffset":18406,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.parseCIDR","ranges":[{"startOffset":18430,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.fromByteArray","ranges":[{"startOffset":18789,"endOffset":19089,"count":0}],"isBlockCoverage":false},{"functionName":"ipaddr.process","ranges":[{"startOffset":19111,"endOffset":19315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":169,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12505,"count":1}],"isBlockCoverage":true},{"functionName":"header","ranges":[{"startOffset":1150,"endOffset":1565,"count":0}],"isBlockCoverage":false},{"functionName":"req.accepts","ranges":[{"startOffset":2913,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsEncodings","ranges":[{"startOffset":3158,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsCharsets","ranges":[{"startOffset":3585,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"req.acceptsLanguages","ranges":[{"startOffset":4002,"endOffset":4097,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":5220,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"param","ranges":[{"startOffset":5806,"endOffset":6298,"count":0}],"isBlockCoverage":false},{"functionName":"is","ranges":[{"startOffset":6898,"endOffset":7154,"count":0}],"isBlockCoverage":false},{"functionName":"protocol","ranges":[{"startOffset":7546,"endOffset":8029,"count":0}],"isBlockCoverage":false},{"functionName":"secure","ranges":[{"startOffset":8158,"endOffset":8214,"count":0}],"isBlockCoverage":false},{"functionName":"ip","ranges":[{"startOffset":8416,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"ips","ranges":[{"startOffset":8860,"endOffset":9086,"count":0}],"isBlockCoverage":false},{"functionName":"subdomains","ranges":[{"startOffset":9633,"endOffset":9894,"count":0}],"isBlockCoverage":false},{"functionName":"path","ranges":[{"startOffset":10016,"endOffset":10066,"count":0}],"isBlockCoverage":false},{"functionName":"hostname","ranges":[{"startOffset":10314,"endOffset":10948,"count":0}],"isBlockCoverage":false},{"functionName":"host","ranges":[{"startOffset":11052,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11295,"endOffset":11736,"count":0}],"isBlockCoverage":false},{"functionName":"stale","ranges":[{"startOffset":11921,"endOffset":11962,"count":0}],"isBlockCoverage":false},{"functionName":"xhr","ranges":[{"startOffset":12084,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"defineGetter","ranges":[{"startOffset":12355,"endOffset":12504,"count":11}],"isBlockCoverage":true}]},{"scriptId":"808","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/accepts/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"Accepts","ranges":[{"startOffset":411,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.type.Accepts.types","ranges":[{"startOffset":1772,"endOffset":2431,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.encoding.Accepts.encodings","ranges":[{"startOffset":2760,"endOffset":3232,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.charset.Accepts.charsets","ranges":[{"startOffset":3591,"endOffset":4048,"count":0}],"isBlockCoverage":false},{"functionName":"Accepts.lang.Accepts.langs.Accepts.language.Accepts.languages","ranges":[{"startOffset":4422,"endOffset":4894,"count":0}],"isBlockCoverage":false},{"functionName":"extToMime","ranges":[{"startOffset":4993,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"validMime","ranges":[{"startOffset":5188,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/negotiator/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"Negotiator","ranges":[{"startOffset":593,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"charset","ranges":[{"startOffset":764,"endOffset":857,"count":0}],"isBlockCoverage":false},{"functionName":"charsets","ranges":[{"startOffset":892,"endOffset":1003,"count":0}],"isBlockCoverage":false},{"functionName":"encoding","ranges":[{"startOffset":1038,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"encodings","ranges":[{"startOffset":1169,"endOffset":1283,"count":0}],"isBlockCoverage":false},{"functionName":"language","ranges":[{"startOffset":1318,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"languages","ranges":[{"startOffset":1449,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"mediaType","ranges":[{"startOffset":1599,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"mediaTypes","ranges":[{"startOffset":1733,"endOffset":1837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/negotiator/lib/charset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptCharset","ranges":[{"startOffset":471,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"parseCharset","ranges":[{"startOffset":846,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"getCharsetPriority","ranges":[{"startOffset":1339,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1741,"endOffset":1995,"count":0}],"isBlockCoverage":false},{"functionName":"preferredCharsets","ranges":[{"startOffset":2078,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":2762,"endOffset":2865,"count":0}],"isBlockCoverage":false},{"functionName":"getFullCharset","ranges":[{"startOffset":2916,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3031,"endOffset":3080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/negotiator/lib/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3506,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptEncoding","ranges":[{"startOffset":476,"endOffset":1232,"count":0}],"isBlockCoverage":false},{"functionName":"parseEncoding","ranges":[{"startOffset":1309,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingPriority","ranges":[{"startOffset":1810,"endOffset":2153,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2216,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"preferredEncodings","ranges":[{"startOffset":2560,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3184,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"getFullEncoding","ranges":[{"startOffset":3339,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3456,"endOffset":3505,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/negotiator/lib/language.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"parseAcceptLanguage","ranges":[{"startOffset":493,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"parseLanguage","ranges":[{"startOffset":875,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"getLanguagePriority","ranges":[{"startOffset":1445,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":1851,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"preferredLanguages","ranges":[{"startOffset":2400,"endOffset":3046,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3091,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"getFullLanguage","ranges":[{"startOffset":3246,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3359,"endOffset":3408,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/negotiator/lib/mediaType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5358,"count":1}],"isBlockCoverage":true},{"functionName":"parseAccept","ranges":[{"startOffset":484,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parseMediaType","ranges":[{"startOffset":861,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getMediaTypePriority","ranges":[{"startOffset":1754,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"specify","ranges":[{"startOffset":2155,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"preferredMediaTypes","ranges":[{"startOffset":2948,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"compareSpecs","ranges":[{"startOffset":3621,"endOffset":3724,"count":0}],"isBlockCoverage":false},{"functionName":"getFullType","ranges":[{"startOffset":3772,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isQuality","ranges":[{"startOffset":3902,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"quoteCount","ranges":[{"startOffset":4017,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"splitKeyValuePair","ranges":[{"startOffset":4236,"endOffset":4465,"count":0}],"isBlockCoverage":false},{"functionName":"splitMediaTypes","ranges":[{"startOffset":4532,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"splitParameters","ranges":[{"startOffset":4913,"endOffset":5357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3877,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":764,"endOffset":879,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":883,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1139,"endOffset":1460,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1464,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2146,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2695,"endOffset":3160,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3164,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3222,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3383,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3538,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"815","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":743,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":818,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1791,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1848,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1899,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":1984,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2338,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2507,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2717,"endOffset":2863,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":2922,"endOffset":3142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"816","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/type-is/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5562,"count":1}],"isBlockCoverage":true},{"functionName":"typeis","ranges":[{"startOffset":798,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"hasbody","ranges":[{"startOffset":1805,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"typeofrequest","ranges":[{"startOffset":2796,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3577,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"mimeMatch","ranges":[{"startOffset":4188,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeType","ranges":[{"startOffset":5098,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"tryNormalizeType","ranges":[{"startOffset":5409,"endOffset":5561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/media-typer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6375,"count":1}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2747,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3912,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"getcontenttype","ranges":[{"startOffset":5138,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"qstring","ranges":[{"startOffset":5497,"endOffset":5786,"count":0}],"isBlockCoverage":false},{"functionName":"splitType","ranges":[{"startOffset":5905,"endOffset":6374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"818","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"819","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/express/lib/response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28014,"count":1}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1392,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"res.links","ranges":[{"startOffset":1955,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2419,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":5771,"endOffset":6598,"count":0}],"isBlockCoverage":false},{"functionName":"jsonp","ranges":[{"startOffset":6809,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"sendStatus","ranges":[{"startOffset":8967,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":10530,"endOffset":11509,"count":0}],"isBlockCoverage":false},{"functionName":"res.sendfile","ranges":[{"startOffset":12893,"endOffset":13504,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14257,"endOffset":15493,"count":0}],"isBlockCoverage":false},{"functionName":"contentType","ranges":[{"startOffset":15921,"endOffset":16063,"count":0}],"isBlockCoverage":false},{"functionName":"res.format","ranges":[{"startOffset":17498,"endOffset":18033,"count":0}],"isBlockCoverage":false},{"functionName":"attachment","ranges":[{"startOffset":18210,"endOffset":18381,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":18785,"endOffset":19075,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":19494,"endOffset":20156,"count":0}],"isBlockCoverage":false},{"functionName":"res.get","ranges":[{"startOffset":20270,"endOffset":20320,"count":0}],"isBlockCoverage":false},{"functionName":"clearCookie","ranges":[{"startOffset":20482,"endOffset":20626,"count":0}],"isBlockCoverage":false},{"functionName":"res.cookie","ranges":[{"startOffset":21257,"endOffset":21983,"count":0}],"isBlockCoverage":false},{"functionName":"location","ranges":[{"startOffset":22359,"endOffset":22581,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":23049,"endOffset":24071,"count":0}],"isBlockCoverage":false},{"functionName":"res.vary","ranges":[{"startOffset":24277,"endOffset":24492,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":24878,"endOffset":25395,"count":0}],"isBlockCoverage":false},{"functionName":"sendfile","ranges":[{"startOffset":25427,"endOffset":27061,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":27342,"endOffset":28013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/cookie-signature/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"exports.sign","ranges":[{"startOffset":217,"endOffset":554,"count":0}],"isBlockCoverage":false},{"functionName":"exports.unsign","ranges":[{"startOffset":781,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"sha1","ranges":[{"startOffset":1146,"endOffset":1229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/cookie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5224,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":819,"endOffset":1766,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2150,"endOffset":4450,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":4577,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":4754,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"isDate","ranges":[{"startOffset":4889,"endOffset":4991,"count":0}],"isBlockCoverage":false},{"functionName":"tryDecode","ranges":[{"startOffset":5120,"endOffset":5223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/vary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":695,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1868,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"vary","ranges":[{"startOffset":2540,"endOffset":2929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":175,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"825","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/lib/types/json.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5012,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":1019,"endOffset":3233,"count":1},{"startOffset":1163,"endOffset":1175,"count":0},{"startOffset":1386,"endOffset":1417,"count":0},{"startOffset":1419,"endOffset":1482,"count":0},{"startOffset":1610,"endOffset":1616,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":1620,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"jsonParser","ranges":[{"startOffset":2255,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"createStrictSyntaxError","ranges":[{"startOffset":3388,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"firstchar","ranges":[{"startOffset":3905,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":4108,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeJsonSyntaxError","ranges":[{"startOffset":4396,"endOffset":4810,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":4902,"endOffset":5011,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":4941,"endOffset":5009,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/bytes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3613,"count":1}],"isBlockCoverage":true},{"functionName":"bytes","ranges":[{"startOffset":941,"endOffset":1130,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1598,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":3612,"count":1},{"startOffset":3049,"endOffset":3063,"count":0},{"startOffset":3065,"endOffset":3086,"count":0},{"startOffset":3119,"endOffset":3141,"count":0},{"startOffset":3275,"endOffset":3387,"count":0},{"startOffset":3542,"endOffset":3564,"count":0}],"isBlockCoverage":true}]},{"scriptId":"827","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/lib/read.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4325,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":664,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"contentstream","ranges":[{"startOffset":3112,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":4174,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"828","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/raw-body/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6902,"count":1}],"isBlockCoverage":true},{"functionName":"getDecoder","ranges":[{"startOffset":633,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"getRawBody","ranges":[{"startOffset":1200,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"halt","ranges":[{"startOffset":2534,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"readStream","ranges":[{"startOffset":2896,"endOffset":6280,"count":0}],"isBlockCoverage":false},{"functionName":"tryRequireAsyncHooks","ranges":[{"startOffset":6333,"endOffset":6445,"count":1},{"startOffset":6414,"endOffset":6443,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6567,"endOffset":6901,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/iconv-lite/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5120,"count":1},{"startOffset":4754,"endOffset":4776,"count":0},{"startOffset":4924,"endOffset":5119,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":585,"endOffset":877,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":894,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"encodingExists","ranges":[{"startOffset":1501,"endOffset":1639,"count":0}],"isBlockCoverage":false},{"functionName":"getCodec","ranges":[{"startOffset":1879,"endOffset":3589,"count":0}],"isBlockCoverage":false},{"functionName":"iconv._canonicalizeEncoding","ranges":[{"startOffset":3621,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"getEncoder","ranges":[{"startOffset":3825,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":4122,"endOffset":4411,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/safer-buffer/safer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2110,"count":1},{"startOffset":163,"endOffset":294,"count":14},{"startOffset":200,"endOffset":208,"count":0},{"startOffset":236,"endOffset":255,"count":13},{"startOffset":257,"endOffset":265,"count":2},{"startOffset":265,"endOffset":294,"count":12},{"startOffset":346,"endOffset":487,"count":11},{"startOffset":383,"endOffset":391,"count":0},{"startOffset":420,"endOffset":448,"count":10},{"startOffset":450,"endOffset":458,"count":2},{"startOffset":458,"endOffset":487,"count":9},{"startOffset":583,"endOffset":1070,"count":0},{"startOffset":1090,"endOffset":1642,"count":0},{"startOffset":1673,"endOffset":1900,"count":0},{"startOffset":1924,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"Safer.from","ranges":[{"startOffset":600,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"Safer.alloc","ranges":[{"startOffset":1108,"endOffset":1640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"831","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/iconv-lite/lib/bom-handling.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1109,"count":1}],"isBlockCoverage":true},{"functionName":"PrependBOMWrapper","ranges":[{"startOffset":79,"endOffset":179,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.write","ranges":[{"startOffset":217,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"PrependBOMWrapper.end","ranges":[{"startOffset":394,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper","ranges":[{"startOffset":560,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper.write","ranges":[{"startOffset":727,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"StripBOMWrapper.end","ranges":[{"startOffset":1062,"endOffset":1107,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/iconv-lite/lib/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":199,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"encodeStream","ranges":[{"startOffset":277,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"decodeStream","ranges":[{"startOffset":441,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream","ranges":[{"startOffset":905,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._transform","ranges":[{"startOffset":1312,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream._flush","ranges":[{"startOffset":1670,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteEncoderStream.collect","ranges":[{"startOffset":1886,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream","ranges":[{"startOffset":2189,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._transform","ranges":[{"startOffset":2570,"endOffset":2898,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream._flush","ranges":[{"startOffset":2942,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"IconvLiteDecoderStream.collect","ranges":[{"startOffset":3189,"endOffset":3385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"833","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/iconv-lite/lib/extend-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8701,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":229,"endOffset":8700,"count":1},{"startOffset":564,"endOffset":602,"count":0}],"isBlockCoverage":true},{"functionName":"extendNodeEncodings","ranges":[{"startOffset":638,"endOffset":7624,"count":0}],"isBlockCoverage":false},{"functionName":"undoExtendNodeEncodings","ranges":[{"startOffset":7714,"endOffset":8698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"834","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/lib/types/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1884,"count":1}],"isBlockCoverage":true},{"functionName":"raw","ranges":[{"startOffset":452,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":1774,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"835","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4570,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"836","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/lib/types/text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":497,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":1930,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":2175,"endOffset":2284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/body-parser/lib/types/urlencoded.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5797,"count":1}],"isBlockCoverage":true},{"functionName":"urlencoded","ranges":[{"startOffset":717,"endOffset":2669,"count":0}],"isBlockCoverage":false},{"functionName":"extendedparser","ranges":[{"startOffset":2744,"endOffset":3638,"count":0}],"isBlockCoverage":false},{"functionName":"getCharset","ranges":[{"startOffset":3724,"endOffset":3877,"count":0}],"isBlockCoverage":false},{"functionName":"parameterCount","ranges":[{"startOffset":4019,"endOffset":4248,"count":0}],"isBlockCoverage":false},{"functionName":"parser","ranges":[{"startOffset":4367,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"simpleparser","ranges":[{"startOffset":4828,"endOffset":5595,"count":0}],"isBlockCoverage":false},{"functionName":"typeChecker","ranges":[{"startOffset":5687,"endOffset":5796,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/spec/dao.integration.spec.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3530,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":560,"endOffset":3527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":595,"endOffset":650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":667,"endOffset":1168,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1185,"endOffset":1543,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1577,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1608,"endOffset":1811,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1852,"endOffset":2019,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1883,"endOffset":2011,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2048,"endOffset":2608,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2079,"endOffset":2600,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2640,"endOffset":3034,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2671,"endOffset":3026,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3066,"endOffset":3523,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3097,"endOffset":3515,"count":1}],"isBlockCoverage":true}]},{"scriptId":"839","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1619,"count":1}],"isBlockCoverage":true}]},{"scriptId":"840","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/connection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38088,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1949,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":2199,"endOffset":2754,"count":30},{"startOffset":2253,"endOffset":2289,"count":0},{"startOffset":2386,"endOffset":2467,"count":0},{"startOffset":2488,"endOffset":2506,"count":0},{"startOffset":2508,"endOffset":2553,"count":0}],"isBlockCoverage":true},{"functionName":"_sessRelease","ranges":[{"startOffset":2758,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"_determineElementObjType","ranges":[{"startOffset":3382,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"_parseElementType","ranges":[{"startOffset":5159,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"_parseTDS","ranges":[{"startOffset":7606,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"_populateDbObjectTypeInfo","ranges":[{"startOffset":9365,"endOffset":13531,"count":0}],"isBlockCoverage":false},{"functionName":"_populatePartialDbObjectTypes","ranges":[{"startOffset":13978,"endOffset":14598,"count":144},{"startOffset":14068,"endOffset":14594,"count":0}],"isBlockCoverage":true},{"functionName":"commit","ranges":[{"startOffset":14602,"endOffset":14727,"count":31},{"startOffset":14723,"endOffset":14726,"count":30}],"isBlockCoverage":true},{"functionName":"breakExecution","ranges":[{"startOffset":14731,"endOffset":14800,"count":0}],"isBlockCoverage":false},{"functionName":"isHealthy","ranges":[{"startOffset":14804,"endOffset":14958,"count":0}],"isBlockCoverage":false},{"functionName":"isPooled","ranges":[{"startOffset":14962,"endOffset":15018,"count":43},{"startOffset":14999,"endOffset":15005,"count":0}],"isBlockCoverage":true},{"functionName":"getConnectionCookieByUUID","ranges":[{"startOffset":15422,"endOffset":15730,"count":43},{"startOffset":15486,"endOffset":15707,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":15840,"endOffset":20778,"count":43},{"startOffset":15895,"endOffset":15958,"count":0},{"startOffset":17154,"endOffset":17353,"count":0},{"startOffset":17681,"endOffset":17753,"count":0},{"startOffset":18127,"endOffset":18275,"count":0},{"startOffset":18529,"endOffset":18600,"count":0},{"startOffset":18961,"endOffset":18980,"count":0},{"startOffset":18982,"endOffset":19355,"count":0},{"startOffset":19456,"endOffset":19476,"count":0},{"startOffset":19686,"endOffset":19706,"count":0},{"startOffset":19708,"endOffset":20216,"count":0},{"startOffset":20362,"endOffset":20429,"count":0},{"startOffset":20563,"endOffset":20623,"count":0},{"startOffset":20661,"endOffset":20731,"count":0}],"isBlockCoverage":true},{"functionName":"_returnStatement","ranges":[{"startOffset":20989,"endOffset":21452,"count":134},{"startOffset":21355,"endOffset":21448,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21090,"endOffset":21144,"count":339}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21218,"endOffset":21275,"count":40}],"isBlockCoverage":true},{"functionName":"_addCursorToClose","ranges":[{"startOffset":21689,"endOffset":21932,"count":2},{"startOffset":21763,"endOffset":21888,"count":0}],"isBlockCoverage":true},{"functionName":"_adjustStatementCache","ranges":[{"startOffset":22170,"endOffset":22572,"count":71},{"startOffset":22259,"endOffset":22568,"count":0}],"isBlockCoverage":true},{"functionName":"_prepare","ranges":[{"startOffset":22828,"endOffset":23088,"count":136}],"isBlockCoverage":true},{"functionName":"_bind","ranges":[{"startOffset":23306,"endOffset":25815,"count":340},{"startOffset":23721,"endOffset":23748,"count":0},{"startOffset":23750,"endOffset":24489,"count":0},{"startOffset":24634,"endOffset":25068,"count":0},{"startOffset":25093,"endOffset":25707,"count":4},{"startOffset":25161,"endOffset":25191,"count":0},{"startOffset":25193,"endOffset":25281,"count":0},{"startOffset":25393,"endOffset":25455,"count":0},{"startOffset":25501,"endOffset":25581,"count":0},{"startOffset":25707,"endOffset":25811,"count":336}],"isBlockCoverage":true},{"functionName":"variable.outConverter","ranges":[{"startOffset":24180,"endOffset":24482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25629,"endOffset":25699,"count":5}],"isBlockCoverage":true},{"functionName":"_createResultSet","ranges":[{"startOffset":26077,"endOffset":26467,"count":12},{"startOffset":26183,"endOffset":26225,"count":0},{"startOffset":26321,"endOffset":26441,"count":0}],"isBlockCoverage":true},{"functionName":"_prepareAndBind","ranges":[{"startOffset":26711,"endOffset":27265,"count":136},{"startOffset":26977,"endOffset":27013,"count":1},{"startOffset":27015,"endOffset":27113,"count":0},{"startOffset":27150,"endOffset":27238,"count":340}],"isBlockCoverage":true},{"functionName":"resetStatementCache","ranges":[{"startOffset":27480,"endOffset":27574,"count":0}],"isBlockCoverage":false},{"functionName":"getDbObjectClass","ranges":[{"startOffset":27820,"endOffset":27980,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementInfo","ranges":[{"startOffset":28290,"endOffset":28995,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":29279,"endOffset":31072,"count":136},{"startOffset":29391,"endOffset":29466,"count":0},{"startOffset":29738,"endOffset":29891,"count":134},{"startOffset":29891,"endOffset":29907,"count":0},{"startOffset":29909,"endOffset":30098,"count":0},{"startOffset":30098,"endOffset":30167,"count":134},{"startOffset":30167,"endOffset":30218,"count":10},{"startOffset":30218,"endOffset":31048,"count":124},{"startOffset":30400,"endOffset":30445,"count":0},{"startOffset":30475,"endOffset":30597,"count":0},{"startOffset":30629,"endOffset":30722,"count":104},{"startOffset":30752,"endOffset":30857,"count":0},{"startOffset":30914,"endOffset":30918,"count":20},{"startOffset":30958,"endOffset":31002,"count":104},{"startOffset":31048,"endOffset":31071,"count":134}],"isBlockCoverage":true},{"functionName":"executeMany","ranges":[{"startOffset":31395,"endOffset":32952,"count":0}],"isBlockCoverage":false},{"functionName":"_getStatement","ranges":[{"startOffset":33632,"endOffset":34544,"count":136},{"startOffset":33747,"endOffset":34075,"count":71},{"startOffset":34075,"endOffset":34490,"count":65},{"startOffset":34159,"endOffset":34391,"count":0}],"isBlockCoverage":true},{"functionName":"ping","ranges":[{"startOffset":34752,"endOffset":34873,"count":0}],"isBlockCoverage":false},{"functionName":"rollback","ranges":[{"startOffset":35085,"endOffset":35214,"count":0}],"isBlockCoverage":false},{"functionName":"getOracleServerVersion","ranges":[{"startOffset":35417,"endOffset":35478,"count":0}],"isBlockCoverage":false},{"functionName":"getOracleServerVersionString","ranges":[{"startOffset":35688,"endOffset":35761,"count":0}],"isBlockCoverage":false},{"functionName":"setCurrentSchema","ranges":[{"startOffset":35765,"endOffset":35868,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentSchema","ranges":[{"startOffset":35872,"endOffset":35927,"count":0}],"isBlockCoverage":false},{"functionName":"setClientId","ranges":[{"startOffset":35931,"endOffset":36040,"count":0}],"isBlockCoverage":false},{"functionName":"setDbOp","ranges":[{"startOffset":36044,"endOffset":36117,"count":0}],"isBlockCoverage":false},{"functionName":"setClientInfo","ranges":[{"startOffset":36121,"endOffset":36224,"count":0}],"isBlockCoverage":false},{"functionName":"setModule","ranges":[{"startOffset":36228,"endOffset":36494,"count":0}],"isBlockCoverage":false},{"functionName":"setAction","ranges":[{"startOffset":36498,"endOffset":36581,"count":0}],"isBlockCoverage":false},{"functionName":"changePassword","ranges":[{"startOffset":36585,"endOffset":36894,"count":0}],"isBlockCoverage":false},{"functionName":"createLob","ranges":[{"startOffset":36898,"endOffset":37026,"count":0}],"isBlockCoverage":false},{"functionName":"getStmtCacheSize","ranges":[{"startOffset":37293,"endOffset":37353,"count":0}],"isBlockCoverage":false},{"functionName":"setCallTimeout","ranges":[{"startOffset":37357,"endOffset":37428,"count":0}],"isBlockCoverage":false},{"functionName":"getCallTimeout","ranges":[{"startOffset":37432,"endOffset":37493,"count":0}],"isBlockCoverage":false},{"functionName":"getTag","ranges":[{"startOffset":37722,"endOffset":37751,"count":0}],"isBlockCoverage":false},{"functionName":"getInstanceName","ranges":[{"startOffset":37994,"endOffset":38047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"841","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/resultSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5233,"count":1}],"isBlockCoverage":true},{"functionName":"_fetchMoreRows","ranges":[{"startOffset":1730,"endOffset":2038,"count":8},{"startOffset":1815,"endOffset":1831,"count":0}],"isBlockCoverage":true},{"functionName":"_resultSetNew","ranges":[{"startOffset":2256,"endOffset":2516,"count":12}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":2745,"endOffset":2812,"count":10}],"isBlockCoverage":true},{"functionName":"_processRows","ranges":[{"startOffset":3038,"endOffset":3663,"count":9},{"startOffset":3229,"endOffset":3426,"count":25},{"startOffset":3322,"endOffset":3395,"count":100},{"startOffset":3553,"endOffset":3642,"count":6}],"isBlockCoverage":true},{"functionName":"getRows","ranges":[{"startOffset":3965,"endOffset":5192,"count":10},{"startOffset":4036,"endOffset":4066,"count":0},{"startOffset":4219,"endOffset":4282,"count":0},{"startOffset":4565,"endOffset":4594,"count":8},{"startOffset":4596,"endOffset":4649,"count":8},{"startOffset":4689,"endOffset":4719,"count":0},{"startOffset":4785,"endOffset":5046,"count":4},{"startOffset":4956,"endOffset":5019,"count":3},{"startOffset":5019,"endOffset":5046,"count":1},{"startOffset":5052,"endOffset":5191,"count":6}],"isBlockCoverage":true}]},{"scriptId":"842","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/execute.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12515,"count":1}],"isBlockCoverage":true},{"functionName":"ExecuteMessage","ranges":[{"startOffset":1533,"endOffset":1894,"count":136},{"startOffset":1674,"endOffset":1748,"count":12}],"isBlockCoverage":true},{"functionName":"writeExecuteMessage","ranges":[{"startOffset":2131,"endOffset":9239,"count":71},{"startOffset":2513,"endOffset":2571,"count":0},{"startOffset":2763,"endOffset":2776,"count":0},{"startOffset":2858,"endOffset":3266,"count":12},{"startOffset":2886,"endOffset":2950,"count":0},{"startOffset":2990,"endOffset":3012,"count":0},{"startOffset":3073,"endOffset":3140,"count":0},{"startOffset":3370,"endOffset":3473,"count":0},{"startOffset":3497,"endOffset":3553,"count":35},{"startOffset":3580,"endOffset":3644,"count":0},{"startOffset":3677,"endOffset":3744,"count":0},{"startOffset":3778,"endOffset":3836,"count":12},{"startOffset":4069,"endOffset":4082,"count":0},{"startOffset":4203,"endOffset":4315,"count":0},{"startOffset":4858,"endOffset":5009,"count":36},{"startOffset":5009,"endOffset":5166,"count":35},{"startOffset":5559,"endOffset":5718,"count":0},{"startOffset":6381,"endOffset":6612,"count":0},{"startOffset":6925,"endOffset":7566,"count":0},{"startOffset":7595,"endOffset":7608,"count":0},{"startOffset":7761,"endOffset":7832,"count":0},{"startOffset":7838,"endOffset":7922,"count":0},{"startOffset":7945,"endOffset":8121,"count":12},{"startOffset":8068,"endOffset":8115,"count":0},{"startOffset":8121,"endOffset":8215,"count":59},{"startOffset":8599,"endOffset":8602,"count":12},{"startOffset":8603,"endOffset":8606,"count":59},{"startOffset":9083,"endOffset":9153,"count":0},{"startOffset":9178,"endOffset":9235,"count":35}],"isBlockCoverage":true},{"functionName":"writeReExecuteMessage","ranges":[{"startOffset":9512,"endOffset":10694,"count":65},{"startOffset":10226,"endOffset":10331,"count":0},{"startOffset":10374,"endOffset":10448,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9772,"endOffset":9916,"count":230}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9977,"endOffset":10120,"count":230}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":11079,"endOffset":12477,"count":136},{"startOffset":11269,"endOffset":11297,"count":65},{"startOffset":11298,"endOffset":11316,"count":65},{"startOffset":11317,"endOffset":11340,"count":65},{"startOffset":11341,"endOffset":11360,"count":65},{"startOffset":11361,"endOffset":11375,"count":65},{"startOffset":11376,"endOffset":11396,"count":65},{"startOffset":11398,"endOffset":11684,"count":65},{"startOffset":11425,"endOffset":11457,"count":0},{"startOffset":11459,"endOffset":11540,"count":0},{"startOffset":11684,"endOffset":11812,"count":71},{"startOffset":11979,"endOffset":12008,"count":100},{"startOffset":12010,"endOffset":12368,"count":100},{"startOffset":12301,"endOffset":12330,"count":0},{"startOffset":12342,"endOffset":12354,"count":0}],"isBlockCoverage":true}]},{"scriptId":"843","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/withData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30207,"count":1}],"isBlockCoverage":true},{"functionName":"MessageWithData","ranges":[{"startOffset":1686,"endOffset":2169,"count":144},{"startOffset":1987,"endOffset":1991,"count":136}],"isBlockCoverage":true},{"functionName":"processMessage","ranges":[{"startOffset":2241,"endOffset":3493,"count":265},{"startOffset":2338,"endOffset":2707,"count":10},{"startOffset":2707,"endOffset":3489,"count":255},{"startOffset":2768,"endOffset":2809,"count":15},{"startOffset":2809,"endOffset":3489,"count":240},{"startOffset":2868,"endOffset":2907,"count":25},{"startOffset":2907,"endOffset":3489,"count":215},{"startOffset":2976,"endOffset":3025,"count":0},{"startOffset":3086,"endOffset":3127,"count":2},{"startOffset":3127,"endOffset":3489,"count":213},{"startOffset":3187,"endOffset":3227,"count":0},{"startOffset":3293,"endOffset":3333,"count":0},{"startOffset":3389,"endOffset":3430,"count":144},{"startOffset":3430,"endOffset":3489,"count":69}],"isBlockCoverage":true},{"functionName":"hasMoreData","ranges":[{"startOffset":3497,"endOffset":3572,"count":265},{"startOffset":3545,"endOffset":3567,"count":121}],"isBlockCoverage":true},{"functionName":"processErrorInfo","ranges":[{"startOffset":3576,"endOffset":4678,"count":144},{"startOffset":3933,"endOffset":4014,"count":121},{"startOffset":4099,"endOffset":4135,"count":0},{"startOffset":4137,"endOffset":4181,"count":0},{"startOffset":4245,"endOffset":4270,"count":10},{"startOffset":4272,"endOffset":4389,"count":10},{"startOffset":4389,"endOffset":4596,"count":134},{"startOffset":4424,"endOffset":4456,"count":2},{"startOffset":4458,"endOffset":4596,"count":2},{"startOffset":4633,"endOffset":4674,"count":0}],"isBlockCoverage":true},{"functionName":"_adjustFetchType","ranges":[{"startOffset":5016,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"processDescribeInfo","ranges":[{"startOffset":5466,"endOffset":6602,"count":10},{"startOffset":5817,"endOffset":6098,"count":40},{"startOffset":5931,"endOffset":5999,"count":0},{"startOffset":6516,"endOffset":6553,"count":0}],"isBlockCoverage":true},{"functionName":"processColumnInfo","ranges":[{"startOffset":6606,"endOffset":9802,"count":40},{"startOffset":6813,"endOffset":6872,"count":10},{"startOffset":6873,"endOffset":6930,"count":10},{"startOffset":6931,"endOffset":6992,"count":10},{"startOffset":6993,"endOffset":7053,"count":10},{"startOffset":7055,"endOffset":7091,"count":30},{"startOffset":7091,"endOffset":7134,"count":10},{"startOffset":7402,"endOffset":7461,"count":0},{"startOffset":7739,"endOffset":7768,"count":0},{"startOffset":7844,"endOffset":7911,"count":0},{"startOffset":8222,"endOffset":8283,"count":0},{"startOffset":8354,"endOffset":8417,"count":0},{"startOffset":8738,"endOffset":8765,"count":10},{"startOffset":8772,"endOffset":8800,"count":10},{"startOffset":8807,"endOffset":8831,"count":10},{"startOffset":8838,"endOffset":8863,"count":10},{"startOffset":8870,"endOffset":8943,"count":10},{"startOffset":8950,"endOffset":9032,"count":30},{"startOffset":9039,"endOffset":9068,"count":0},{"startOffset":9075,"endOffset":9107,"count":0},{"startOffset":9114,"endOffset":9199,"count":0},{"startOffset":9206,"endOffset":9489,"count":0},{"startOffset":9496,"endOffset":9519,"count":0},{"startOffset":9577,"endOffset":9615,"count":30}],"isBlockCoverage":true},{"functionName":"processRowHeader","ranges":[{"startOffset":9806,"endOffset":10393,"count":15},{"startOffset":10201,"endOffset":10271,"count":6},{"startOffset":10324,"endOffset":10389,"count":0}],"isBlockCoverage":true},{"functionName":"isDuplicateData","ranges":[{"startOffset":10397,"endOffset":10626,"count":100},{"startOffset":10452,"endOffset":10479,"count":68},{"startOffset":10479,"endOffset":10625,"count":32}],"isBlockCoverage":true},{"functionName":"processRowData","ranges":[{"startOffset":10630,"endOffset":12024,"count":25},{"startOffset":10730,"endOffset":11846,"count":100},{"startOffset":10760,"endOffset":11118,"count":0},{"startOffset":11156,"endOffset":11421,"count":0},{"startOffset":11458,"endOffset":11707,"count":15},{"startOffset":11492,"endOffset":11516,"count":0},{"startOffset":11518,"endOffset":11570,"count":0},{"startOffset":11707,"endOffset":11840,"count":85}],"isBlockCoverage":true},{"functionName":"processIOVector","ranges":[{"startOffset":12028,"endOffset":13031,"count":0}],"isBlockCoverage":false},{"functionName":"processColumnData","ranges":[{"startOffset":13035,"endOffset":18091,"count":85},{"startOffset":13266,"endOffset":13312,"count":0},{"startOffset":13319,"endOffset":13369,"count":0},{"startOffset":13376,"endOffset":13424,"count":0},{"startOffset":13426,"endOffset":13456,"count":0},{"startOffset":13520,"endOffset":13572,"count":60},{"startOffset":13573,"endOffset":13625,"count":60},{"startOffset":13632,"endOffset":13765,"count":25},{"startOffset":13677,"endOffset":13722,"count":0},{"startOffset":13765,"endOffset":17459,"count":60},{"startOffset":13876,"endOffset":14008,"count":0},{"startOffset":14132,"endOffset":14152,"count":0},{"startOffset":14162,"endOffset":14194,"count":0},{"startOffset":14200,"endOffset":17459,"count":0},{"startOffset":17484,"endOffset":17779,"count":0},{"startOffset":17930,"endOffset":18066,"count":0}],"isBlockCoverage":true},{"functionName":"processReturnParameter","ranges":[{"startOffset":18095,"endOffset":19523,"count":69},{"startOffset":18280,"endOffset":18308,"count":414},{"startOffset":18399,"endOffset":18437,"count":0},{"startOffset":18549,"endOffset":19142,"count":41},{"startOffset":18630,"endOffset":18701,"count":0},{"startOffset":18955,"endOffset":19018,"count":0},{"startOffset":19078,"endOffset":19136,"count":0},{"startOffset":19229,"endOffset":19262,"count":0},{"startOffset":19295,"endOffset":19519,"count":0}],"isBlockCoverage":true},{"functionName":"postProcess","ranges":[{"startOffset":19527,"endOffset":21009,"count":144},{"startOffset":19626,"endOffset":20060,"count":302},{"startOffset":19658,"endOffset":19902,"count":0},{"startOffset":19947,"endOffset":20042,"count":0},{"startOffset":20178,"endOffset":21005,"count":10},{"startOffset":20408,"endOffset":20999,"count":40},{"startOffset":20617,"endOffset":20991,"count":0}],"isBlockCoverage":true},{"functionName":"preProcess","ranges":[{"startOffset":21013,"endOffset":21578,"count":144},{"startOffset":21063,"endOffset":21081,"count":0},{"startOffset":21083,"endOffset":21287,"count":0},{"startOffset":21321,"endOffset":21574,"count":20},{"startOffset":21486,"endOffset":21560,"count":32}],"isBlockCoverage":true},{"functionName":"processBitVector","ranges":[{"startOffset":21582,"endOffset":21847,"count":2}],"isBlockCoverage":true},{"functionName":"processBindParams","ranges":[{"startOffset":21851,"endOffset":22192,"count":35},{"startOffset":21979,"endOffset":22112,"count":111}],"isBlockCoverage":true},{"functionName":"writeColumnMetadata","ranges":[{"startOffset":22196,"endOffset":24818,"count":35},{"startOffset":22270,"endOffset":24814,"count":111},{"startOffset":22359,"endOffset":22393,"count":84},{"startOffset":22653,"endOffset":22714,"count":0},{"startOffset":22811,"endOffset":22925,"count":0},{"startOffset":23006,"endOffset":23057,"count":0},{"startOffset":23231,"endOffset":23292,"count":0},{"startOffset":23340,"endOffset":23470,"count":0},{"startOffset":23761,"endOffset":23823,"count":0},{"startOffset":23899,"endOffset":23953,"count":0},{"startOffset":24095,"endOffset":24274,"count":0},{"startOffset":24442,"endOffset":24501,"count":27},{"startOffset":24501,"endOffset":24541,"count":84},{"startOffset":24739,"endOffset":24808,"count":0}],"isBlockCoverage":true},{"functionName":"writeBindParamsRow","ranges":[{"startOffset":24822,"endOffset":25860,"count":100},{"startOffset":24955,"endOffset":25533,"count":341},{"startOffset":24998,"endOffset":25007,"count":0},{"startOffset":25077,"endOffset":25304,"count":0},{"startOffset":25367,"endOffset":25406,"count":0},{"startOffset":25553,"endOffset":25856,"count":0}],"isBlockCoverage":true},{"functionName":"writeBindParamsColumn","ranges":[{"startOffset":25864,"endOffset":29332,"count":341},{"startOffset":26006,"endOffset":26023,"count":339},{"startOffset":26025,"endOffset":26073,"count":2},{"startOffset":26074,"endOffset":26120,"count":2},{"startOffset":26122,"endOffset":26709,"count":2},{"startOffset":26182,"endOffset":26269,"count":0},{"startOffset":26329,"endOffset":26661,"count":0},{"startOffset":26709,"endOffset":29328,"count":339},{"startOffset":26765,"endOffset":26827,"count":80},{"startOffset":26829,"endOffset":27012,"count":259},{"startOffset":26869,"endOffset":26917,"count":0},{"startOffset":27012,"endOffset":29328,"count":80},{"startOffset":27069,"endOffset":27121,"count":0},{"startOffset":27122,"endOffset":27174,"count":0},{"startOffset":27175,"endOffset":27226,"count":0},{"startOffset":27227,"endOffset":27283,"count":0},{"startOffset":27345,"endOffset":27465,"count":0},{"startOffset":27561,"endOffset":29328,"count":0}],"isBlockCoverage":true},{"functionName":"createCursorFromDescribe","ranges":[{"startOffset":29336,"endOffset":29647,"count":0}],"isBlockCoverage":false},{"functionName":"processImplicitResultSet","ranges":[{"startOffset":29651,"endOffset":30066,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLength","ranges":[{"startOffset":30091,"endOffset":30170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"844","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3015,"count":1}],"isBlockCoverage":true},{"functionName":"_convertBase64","ranges":[{"startOffset":1322,"endOffset":1550,"count":416},{"startOffset":1408,"endOffset":1524,"count":1872}],"isBlockCoverage":true},{"functionName":"encodeRowID","ranges":[{"startOffset":1552,"endOffset":2048,"count":121},{"startOffset":1622,"endOffset":1648,"count":17},{"startOffset":1649,"endOffset":1672,"count":17},{"startOffset":1673,"endOffset":1694,"count":17},{"startOffset":1696,"endOffset":2046,"count":104}],"isBlockCoverage":true},{"functionName":"setObfuscatedValue","ranges":[{"startOffset":2162,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"getDeobfuscatedValue","ranges":[{"startOffset":2631,"endOffset":2910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"845","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22451,"count":1}],"isBlockCoverage":true}]},{"scriptId":"846","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16871,"count":1}],"isBlockCoverage":true},{"functionName":"Message","ranges":[{"startOffset":1398,"endOffset":1780,"count":334}],"isBlockCoverage":true},{"functionName":"preProcess","ranges":[{"startOffset":1784,"endOffset":1800,"count":233}],"isBlockCoverage":true},{"functionName":"postProcess","ranges":[{"startOffset":1803,"endOffset":1826,"count":232}],"isBlockCoverage":true},{"functionName":"writeFunctionHeader","ranges":[{"startOffset":1830,"endOffset":2113,"count":291},{"startOffset":2038,"endOffset":2109,"count":0}],"isBlockCoverage":true},{"functionName":"processErrorInfo","ranges":[{"startOffset":2117,"endOffset":5805,"count":230},{"startOffset":3526,"endOffset":3563,"count":124},{"startOffset":3688,"endOffset":4219,"count":0},{"startOffset":4351,"endOffset":4801,"count":0},{"startOffset":4933,"endOffset":5289,"count":0},{"startOffset":5473,"endOffset":5731,"count":12}],"isBlockCoverage":true},{"functionName":"processReturnParameter","ranges":[{"startOffset":5809,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"processWarningInfo","ranges":[{"startOffset":5841,"endOffset":6232,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreData","ranges":[{"startOffset":6236,"endOffset":6316,"count":318},{"startOffset":6289,"endOffset":6311,"count":86}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":6320,"endOffset":6360,"count":376}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":6364,"endOffset":6608,"count":376},{"startOffset":6451,"endOffset":6573,"count":583}],"isBlockCoverage":true},{"functionName":"savePoint","ranges":[{"startOffset":6612,"endOffset":6653,"count":583}],"isBlockCoverage":true},{"functionName":"processMessage","ranges":[{"startOffset":6657,"endOffset":7377,"count":301},{"startOffset":6746,"endOffset":6787,"count":86},{"startOffset":6787,"endOffset":7373,"count":215},{"startOffset":6845,"endOffset":6888,"count":0},{"startOffset":6945,"endOffset":7034,"count":60},{"startOffset":7034,"endOffset":7373,"count":155},{"startOffset":7141,"endOffset":7373,"count":0}],"isBlockCoverage":true},{"functionName":"processServerSidePiggyBack","ranges":[{"startOffset":7381,"endOffset":10520,"count":0}],"isBlockCoverage":false},{"functionName":"writePiggybacks","ranges":[{"startOffset":10524,"endOffset":11176,"count":166},{"startOffset":10595,"endOffset":10648,"count":0},{"startOffset":10698,"endOffset":10739,"count":0},{"startOffset":10741,"endOffset":10792,"count":0},{"startOffset":11022,"endOffset":11071,"count":0},{"startOffset":11120,"endOffset":11172,"count":0}],"isBlockCoverage":true},{"functionName":"writePiggybackHeader","ranges":[{"startOffset":11180,"endOffset":11489,"count":0}],"isBlockCoverage":false},{"functionName":"writeCloseCursorsPiggyBack","ranges":[{"startOffset":11493,"endOffset":11831,"count":0}],"isBlockCoverage":false},{"functionName":"writeCloseTempLobsPiggyback","ranges":[{"startOffset":11835,"endOffset":12912,"count":0}],"isBlockCoverage":false},{"functionName":"_writeCurrentSchemaPiggyback","ranges":[{"startOffset":12916,"endOffset":13212,"count":0}],"isBlockCoverage":false},{"functionName":"_writeEndToEndPiggybacks","ranges":[{"startOffset":13216,"endOffset":16299,"count":0}],"isBlockCoverage":false},{"functionName":"writeEndEndTraceValue","ranges":[{"startOffset":16303,"endOffset":16841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/dbObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22315,"count":1}],"isBlockCoverage":true},{"functionName":"_readBytesWithLength","ranges":[{"startOffset":1828,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"getIsAtomicNull","ranges":[{"startOffset":2345,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"readHeader","ranges":[{"startOffset":2804,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"readLength","ranges":[{"startOffset":3468,"endOffset":3655,"count":0}],"isBlockCoverage":false},{"functionName":"writeHeader","ranges":[{"startOffset":3997,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"writeLength","ranges":[{"startOffset":4584,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"ThinDbObjectImpl","ranges":[{"startOffset":4863,"endOffset":5950,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureAssocKeys","ranges":[{"startOffset":6339,"endOffset":6479,"count":0}],"isBlockCoverage":false},{"functionName":"_ensureUnpacked","ranges":[{"startOffset":6716,"endOffset":6798,"count":0}],"isBlockCoverage":false},{"functionName":"_getPackedData","ranges":[{"startOffset":7198,"endOffset":7481,"count":0}],"isBlockCoverage":false},{"functionName":"_packData","ranges":[{"startOffset":7720,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"_packValue","ranges":[{"startOffset":8951,"endOffset":10698,"count":0}],"isBlockCoverage":false},{"functionName":"_unpackData","ranges":[{"startOffset":10948,"endOffset":11119,"count":0}],"isBlockCoverage":false},{"functionName":"_unpackDataFromBuf","ranges":[{"startOffset":11383,"endOffset":12644,"count":0}],"isBlockCoverage":false},{"functionName":"_unpackValue","ranges":[{"startOffset":12877,"endOffset":14445,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":14671,"endOffset":15438,"count":0}],"isBlockCoverage":false},{"functionName":"deleteElement","ranges":[{"startOffset":15671,"endOffset":16046,"count":0}],"isBlockCoverage":false},{"functionName":"getAttrValue","ranges":[{"startOffset":16296,"endOffset":16467,"count":0}],"isBlockCoverage":false},{"functionName":"getElement","ranges":[{"startOffset":16699,"endOffset":17025,"count":0}],"isBlockCoverage":false},{"functionName":"getFirstIndex","ranges":[{"startOffset":17261,"endOffset":17475,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":17722,"endOffset":17990,"count":0}],"isBlockCoverage":false},{"functionName":"getLastIndex","ranges":[{"startOffset":18224,"endOffset":18540,"count":0}],"isBlockCoverage":false},{"functionName":"getNextIndex","ranges":[{"startOffset":18774,"endOffset":19126,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevIndex","ranges":[{"startOffset":19364,"endOffset":19698,"count":0}],"isBlockCoverage":false},{"functionName":"getValues","ranges":[{"startOffset":19949,"endOffset":20303,"count":0}],"isBlockCoverage":false},{"functionName":"hasElement","ranges":[{"startOffset":20549,"endOffset":20747,"count":0}],"isBlockCoverage":false},{"functionName":"setAttrValue","ranges":[{"startOffset":21007,"endOffset":21112,"count":0}],"isBlockCoverage":false},{"functionName":"setElement","ranges":[{"startOffset":21363,"endOffset":21836,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":22092,"endOffset":22275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"848","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36220,"count":1}],"isBlockCoverage":true},{"functionName":"BaseBuffer","ranges":[{"startOffset":1807,"endOffset":2099,"count":86},{"startOffset":1981,"endOffset":2077,"count":0}],"isBlockCoverage":true},{"functionName":"_grow","ranges":[{"startOffset":2371,"endOffset":2489,"count":0}],"isBlockCoverage":false},{"functionName":"_readBytesWithLength","ranges":[{"startOffset":2880,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"_readInteger","ranges":[{"startOffset":3381,"endOffset":4046,"count":13054},{"startOffset":3500,"endOffset":3523,"count":6650},{"startOffset":3523,"endOffset":3724,"count":6404},{"startOffset":3546,"endOffset":3724,"count":0},{"startOffset":3724,"endOffset":3749,"count":6404},{"startOffset":3749,"endOffset":3850,"count":0},{"startOffset":3850,"endOffset":3865,"count":6404},{"startOffset":3865,"endOffset":3900,"count":2845},{"startOffset":3900,"endOffset":4042,"count":3559},{"startOffset":4019,"endOffset":4027,"count":0}],"isBlockCoverage":true},{"functionName":"numBytesLeft","ranges":[{"startOffset":4302,"endOffset":4355,"count":144516}],"isBlockCoverage":true},{"functionName":"parseBinaryDouble","ranges":[{"startOffset":4876,"endOffset":5256,"count":0}],"isBlockCoverage":false},{"functionName":"parseBinaryFloat","ranges":[{"startOffset":5776,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"parseOracleDate","ranges":[{"startOffset":6710,"endOffset":7055,"count":0}],"isBlockCoverage":false},{"functionName":"parseOracleNumber","ranges":[{"startOffset":7419,"endOffset":10249,"count":60},{"startOffset":7726,"endOffset":7769,"count":0},{"startOffset":7971,"endOffset":8053,"count":0},{"startOffset":8227,"endOffset":8257,"count":0},{"startOffset":8259,"endOffset":8287,"count":0},{"startOffset":8484,"endOffset":9292,"count":106},{"startOffset":8661,"endOffset":8713,"count":0},{"startOffset":8847,"endOffset":8857,"count":25},{"startOffset":8859,"endOffset":8900,"count":25},{"startOffset":8900,"endOffset":9097,"count":81},{"startOffset":8924,"endOffset":9017,"count":0},{"startOffset":9039,"endOffset":9047,"count":0},{"startOffset":9217,"endOffset":9236,"count":0},{"startOffset":9437,"endOffset":9467,"count":0},{"startOffset":9617,"endOffset":9732,"count":0},{"startOffset":9808,"endOffset":9923,"count":187},{"startOffset":9826,"endOffset":9852,"count":127},{"startOffset":9854,"endOffset":9888,"count":0},{"startOffset":10079,"endOffset":10183,"count":0}],"isBlockCoverage":true},{"functionName":"readBinaryDouble","ranges":[{"startOffset":10561,"endOffset":10710,"count":0}],"isBlockCoverage":false},{"functionName":"readBinaryFloat","ranges":[{"startOffset":11020,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"readBool","ranges":[{"startOffset":11418,"endOffset":11559,"count":0}],"isBlockCoverage":false},{"functionName":"readBytes","ranges":[{"startOffset":11883,"endOffset":12193,"count":0}],"isBlockCoverage":false},{"functionName":"readBytesWithLength","ranges":[{"startOffset":12594,"endOffset":12803,"count":4185},{"startOffset":12739,"endOffset":12751,"count":0}],"isBlockCoverage":true},{"functionName":"readDbObject","ranges":[{"startOffset":13125,"endOffset":13738,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":13974,"endOffset":14052,"count":50}],"isBlockCoverage":true},{"functionName":"readOracleDate","ranges":[{"startOffset":14353,"endOffset":14524,"count":0}],"isBlockCoverage":false},{"functionName":"readOracleNumber","ranges":[{"startOffset":14831,"endOffset":14980,"count":60},{"startOffset":14910,"endOffset":14936,"count":0}],"isBlockCoverage":true},{"functionName":"readSB2","ranges":[{"startOffset":15237,"endOffset":15298,"count":30}],"isBlockCoverage":true},{"functionName":"readSB4","ranges":[{"startOffset":15555,"endOffset":15616,"count":0}],"isBlockCoverage":false},{"functionName":"readSB8","ranges":[{"startOffset":15873,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"readStr","ranges":[{"startOffset":16191,"endOffset":16658,"count":4033},{"startOffset":16266,"endOffset":16292,"count":0},{"startOffset":16365,"endOffset":16657,"count":0}],"isBlockCoverage":true},{"functionName":"readUB2","ranges":[{"startOffset":16918,"endOffset":16980,"count":2157}],"isBlockCoverage":true},{"functionName":"readUB4","ranges":[{"startOffset":17240,"endOffset":17302,"count":5552}],"isBlockCoverage":true},{"functionName":"readUB8","ranges":[{"startOffset":17562,"endOffset":17624,"count":230}],"isBlockCoverage":true},{"functionName":"readUInt8","ranges":[{"startOffset":17864,"endOffset":17935,"count":19073}],"isBlockCoverage":true},{"functionName":"readUInt16BE","ranges":[{"startOffset":18199,"endOffset":18285,"count":30960}],"isBlockCoverage":true},{"functionName":"readUInt16LE","ranges":[{"startOffset":18552,"endOffset":18638,"count":86}],"isBlockCoverage":true},{"functionName":"readUInt32BE","ranges":[{"startOffset":18902,"endOffset":18988,"count":0}],"isBlockCoverage":false},{"functionName":"reserveBytes","ranges":[{"startOffset":19304,"endOffset":19519,"count":67498},{"startOffset":19375,"endOffset":19407,"count":0}],"isBlockCoverage":true},{"functionName":"skipBytes","ranges":[{"startOffset":19761,"endOffset":19910,"count":0}],"isBlockCoverage":false},{"functionName":"skipSB4","ranges":[{"startOffset":20167,"endOffset":20227,"count":0}],"isBlockCoverage":false},{"functionName":"skipUB1","ranges":[{"startOffset":20459,"endOffset":20497,"count":1758}],"isBlockCoverage":true},{"functionName":"skipUB2","ranges":[{"startOffset":20757,"endOffset":20818,"count":1760}],"isBlockCoverage":true},{"functionName":"skipUB4","ranges":[{"startOffset":21078,"endOffset":21139,"count":3325}],"isBlockCoverage":true},{"functionName":"skipUB8","ranges":[{"startOffset":21399,"endOffset":21460,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryDouble","ranges":[{"startOffset":21716,"endOffset":22134,"count":0}],"isBlockCoverage":false},{"functionName":"writeBinaryFloat","ranges":[{"startOffset":22388,"endOffset":22716,"count":0}],"isBlockCoverage":false},{"functionName":"writeBytes","ranges":[{"startOffset":22963,"endOffset":23412,"count":1398},{"startOffset":23134,"endOffset":23184,"count":0}],"isBlockCoverage":true},{"functionName":"writeBytesWithLength","ranges":[{"startOffset":23785,"endOffset":24395,"count":1355},{"startOffset":24006,"endOffset":24391,"count":0}],"isBlockCoverage":true},{"functionName":"writeDbObject","ranges":[{"startOffset":24630,"endOffset":25131,"count":0}],"isBlockCoverage":false},{"functionName":"writeOracleDate","ranges":[{"startOffset":25592,"endOffset":26830,"count":0}],"isBlockCoverage":false},{"functionName":"writeOracleNumber","ranges":[{"startOffset":27103,"endOffset":29576,"count":259},{"startOffset":27224,"endOffset":27290,"count":0},{"startOffset":27428,"endOffset":27541,"count":0},{"startOffset":27679,"endOffset":27817,"count":0},{"startOffset":27877,"endOffset":27924,"count":9},{"startOffset":27984,"endOffset":28018,"count":250},{"startOffset":28020,"endOffset":28164,"count":0},{"startOffset":28338,"endOffset":28402,"count":0},{"startOffset":28471,"endOffset":28492,"count":0},{"startOffset":28519,"endOffset":28541,"count":0},{"startOffset":28544,"endOffset":28589,"count":0},{"startOffset":28680,"endOffset":28714,"count":90},{"startOffset":28803,"endOffset":28848,"count":0},{"startOffset":28974,"endOffset":29029,"count":0},{"startOffset":29058,"endOffset":29075,"count":9},{"startOffset":29077,"endOffset":29112,"count":9},{"startOffset":29314,"endOffset":29506,"count":374},{"startOffset":29400,"endOffset":29448,"count":0},{"startOffset":29531,"endOffset":29571,"count":0}],"isBlockCoverage":true},{"functionName":"writeQLocator","ranges":[{"startOffset":29831,"endOffset":30684,"count":0}],"isBlockCoverage":false},{"functionName":"writeStr","ranges":[{"startOffset":30907,"endOffset":30961,"count":43}],"isBlockCoverage":true},{"functionName":"writeInt32BE","ranges":[{"startOffset":31221,"endOffset":31305,"count":0}],"isBlockCoverage":false},{"functionName":"writeUB4","ranges":[{"startOffset":31594,"endOffset":31923,"count":4483},{"startOffset":31633,"endOffset":31666,"count":2247},{"startOffset":31666,"endOffset":31919,"count":2236},{"startOffset":31691,"endOffset":31754,"count":1937},{"startOffset":31754,"endOffset":31919,"count":299},{"startOffset":31781,"endOffset":31847,"count":228},{"startOffset":31847,"endOffset":31919,"count":71}],"isBlockCoverage":true},{"functionName":"writeUB2","ranges":[{"startOffset":32212,"endOffset":32448,"count":222},{"startOffset":32251,"endOffset":32284,"count":195},{"startOffset":32284,"endOffset":32444,"count":27},{"startOffset":32309,"endOffset":32372,"count":0}],"isBlockCoverage":true},{"functionName":"writeUB8","ranges":[{"startOffset":32737,"endOffset":33163,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":33403,"endOffset":33476,"count":12161}],"isBlockCoverage":true},{"functionName":"writeUInt16BE","ranges":[{"startOffset":33740,"endOffset":33826,"count":54544}],"isBlockCoverage":true},{"functionName":"writeUInt32BE","ranges":[{"startOffset":34090,"endOffset":34176,"count":448}],"isBlockCoverage":true},{"functionName":"writeUInt64BE","ranges":[{"startOffset":34572,"endOffset":34687,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16LE","ranges":[{"startOffset":34954,"endOffset":35040,"count":86}],"isBlockCoverage":true},{"functionName":"GrowableBuffer","ranges":[{"startOffset":35336,"endOffset":35508,"count":0}],"isBlockCoverage":false},{"functionName":"_grow","ranges":[{"startOffset":35863,"endOffset":36163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"849","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/lob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5544,"count":1}],"isBlockCoverage":true},{"functionName":"_getConnImpl","ranges":[{"startOffset":1757,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"_sendMessage","ranges":[{"startOffset":2065,"endOffset":2370,"count":0}],"isBlockCoverage":false},{"functionName":"getChunkSize","ranges":[{"startOffset":2374,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"_getChunkSizeAsync","ranges":[{"startOffset":2426,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"getLength","ranges":[{"startOffset":2691,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"getPieceSize","ranges":[{"startOffset":2737,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"setPieceSize","ranges":[{"startOffset":2789,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":2847,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":2890,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3041,"endOffset":3332,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3336,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"getCsfrm","ranges":[{"startOffset":3610,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4044,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"checkConn","ranges":[{"startOffset":4570,"endOffset":4669,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4673,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":4924,"endOffset":5509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"850","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/lobOp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6299,"count":1}],"isBlockCoverage":true},{"functionName":"LobOpMessage","ranges":[{"startOffset":1416,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":2266,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"processMessage","ranges":[{"startOffset":4719,"endOffset":5347,"count":0}],"isBlockCoverage":false},{"functionName":"processReturnParameter","ranges":[{"startOffset":5351,"endOffset":6263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/fetch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2030,"count":1}],"isBlockCoverage":true},{"functionName":"FetchMessage","ranges":[{"startOffset":1396,"endOffset":1581,"count":8}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1852,"endOffset":1994,"count":8}],"isBlockCoverage":true}]},{"scriptId":"852","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/protocol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6535,"count":1}],"isBlockCoverage":true},{"functionName":"Protocol","ranges":[{"startOffset":1475,"endOffset":1960,"count":43}],"isBlockCoverage":true},{"functionName":"_decodeMessage","ranges":[{"startOffset":2410,"endOffset":3094,"count":377},{"startOffset":2508,"endOffset":3057,"count":376},{"startOffset":2583,"endOffset":2714,"count":2},{"startOffset":2788,"endOffset":3051,"count":0},{"startOffset":3057,"endOffset":3093,"count":376}],"isBlockCoverage":true},{"functionName":"_encodeMessage","ranges":[{"startOffset":3602,"endOffset":3857,"count":377},{"startOffset":3780,"endOffset":3821,"count":0}],"isBlockCoverage":true},{"functionName":"_recoverFromError","ranges":[{"startOffset":3861,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"_processMessage","ranges":[{"startOffset":4737,"endOffset":6038,"count":377},{"startOffset":4867,"endOffset":5013,"count":0},{"startOffset":5169,"endOffset":5177,"count":376},{"startOffset":5184,"endOffset":5374,"count":0},{"startOffset":5374,"endOffset":5453,"count":376},{"startOffset":5453,"endOffset":5507,"count":0},{"startOffset":5507,"endOffset":5616,"count":376},{"startOffset":5616,"endOffset":6034,"count":2},{"startOffset":5648,"endOffset":5734,"count":0},{"startOffset":5971,"endOffset":6011,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4900,"endOffset":4985,"count":0}],"isBlockCoverage":false},{"functionName":"flushOutBindMessage","ranges":[{"startOffset":6042,"endOffset":6288,"count":0}],"isBlockCoverage":false},{"functionName":"breakMessage","ranges":[{"startOffset":6327,"endOffset":6407,"count":0}],"isBlockCoverage":false},{"functionName":"resetMessage","ranges":[{"startOffset":6449,"endOffset":6503,"count":2}],"isBlockCoverage":true}]},{"scriptId":"853","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/capabilities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4800,"count":1}],"isBlockCoverage":true},{"functionName":"Capabilities","ranges":[{"startOffset":1374,"endOffset":1838,"count":43}],"isBlockCoverage":true},{"functionName":"adjustForServerCompileCaps","ranges":[{"startOffset":1842,"endOffset":2135,"count":43}],"isBlockCoverage":true},{"functionName":"adjustForServerRuntimeCaps","ranges":[{"startOffset":2139,"endOffset":2344,"count":43},{"startOffset":2253,"endOffset":2294,"count":0}],"isBlockCoverage":true},{"functionName":"initCompileCaps","ranges":[{"startOffset":2348,"endOffset":4374,"count":43}],"isBlockCoverage":true},{"functionName":"initRuntimeCaps","ranges":[{"startOffset":4378,"endOffset":4597,"count":43}],"isBlockCoverage":true},{"functionName":"checkNCharsetId","ranges":[{"startOffset":4601,"endOffset":4764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/packet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15241,"count":1}],"isBlockCoverage":true},{"functionName":"BytesChunk","ranges":[{"startOffset":1799,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ChunkedBytesBuffer","ranges":[{"startOffset":2213,"endOffset":2254,"count":43}],"isBlockCoverage":true},{"functionName":"endChunkedRead","ranges":[{"startOffset":2330,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"getBuf","ranges":[{"startOffset":2958,"endOffset":3409,"count":0}],"isBlockCoverage":false},{"functionName":"startChunkedRead","ranges":[{"startOffset":3541,"endOffset":3687,"count":0}],"isBlockCoverage":false},{"functionName":"ReadPacket","ranges":[{"startOffset":3931,"endOffset":4080,"count":43}],"isBlockCoverage":true},{"functionName":"_readBytesWithLength","ranges":[{"startOffset":4233,"endOffset":4666,"count":4185},{"startOffset":4370,"endOffset":4665,"count":0}],"isBlockCoverage":true},{"functionName":"skipBytes","ranges":[{"startOffset":4670,"endOffset":5435,"count":17344},{"startOffset":4844,"endOffset":4879,"count":0},{"startOffset":5131,"endOffset":5431,"count":0}],"isBlockCoverage":true},{"functionName":"readBytes","ranges":[{"startOffset":5667,"endOffset":7415,"count":57958},{"startOffset":5864,"endOffset":5899,"count":0},{"startOffset":6144,"endOffset":6268,"count":0},{"startOffset":6399,"endOffset":7414,"count":0}],"isBlockCoverage":true},{"functionName":"receivePacket","ranges":[{"startOffset":7472,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"restorePoint","ranges":[{"startOffset":7797,"endOffset":7940,"count":0}],"isBlockCoverage":false},{"functionName":"savePoint","ranges":[{"startOffset":7944,"endOffset":8186,"count":583},{"startOffset":8069,"endOffset":8123,"count":0}],"isBlockCoverage":true},{"functionName":"startPacket","ranges":[{"startOffset":8190,"endOffset":8414,"count":378}],"isBlockCoverage":true},{"functionName":"waitForPackets","ranges":[{"startOffset":8418,"endOffset":8712,"count":379},{"startOffset":8490,"endOffset":8519,"count":378},{"startOffset":8519,"endOffset":8593,"count":43},{"startOffset":8593,"endOffset":8644,"count":335},{"startOffset":8644,"endOffset":8711,"count":378}],"isBlockCoverage":true},{"functionName":"readOson","ranges":[{"startOffset":8818,"endOffset":9201,"count":0}],"isBlockCoverage":false},{"functionName":"readURowID","ranges":[{"startOffset":9205,"endOffset":11410,"count":0}],"isBlockCoverage":false},{"functionName":"readRowID","ranges":[{"startOffset":11414,"endOffset":11646,"count":230}],"isBlockCoverage":true},{"functionName":"skipBytesChunked","ranges":[{"startOffset":11650,"endOffset":12106,"count":185},{"startOffset":11786,"endOffset":11807,"count":0},{"startOffset":11905,"endOffset":12102,"count":0}],"isBlockCoverage":true},{"functionName":"readNullTerminatedBytes","ranges":[{"startOffset":12110,"endOffset":12566,"count":43},{"startOffset":12244,"endOffset":12370,"count":860},{"startOffset":12313,"endOffset":12337,"count":43},{"startOffset":12337,"endOffset":12370,"count":817},{"startOffset":12399,"endOffset":12522,"count":0}],"isBlockCoverage":true},{"functionName":"WritePacket","ranges":[{"startOffset":12688,"endOffset":12988,"count":43}],"isBlockCoverage":true},{"functionName":"_grow","ranges":[{"startOffset":13189,"endOffset":13226,"count":0}],"isBlockCoverage":false},{"functionName":"_sendPacket","ranges":[{"startOffset":13371,"endOffset":13844,"count":377},{"startOffset":13515,"endOffset":13589,"count":0},{"startOffset":13743,"endOffset":13806,"count":0}],"isBlockCoverage":true},{"functionName":"startPacket","ranges":[{"startOffset":13882,"endOffset":14064,"count":377}],"isBlockCoverage":true},{"functionName":"startRequest","ranges":[{"startOffset":14112,"endOffset":14224,"count":377}],"isBlockCoverage":true},{"functionName":"endRequest","ranges":[{"startOffset":14270,"endOffset":14375,"count":377}],"isBlockCoverage":true},{"functionName":"writeKeyValue","ranges":[{"startOffset":14379,"endOffset":14744,"count":516}],"isBlockCoverage":true},{"functionName":"writeOson","ranges":[{"startOffset":14870,"endOffset":15047,"count":0}],"isBlockCoverage":false},{"functionName":"writeSeqNum","ranges":[{"startOffset":15051,"endOffset":15186,"count":291}],"isBlockCoverage":true}]},{"scriptId":"855","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/oson.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22589,"count":1}],"isBlockCoverage":true},{"functionName":"_decodeContainerNode","ranges":[{"startOffset":1804,"endOffset":3568,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeNode","ranges":[{"startOffset":3842,"endOffset":6678,"count":0}],"isBlockCoverage":false},{"functionName":"_getNumChildren","ranges":[{"startOffset":7378,"endOffset":7668,"count":0}],"isBlockCoverage":false},{"functionName":"_getOffset","ranges":[{"startOffset":8003,"endOffset":8143,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":8416,"endOffset":11503,"count":0}],"isBlockCoverage":false},{"functionName":"OsonFieldName","ranges":[{"startOffset":11533,"endOffset":12051,"count":0}],"isBlockCoverage":false},{"functionName":"OsonFieldNamesSegment","ranges":[{"startOffset":12112,"endOffset":12272,"count":0}],"isBlockCoverage":false},{"functionName":"_examineNode","ranges":[{"startOffset":12687,"endOffset":13407,"count":0}],"isBlockCoverage":false},{"functionName":"_processFieldNames","ranges":[{"startOffset":13674,"endOffset":14385,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeArray","ranges":[{"startOffset":14673,"endOffset":15035,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeContainer","ranges":[{"startOffset":15320,"endOffset":15873,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeObject","ranges":[{"startOffset":16112,"endOffset":17007,"count":0}],"isBlockCoverage":false},{"functionName":"encodeNode","ranges":[{"startOffset":17248,"endOffset":19350,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":19659,"endOffset":22533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"856","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/networkSession.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21340,"count":1}],"isBlockCoverage":true},{"functionName":"getConnectionInfo","ranges":[{"startOffset":1854,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"resolveConnectStr","ranges":[{"startOffset":2788,"endOffset":3809,"count":43},{"startOffset":2953,"endOffset":2983,"count":0},{"startOffset":3135,"endOffset":3781,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAddress","ranges":[{"startOffset":3811,"endOffset":3957,"count":43}],"isBlockCoverage":true},{"functionName":"timeout","ranges":[{"startOffset":4126,"endOffset":4713,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4242,"endOffset":4524,"count":43},{"startOffset":4346,"endOffset":4367,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4392,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4586,"endOffset":4647,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4655,"endOffset":4709,"count":0}],"isBlockCoverage":false},{"functionName":"NetworkSession","ranges":[{"startOffset":4871,"endOffset":5000,"count":43}],"isBlockCoverage":true},{"functionName":"getAddress","ranges":[{"startOffset":5004,"endOffset":5942,"count":43},{"startOffset":5206,"endOffset":5223,"count":0}],"isBlockCoverage":true},{"functionName":"transportConnect","ranges":[{"startOffset":5999,"endOffset":6779,"count":43},{"startOffset":6104,"endOffset":6225,"count":0},{"startOffset":6295,"endOffset":6338,"count":0},{"startOffset":6397,"endOffset":6525,"count":0}],"isBlockCoverage":true},{"functionName":"_sendConnect","ranges":[{"startOffset":6879,"endOffset":7076,"count":86},{"startOffset":6973,"endOffset":7072,"count":0}],"isBlockCoverage":true},{"functionName":"connect2","ranges":[{"startOffset":7311,"endOffset":12001,"count":43},{"startOffset":7384,"endOffset":7604,"count":0},{"startOffset":7934,"endOffset":7991,"count":0},{"startOffset":8181,"endOffset":11404,"count":86},{"startOffset":8319,"endOffset":8370,"count":43},{"startOffset":8370,"endOffset":9403,"count":0},{"startOffset":9403,"endOffset":11398,"count":43},{"startOffset":9531,"endOffset":9623,"count":0},{"startOffset":9670,"endOffset":11398,"count":0}],"isBlockCoverage":true},{"functionName":"connect1","ranges":[{"startOffset":12079,"endOffset":13181,"count":43},{"startOffset":12219,"endOffset":12415,"count":0},{"startOffset":12493,"endOffset":13073,"count":0},{"startOffset":13140,"endOffset":13177,"count":0}],"isBlockCoverage":true},{"functionName":"_processPacket","ranges":[{"startOffset":13228,"endOffset":14162,"count":466},{"startOffset":13286,"endOffset":13385,"count":376},{"startOffset":13392,"endOffset":13498,"count":4},{"startOffset":13505,"endOffset":13608,"count":0},{"startOffset":13615,"endOffset":13781,"count":43},{"startOffset":13788,"endOffset":13896,"count":0},{"startOffset":13903,"endOffset":13953,"count":43},{"startOffset":13960,"endOffset":14074,"count":0},{"startOffset":14081,"endOffset":14152,"count":0}],"isBlockCoverage":true},{"functionName":"_recvPacket","ranges":[{"startOffset":14268,"endOffset":14532,"count":467},{"startOffset":14385,"endOffset":14413,"count":466},{"startOffset":14413,"endOffset":14419,"count":0},{"startOffset":14419,"endOffset":14522,"count":466}],"isBlockCoverage":true},{"functionName":"_sendPacket","ranges":[{"startOffset":14574,"endOffset":14626,"count":118}],"isBlockCoverage":true},{"functionName":"sendBreak","ranges":[{"startOffset":14671,"endOffset":15031,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":15073,"endOffset":15777,"count":2},{"startOffset":15146,"endOffset":15299,"count":0}],"isBlockCoverage":true},{"functionName":"recvPacket","ranges":[{"startOffset":15811,"endOffset":15872,"count":379}],"isBlockCoverage":true},{"functionName":"syncRecvPacket","ranges":[{"startOffset":15876,"endOffset":16140,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":16312,"endOffset":17194,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":17234,"endOffset":17550,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":17599,"endOffset":18346,"count":43},{"startOffset":17699,"endOffset":17728,"count":0},{"startOffset":17904,"endOffset":18283,"count":0}],"isBlockCoverage":true},{"functionName":"disconnect","ranges":[{"startOffset":18415,"endOffset":18831,"count":30},{"startOffset":18459,"endOffset":18480,"count":0}],"isBlockCoverage":true},{"functionName":"getOption","ranges":[{"startOffset":18951,"endOffset":20298,"count":215},{"startOffset":19000,"endOffset":19120,"count":0},{"startOffset":19128,"endOffset":19263,"count":43},{"startOffset":19271,"endOffset":19393,"count":43},{"startOffset":19401,"endOffset":19532,"count":43},{"startOffset":19540,"endOffset":19738,"count":43},{"startOffset":19698,"endOffset":19738,"count":0},{"startOffset":19746,"endOffset":19896,"count":0},{"startOffset":19904,"endOffset":20031,"count":43},{"startOffset":20039,"endOffset":20178,"count":0},{"startOffset":20186,"endOffset":20288,"count":0}],"isBlockCoverage":true},{"functionName":"recvInbandNotif","ranges":[{"startOffset":20527,"endOffset":21258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"857","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/packet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11899,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectPacket","ranges":[{"startOffset":1472,"endOffset":4366,"count":43},{"startOffset":1735,"endOffset":1791,"count":0},{"startOffset":2623,"endOffset":2698,"count":0},{"startOffset":2897,"endOffset":2967,"count":0}],"isBlockCoverage":true},{"functionName":"DataPacket","ranges":[{"startOffset":4477,"endOffset":6704,"count":129}],"isBlockCoverage":true},{"functionName":"DataPacket.createPacket","ranges":[{"startOffset":4838,"endOffset":5172,"count":43}],"isBlockCoverage":true},{"functionName":"DataPacket.fillBuf","ranges":[{"startOffset":5398,"endOffset":5947,"count":0}],"isBlockCoverage":false},{"functionName":"DataPacket.prepare2Send","ranges":[{"startOffset":6053,"endOffset":6358,"count":30},{"startOffset":6166,"endOffset":6243,"count":0}],"isBlockCoverage":true},{"functionName":"DataPacket.fromPacket","ranges":[{"startOffset":6476,"endOffset":6701,"count":376}],"isBlockCoverage":true},{"functionName":"AcceptPacket","ranges":[{"startOffset":6815,"endOffset":7788,"count":43},{"startOffset":7621,"endOffset":7786,"count":0}],"isBlockCoverage":true},{"functionName":"RefusePacket","ranges":[{"startOffset":7846,"endOffset":8334,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectPacket","ranges":[{"startOffset":8403,"endOffset":8787,"count":0}],"isBlockCoverage":false},{"functionName":"MarkerPacket","ranges":[{"startOffset":8860,"endOffset":10214,"count":43},{"startOffset":9106,"endOffset":9175,"count":0}],"isBlockCoverage":true},{"functionName":"MarkerPacket.prepare","ranges":[{"startOffset":9423,"endOffset":9551,"count":2}],"isBlockCoverage":true},{"functionName":"MarkerPacket.fromPacket","ranges":[{"startOffset":9700,"endOffset":10211,"count":4},{"startOffset":9814,"endOffset":9881,"count":0},{"startOffset":10048,"endOffset":10119,"count":2},{"startOffset":10141,"endOffset":10201,"count":0}],"isBlockCoverage":true},{"functionName":"ControlPacket","ranges":[{"startOffset":10251,"endOffset":11762,"count":43}],"isBlockCoverage":true},{"functionName":"ControlPacket.clear","ranges":[{"startOffset":10334,"endOffset":10434,"count":0}],"isBlockCoverage":false},{"functionName":"ControlPacket.fromPacket","ranges":[{"startOffset":10530,"endOffset":11759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"858","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8139,"count":1}],"isBlockCoverage":true}]},{"scriptId":"859","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/ntTcp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16422,"count":1}],"isBlockCoverage":true},{"functionName":"NTTCP","ranges":[{"startOffset":2050,"endOffset":2372,"count":43}],"isBlockCoverage":true},{"functionName":"dnMatch","ranges":[{"startOffset":2429,"endOffset":3868,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnect","ranges":[{"startOffset":3940,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"ntConnect","ranges":[{"startOffset":4853,"endOffset":6567,"count":43},{"startOffset":4903,"endOffset":4945,"count":0},{"startOffset":6190,"endOffset":6215,"count":0},{"startOffset":6241,"endOffset":6563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5166,"endOffset":6168,"count":43},{"startOffset":5203,"endOffset":5892,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5508,"endOffset":5747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5776,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5962,"endOffset":6033,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6070,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6653,"endOffset":8005,"count":43},{"startOffset":6961,"endOffset":7162,"count":0},{"startOffset":7353,"endOffset":7911,"count":0}],"isBlockCoverage":true},{"functionName":"disconnect","ranges":[{"startOffset":8101,"endOffset":8426,"count":30},{"startOffset":8247,"endOffset":8269,"count":0}],"isBlockCoverage":true},{"functionName":"getPacketDump","ranges":[{"startOffset":8539,"endOffset":9434,"count":0}],"isBlockCoverage":false},{"functionName":"printPacket","ranges":[{"startOffset":9590,"endOffset":10169,"count":0}],"isBlockCoverage":false},{"functionName":"checkErr","ranges":[{"startOffset":10207,"endOffset":10760,"count":1469},{"startOffset":10257,"endOffset":10756,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":10858,"endOffset":11320,"count":495},{"startOffset":10946,"endOffset":11032,"count":0},{"startOffset":11221,"endOffset":11258,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11075,"endOffset":11201,"count":495},{"startOffset":11101,"endOffset":11195,"count":0}],"isBlockCoverage":true},{"functionName":"shouldPauseWrite","ranges":[{"startOffset":11569,"endOffset":11662,"count":0}],"isBlockCoverage":false},{"functionName":"pauseWrite","ranges":[{"startOffset":11884,"endOffset":12189,"count":0}],"isBlockCoverage":false},{"functionName":"startRead","ranges":[{"startOffset":12228,"endOffset":13909,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12309,"endOffset":13903,"count":465},{"startOffset":12422,"endOffset":12482,"count":0},{"startOffset":12575,"endOffset":13896,"count":466},{"startOffset":12668,"endOffset":12719,"count":380},{"startOffset":12719,"endOffset":12776,"count":86},{"startOffset":12894,"endOffset":12900,"count":0},{"startOffset":13255,"endOffset":13329,"count":465},{"startOffset":13393,"endOffset":13484,"count":0},{"startOffset":13773,"endOffset":13827,"count":465},{"startOffset":13827,"endOffset":13887,"count":1}],"isBlockCoverage":true},{"functionName":"syncReceive","ranges":[{"startOffset":14021,"endOffset":14073,"count":0}],"isBlockCoverage":false},{"functionName":"receive","ranges":[{"startOffset":14145,"endOffset":14414,"count":467},{"startOffset":14198,"endOffset":14377,"count":466},{"startOffset":14348,"endOffset":14377,"count":465},{"startOffset":14377,"endOffset":14413,"count":466}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14247,"endOffset":14346,"count":466}],"isBlockCoverage":true},{"functionName":"renegTLS","ranges":[{"startOffset":14473,"endOffset":14879,"count":0}],"isBlockCoverage":false},{"functionName":"setupEventHandlers","ranges":[{"startOffset":14925,"endOffset":15491,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15015,"endOffset":15110,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15140,"endOffset":15205,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15237,"endOffset":15309,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15341,"endOffset":15484,"count":0}],"isBlockCoverage":false},{"functionName":"getOption","ranges":[{"startOffset":15610,"endOffset":16104,"count":43},{"startOffset":15679,"endOffset":15782,"count":0},{"startOffset":15880,"endOffset":15897,"count":0},{"startOffset":15992,"endOffset":16094,"count":0}],"isBlockCoverage":true},{"functionName":"_notifyWaiters","ranges":[{"startOffset":16192,"endOffset":16393,"count":60},{"startOffset":16237,"endOffset":16301,"count":0},{"startOffset":16327,"endOffset":16389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"860","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/nvStrToNvPair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21088,"count":1}],"isBlockCoverage":true},{"functionName":"NVPair","ranges":[{"startOffset":2084,"endOffset":2192,"count":817}],"isBlockCoverage":true},{"functionName":"set setAtom","ranges":[{"startOffset":2195,"endOffset":2401,"count":516},{"startOffset":2252,"endOffset":2324,"count":0}],"isBlockCoverage":true},{"functionName":"_containsComment","ranges":[{"startOffset":2534,"endOffset":2931,"count":516},{"startOffset":2599,"endOffset":2909,"count":3354},{"startOffset":2633,"endOffset":2903,"count":0}],"isBlockCoverage":true},{"functionName":"getListSize","ranges":[{"startOffset":3009,"endOffset":3111,"count":3268},{"startOffset":3058,"endOffset":3067,"count":516},{"startOffset":3067,"endOffset":3107,"count":2752}],"isBlockCoverage":true},{"functionName":"getListElement","ranges":[{"startOffset":3238,"endOffset":3347,"count":2279},{"startOffset":3293,"endOffset":3305,"count":0}],"isBlockCoverage":true},{"functionName":"addListElement","ranges":[{"startOffset":3434,"endOffset":3631,"count":731},{"startOffset":3484,"endOffset":3577,"count":301}],"isBlockCoverage":true},{"functionName":"removeListElement","ranges":[{"startOffset":3723,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"_space","ranges":[{"startOffset":4169,"endOffset":4300,"count":0}],"isBlockCoverage":false},{"functionName":"valueToString","ranges":[{"startOffset":4402,"endOffset":5021,"count":43},{"startOffset":4472,"endOffset":4508,"count":0},{"startOffset":4718,"endOffset":4995,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":5095,"endOffset":5801,"count":731},{"startOffset":5179,"endOffset":5215,"count":516},{"startOffset":5215,"endOffset":5760,"count":215},{"startOffset":5349,"endOffset":5417,"count":602},{"startOffset":5425,"endOffset":5754,"count":0}],"isBlockCoverage":true},{"functionName":"NVTokens","ranges":[{"startOffset":7171,"endOffset":7283,"count":129}],"isBlockCoverage":true},{"functionName":"_isWhiteSpace","ranges":[{"startOffset":7466,"endOffset":7646,"count":3784},{"startOffset":7598,"endOffset":7624,"count":0}],"isBlockCoverage":true},{"functionName":"_trimWhiteSpace","ranges":[{"startOffset":7727,"endOffset":8146,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokens","ranges":[{"startOffset":8434,"endOffset":11898,"count":129},{"startOffset":8813,"endOffset":11781,"count":3784},{"startOffset":8909,"endOffset":8933,"count":0},{"startOffset":9137,"endOffset":9285,"count":817},{"startOffset":9297,"endOffset":9441,"count":817},{"startOffset":9453,"endOffset":9601,"count":817},{"startOffset":9612,"endOffset":9757,"count":0},{"startOffset":9769,"endOffset":11757,"count":1333},{"startOffset":10197,"endOffset":10335,"count":0},{"startOffset":10367,"endOffset":11492,"count":11008},{"startOffset":10547,"endOffset":10616,"count":0},{"startOffset":10648,"endOffset":10886,"count":0},{"startOffset":11067,"endOffset":11116,"count":10492},{"startOffset":11103,"endOffset":11115,"count":0},{"startOffset":11135,"endOffset":11184,"count":10492},{"startOffset":11171,"endOffset":11183,"count":903},{"startOffset":11186,"endOffset":11408,"count":1333},{"startOffset":11424,"endOffset":11492,"count":9675},{"startOffset":11524,"endOffset":11626,"count":0}],"isBlockCoverage":true},{"functionName":"getToken","ranges":[{"startOffset":12063,"endOffset":12393,"count":5719},{"startOffset":12105,"endOffset":12195,"count":0},{"startOffset":12311,"endOffset":12389,"count":0}],"isBlockCoverage":true},{"functionName":"popToken","ranges":[{"startOffset":12555,"endOffset":12919,"count":0}],"isBlockCoverage":false},{"functionName":"getLiteral","ranges":[{"startOffset":13207,"endOffset":13616,"count":0}],"isBlockCoverage":false},{"functionName":"popLiteral","ranges":[{"startOffset":13901,"endOffset":14314,"count":1333},{"startOffset":13974,"endOffset":14046,"count":0},{"startOffset":14209,"endOffset":14287,"count":0}],"isBlockCoverage":true},{"functionName":"eatToken","ranges":[{"startOffset":14371,"endOffset":14452,"count":2451}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":14517,"endOffset":14734,"count":0}],"isBlockCoverage":false},{"functionName":"_addToken","ranges":[{"startOffset":14879,"endOffset":15001,"count":3913}],"isBlockCoverage":true},{"functionName":"createNVPair","ranges":[{"startOffset":15244,"endOffset":15372,"count":129}],"isBlockCoverage":true},{"functionName":"readTopLevelNVPair","ranges":[{"startOffset":15493,"endOffset":16062,"count":129},{"startOffset":15621,"endOffset":15689,"count":0},{"startOffset":15799,"endOffset":16021,"count":0}],"isBlockCoverage":true},{"functionName":"readNVPair","ranges":[{"startOffset":16206,"endOffset":16538,"count":688},{"startOffset":16338,"endOffset":16358,"count":0},{"startOffset":16361,"endOffset":16429,"count":0}],"isBlockCoverage":true},{"functionName":"readRightHandSide","ranges":[{"startOffset":16655,"endOffset":17699,"count":817},{"startOffset":16941,"endOffset":17021,"count":516},{"startOffset":17021,"endOffset":17158,"count":301},{"startOffset":17177,"endOffset":17192,"count":0},{"startOffset":17197,"endOffset":17391,"count":0},{"startOffset":17397,"endOffset":17470,"count":0},{"startOffset":17587,"endOffset":17682,"count":0}],"isBlockCoverage":true},{"functionName":"readNVLiteral","ranges":[{"startOffset":17765,"endOffset":17946,"count":1333},{"startOffset":17849,"endOffset":17917,"count":0}],"isBlockCoverage":true},{"functionName":"readNVList","ranges":[{"startOffset":18054,"endOffset":18626,"count":989},{"startOffset":18228,"endOffset":18246,"count":301},{"startOffset":18249,"endOffset":18291,"count":301},{"startOffset":18291,"endOffset":18436,"count":688},{"startOffset":18438,"endOffset":18565,"count":0},{"startOffset":18565,"endOffset":18625,"count":688}],"isBlockCoverage":true},{"functionName":"findNVPairRecurse","ranges":[{"startOffset":18899,"endOffset":19589,"count":989},{"startOffset":19027,"endOffset":19049,"count":0},{"startOffset":19110,"endOffset":19121,"count":172},{"startOffset":19121,"endOffset":19239,"count":817},{"startOffset":19239,"endOffset":19251,"count":0},{"startOffset":19251,"endOffset":19377,"count":817},{"startOffset":19377,"endOffset":19571,"count":731},{"startOffset":19554,"endOffset":19567,"count":172},{"startOffset":19571,"endOffset":19588,"count":645}],"isBlockCoverage":true},{"functionName":"findNVPair","ranges":[{"startOffset":19842,"endOffset":20306,"count":344},{"startOffset":19887,"endOffset":19909,"count":0},{"startOffset":20027,"endOffset":20039,"count":0},{"startOffset":20165,"endOffset":20289,"count":774},{"startOffset":20272,"endOffset":20285,"count":215},{"startOffset":20289,"endOffset":20305,"count":129}],"isBlockCoverage":true},{"functionName":"findValue","ranges":[{"startOffset":20470,"endOffset":21012,"count":172},{"startOffset":20515,"endOffset":20537,"count":0},{"startOffset":20654,"endOffset":20666,"count":0},{"startOffset":20749,"endOffset":20833,"count":344},{"startOffset":20817,"endOffset":20829,"count":129},{"startOffset":20833,"endOffset":20861,"count":43},{"startOffset":20861,"endOffset":20962,"count":0},{"startOffset":20962,"endOffset":21010,"count":43}],"isBlockCoverage":true}]},{"scriptId":"861","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/sessionAtts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4963,"count":1}],"isBlockCoverage":true},{"functionName":"genuuid","ranges":[{"startOffset":1376,"endOffset":1594,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1430,"endOffset":1590,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1480,"endOffset":1584,"count":43},{"startOffset":1511,"endOffset":1541,"count":0}],"isBlockCoverage":true},{"functionName":"SessionAtts","ranges":[{"startOffset":1657,"endOffset":1893,"count":43}],"isBlockCoverage":true},{"functionName":"setFrom","ranges":[{"startOffset":2006,"endOffset":3918,"count":86},{"startOffset":2068,"endOffset":2118,"count":0},{"startOffset":2172,"endOffset":2276,"count":0},{"startOffset":2330,"endOffset":2395,"count":0},{"startOffset":2429,"endOffset":2498,"count":0},{"startOffset":2536,"endOffset":2605,"count":0},{"startOffset":2652,"endOffset":2739,"count":0},{"startOffset":2774,"endOffset":2837,"count":0},{"startOffset":2872,"endOffset":2935,"count":0},{"startOffset":2993,"endOffset":3063,"count":0},{"startOffset":3114,"endOffset":3171,"count":0},{"startOffset":3228,"endOffset":3297,"count":0},{"startOffset":3357,"endOffset":3432,"count":0},{"startOffset":3487,"endOffset":3554,"count":0},{"startOffset":3599,"endOffset":3641,"count":0},{"startOffset":3643,"endOffset":3687,"count":0},{"startOffset":3737,"endOffset":3794,"count":0},{"startOffset":3833,"endOffset":3908,"count":0}],"isBlockCoverage":true},{"functionName":"readWalletFile","ranges":[{"startOffset":3973,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":4312,"endOffset":4928,"count":43},{"startOffset":4482,"endOffset":4552,"count":0},{"startOffset":4704,"endOffset":4725,"count":0},{"startOffset":4728,"endOffset":4787,"count":0}],"isBlockCoverage":true}]},{"scriptId":"862","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/connStrategy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9009,"count":1}],"isBlockCoverage":true},{"functionName":"ConnectDescription","ranges":[{"startOffset":1464,"endOffset":1513,"count":43}],"isBlockCoverage":true},{"functionName":"addConnectOption","ranges":[{"startOffset":1517,"endOffset":1570,"count":86}],"isBlockCoverage":true},{"functionName":"getConnectOptions","ranges":[{"startOffset":1574,"endOffset":1622,"count":86}],"isBlockCoverage":true},{"functionName":"ConnStrategy","ranges":[{"startOffset":1717,"endOffset":2003,"count":43}],"isBlockCoverage":true},{"functionName":"hasMoreOptions","ranges":[{"startOffset":2007,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"newConnectionDescription","ranges":[{"startOffset":2238,"endOffset":2362,"count":43}],"isBlockCoverage":true},{"functionName":"getcurrentDescription","ranges":[{"startOffset":2366,"endOffset":2431,"count":301}],"isBlockCoverage":true},{"functionName":"closeDescription","ranges":[{"startOffset":2435,"endOffset":2551,"count":43}],"isBlockCoverage":true},{"functionName":"execute","ranges":[{"startOffset":2732,"endOffset":4820,"count":43},{"startOffset":2934,"endOffset":2988,"count":0},{"startOffset":3686,"endOffset":3741,"count":0},{"startOffset":4302,"endOffset":4446,"count":0},{"startOffset":4448,"endOffset":4489,"count":0},{"startOffset":4519,"endOffset":4819,"count":0}],"isBlockCoverage":true},{"functionName":"sleep","ranges":[{"startOffset":4862,"endOffset":4948,"count":0}],"isBlockCoverage":false},{"functionName":"createNode","ranges":[{"startOffset":5135,"endOffset":5900,"count":43},{"startOffset":5244,"endOffset":5269,"count":0},{"startOffset":5373,"endOffset":5434,"count":0},{"startOffset":5439,"endOffset":5509,"count":0},{"startOffset":5588,"endOffset":5666,"count":0},{"startOffset":5671,"endOffset":5786,"count":0}],"isBlockCoverage":true},{"functionName":"DownHostsCache","ranges":[{"startOffset":5929,"endOffset":6237,"count":1}],"isBlockCoverage":true},{"functionName":"markDownHost","ranges":[{"startOffset":6419,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"refreshCache","ranges":[{"startOffset":6553,"endOffset":6954,"count":86},{"startOffset":6652,"endOffset":6950,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6691,"endOffset":6901,"count":0}],"isBlockCoverage":false},{"functionName":"reorderAddresses","ranges":[{"startOffset":7055,"endOffset":7654,"count":43},{"startOffset":7281,"endOffset":7322,"count":86},{"startOffset":7332,"endOffset":7341,"count":86},{"startOffset":7430,"endOffset":7470,"count":0},{"startOffset":7480,"endOffset":7489,"count":0},{"startOffset":7561,"endOffset":7625,"count":0}],"isBlockCoverage":true},{"functionName":"isDownDescCached","ranges":[{"startOffset":7802,"endOffset":8009,"count":0}],"isBlockCoverage":false},{"functionName":"reorderDescriptionList","ranges":[{"startOffset":8167,"endOffset":8773,"count":43},{"startOffset":8301,"endOffset":8751,"count":0}],"isBlockCoverage":true},{"functionName":"isDownHostsCached","ranges":[{"startOffset":8808,"endOffset":8887,"count":86}],"isBlockCoverage":true}]},{"scriptId":"863","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/navNodes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27330,"count":1}],"isBlockCoverage":true},{"functionName":"isS","ranges":[{"startOffset":1651,"endOffset":1708,"count":0}],"isBlockCoverage":false},{"functionName":"initFromString","ranges":[{"startOffset":1961,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"initFromNVPair","ranges":[{"startOffset":2219,"endOffset":3001,"count":43},{"startOffset":2310,"endOffset":2368,"count":0},{"startOffset":2848,"endOffset":2885,"count":0},{"startOffset":2919,"endOffset":2964,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":3062,"endOffset":3100,"count":86}],"isBlockCoverage":true},{"functionName":"AddressList","ranges":[{"startOffset":3175,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"isS","ranges":[{"startOffset":3362,"endOffset":3424,"count":0}],"isBlockCoverage":false},{"functionName":"initFromString","ranges":[{"startOffset":3671,"endOffset":3757,"count":0}],"isBlockCoverage":false},{"functionName":"initFromNVPair","ranges":[{"startOffset":3929,"endOffset":5502,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5564,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"Description","ranges":[{"startOffset":6133,"endOffset":6322,"count":43}],"isBlockCoverage":true},{"functionName":"isS","ranges":[{"startOffset":6381,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"initFromString","ranges":[{"startOffset":6693,"endOffset":6779,"count":0}],"isBlockCoverage":false},{"functionName":"initFromNVPair","ranges":[{"startOffset":7014,"endOffset":11262,"count":43},{"startOffset":7154,"endOffset":7212,"count":0},{"startOffset":7253,"endOffset":11258,"count":86},{"startOffset":7350,"endOffset":7539,"count":0},{"startOffset":7595,"endOffset":7784,"count":0},{"startOffset":7836,"endOffset":8022,"count":0},{"startOffset":8078,"endOffset":8199,"count":0},{"startOffset":8250,"endOffset":11252,"count":43},{"startOffset":8648,"endOffset":8779,"count":0},{"startOffset":8849,"endOffset":11252,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":11265,"endOffset":11885,"count":0}],"isBlockCoverage":false},{"functionName":"DescriptionList","ranges":[{"startOffset":11970,"endOffset":12107,"count":0}],"isBlockCoverage":false},{"functionName":"isS","ranges":[{"startOffset":12157,"endOffset":12219,"count":0}],"isBlockCoverage":false},{"functionName":"initFromString","ranges":[{"startOffset":12464,"endOffset":12550,"count":0}],"isBlockCoverage":false},{"functionName":"initFromNVPair","ranges":[{"startOffset":12722,"endOffset":14091,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":14152,"endOffset":14857,"count":0}],"isBlockCoverage":false},{"functionName":"ConnOption","ranges":[{"startOffset":14958,"endOffset":15008,"count":86}],"isBlockCoverage":true},{"functionName":"NavAddress","ranges":[{"startOffset":15347,"endOffset":15379,"count":43}],"isBlockCoverage":true},{"functionName":"navigate","ranges":[{"startOffset":15466,"endOffset":17410,"count":43},{"startOffset":15588,"endOffset":15771,"count":0},{"startOffset":15919,"endOffset":16000,"count":0},{"startOffset":16149,"endOffset":16828,"count":86},{"startOffset":16518,"endOffset":16623,"count":0},{"startOffset":16837,"endOffset":16874,"count":0},{"startOffset":16880,"endOffset":17335,"count":0},{"startOffset":17369,"endOffset":17405,"count":0}],"isBlockCoverage":true},{"functionName":"addToString","ranges":[{"startOffset":17579,"endOffset":17868,"count":0}],"isBlockCoverage":false},{"functionName":"NavAddressList","ranges":[{"startOffset":17983,"endOffset":18079,"count":0}],"isBlockCoverage":false},{"functionName":"navigate","ranges":[{"startOffset":18226,"endOffset":18283,"count":0}],"isBlockCoverage":false},{"functionName":"navigate2","ranges":[{"startOffset":18287,"endOffset":19127,"count":0}],"isBlockCoverage":false},{"functionName":"addToString","ranges":[{"startOffset":19130,"endOffset":19419,"count":0}],"isBlockCoverage":false},{"functionName":"getChildrenSize","ranges":[{"startOffset":19424,"endOffset":19737,"count":0}],"isBlockCoverage":false},{"functionName":"getChildrenType","ranges":[{"startOffset":19775,"endOffset":19856,"count":0}],"isBlockCoverage":false},{"functionName":"getChild","ranges":[{"startOffset":19900,"endOffset":19962,"count":0}],"isBlockCoverage":false},{"functionName":"closeNVPair","ranges":[{"startOffset":19966,"endOffset":20898,"count":0}],"isBlockCoverage":false},{"functionName":"NavDescription","ranges":[{"startOffset":21013,"endOffset":21112,"count":43}],"isBlockCoverage":true},{"functionName":"navigate","ranges":[{"startOffset":21306,"endOffset":24201,"count":43},{"startOffset":21499,"endOffset":21617,"count":0},{"startOffset":21652,"endOffset":21706,"count":0},{"startOffset":21781,"endOffset":21864,"count":0},{"startOffset":21915,"endOffset":22017,"count":0},{"startOffset":22056,"endOffset":22133,"count":0},{"startOffset":22164,"endOffset":22224,"count":0},{"startOffset":22262,"endOffset":22337,"count":0},{"startOffset":22371,"endOffset":22437,"count":0},{"startOffset":22600,"endOffset":23221,"count":0},{"startOffset":23263,"endOffset":23347,"count":0},{"startOffset":23385,"endOffset":23460,"count":0},{"startOffset":23485,"endOffset":23533,"count":0},{"startOffset":23901,"endOffset":24169,"count":0}],"isBlockCoverage":true},{"functionName":"closeNVPair","ranges":[{"startOffset":24205,"endOffset":25277,"count":43},{"startOffset":24274,"endOffset":24281,"count":0},{"startOffset":24414,"endOffset":25273,"count":86},{"startOffset":24445,"endOffset":24504,"count":0},{"startOffset":24591,"endOffset":24646,"count":0},{"startOffset":24938,"endOffset":24980,"count":0},{"startOffset":25017,"endOffset":25076,"count":0},{"startOffset":25114,"endOffset":25175,"count":0}],"isBlockCoverage":true},{"functionName":"getIntValue","ranges":[{"startOffset":25281,"endOffset":25426,"count":0}],"isBlockCoverage":false},{"functionName":"NavDescriptionList","ranges":[{"startOffset":25548,"endOffset":25741,"count":0}],"isBlockCoverage":false},{"functionName":"navigate","ranges":[{"startOffset":25888,"endOffset":26227,"count":0}],"isBlockCoverage":false},{"functionName":"setActiveChildren","ranges":[{"startOffset":26369,"endOffset":27241,"count":43},{"startOffset":26657,"endOffset":26935,"count":0},{"startOffset":26988,"endOffset":27209,"count":0}],"isBlockCoverage":true}]},{"scriptId":"864","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8888,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2706,"endOffset":3050,"count":1},{"startOffset":2753,"endOffset":2833,"count":0},{"startOffset":2945,"endOffset":2966,"count":0},{"startOffset":2968,"endOffset":3048,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupall","ranges":[{"startOffset":3053,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":3664,"endOffset":6271,"count":1},{"startOffset":3928,"endOffset":3973,"count":0},{"startOffset":4012,"endOffset":4137,"count":0},{"startOffset":4201,"endOffset":4364,"count":0},{"startOffset":4607,"endOffset":4917,"count":0},{"startOffset":4948,"endOffset":5031,"count":0},{"startOffset":5067,"endOffset":5170,"count":0},{"startOffset":5193,"endOffset":5401,"count":0},{"startOffset":5464,"endOffset":5680,"count":0},{"startOffset":5822,"endOffset":5835,"count":0},{"startOffset":5951,"endOffset":6047,"count":0},{"startOffset":6074,"endOffset":6255,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6417,"endOffset":6763,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":6766,"endOffset":7561,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":7715,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8751,"endOffset":8879,"count":5},{"startOffset":8788,"endOffset":8850,"count":1}],"isBlockCoverage":true}]},{"scriptId":"865","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2830,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":668,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1124,"endOffset":2062,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1159,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2323,"endOffset":2795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"866","url":"node:internal/dns/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8553,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":1513,"endOffset":1892,"count":43},{"startOffset":1560,"endOffset":1643,"count":0},{"startOffset":1787,"endOffset":1808,"count":0},{"startOffset":1810,"endOffset":1890,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupall","ranges":[{"startOffset":1894,"endOffset":2404,"count":43},{"startOffset":1944,"endOffset":2027,"count":0},{"startOffset":2105,"endOffset":2231,"count":86},{"startOffset":2299,"endOffset":2320,"count":0},{"startOffset":2322,"endOffset":2402,"count":0}],"isBlockCoverage":true},{"functionName":"createLookupPromise","ranges":[{"startOffset":2406,"endOffset":3477,"count":86}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2498,"endOffset":3473,"count":86},{"startOffset":2540,"endOffset":2680,"count":0},{"startOffset":2754,"endOffset":2882,"count":0},{"startOffset":3006,"endOffset":3019,"count":43},{"startOffset":3020,"endOffset":3030,"count":43},{"startOffset":3177,"endOffset":3242,"count":0},{"startOffset":3272,"endOffset":3469,"count":0}],"isBlockCoverage":true},{"functionName":"lookup","ranges":[{"startOffset":3512,"endOffset":4628,"count":86},{"startOffset":3764,"endOffset":3844,"count":0},{"startOffset":3876,"endOffset":3906,"count":43},{"startOffset":3908,"endOffset":3992,"count":0},{"startOffset":4015,"endOffset":4022,"count":43},{"startOffset":4032,"endOffset":4156,"count":0},{"startOffset":4172,"endOffset":4180,"count":43},{"startOffset":4190,"endOffset":4298,"count":0},{"startOffset":4314,"endOffset":4319,"count":43},{"startOffset":4329,"endOffset":4412,"count":43},{"startOffset":4428,"endOffset":4438,"count":43},{"startOffset":4448,"endOffset":4551,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":4631,"endOffset":4979,"count":0}],"isBlockCoverage":false},{"functionName":"createLookupServicePromise","ranges":[{"startOffset":4981,"endOffset":5622,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":5624,"endOffset":5908,"count":0}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":5911,"endOffset":6354,"count":0}],"isBlockCoverage":false},{"functionName":"createResolverPromise","ranges":[{"startOffset":6356,"endOffset":7049,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":7051,"endOffset":7363,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":7086,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7365,"endOffset":7718,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":7850,"endOffset":8056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"867","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9126,"count":1}],"isBlockCoverage":true},{"functionName":"populateClientInfo","ranges":[{"startOffset":1497,"endOffset":1760,"count":1},{"startOffset":1683,"endOffset":1725,"count":0}],"isBlockCoverage":true},{"functionName":"getMetadataMany","ranges":[{"startOffset":2083,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"getOutBinds","ranges":[{"startOffset":2448,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"getExecuteManyOutBinds","ranges":[{"startOffset":3162,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"getNumOutBinds","ranges":[{"startOffset":3691,"endOffset":3899,"count":124},{"startOffset":3794,"endOffset":3875,"count":337},{"startOffset":3843,"endOffset":3871,"count":0}],"isBlockCoverage":true},{"functionName":"getExecuteOutBinds","ranges":[{"startOffset":4146,"endOffset":4313,"count":124},{"startOffset":4276,"endOffset":4312,"count":0}],"isBlockCoverage":true},{"functionName":"cleanSql","ranges":[{"startOffset":4555,"endOffset":4761,"count":71}],"isBlockCoverage":true},{"functionName":"getBindVars","ranges":[{"startOffset":5014,"endOffset":5183,"count":124},{"startOffset":5120,"endOffset":5162,"count":337}],"isBlockCoverage":true},{"functionName":"checkProxyUserValidity","ranges":[{"startOffset":5422,"endOffset":8398,"count":43},{"startOffset":5784,"endOffset":6663,"count":215},{"startOffset":5857,"endOffset":5931,"count":0},{"startOffset":6009,"endOffset":6023,"count":0},{"startOffset":6025,"endOffset":6646,"count":0},{"startOffset":6719,"endOffset":8397,"count":0}],"isBlockCoverage":true},{"functionName":"checkCredentials","ranges":[{"startOffset":8630,"endOffset":8933,"count":43},{"startOffset":8740,"endOffset":8825,"count":0},{"startOffset":8865,"endOffset":8927,"count":0}],"isBlockCoverage":true}]},{"scriptId":"868","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/ezConnectResolver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18346,"count":1}],"isBlockCoverage":true},{"functionName":"EZConnectResolver","ranges":[{"startOffset":2955,"endOffset":3402,"count":43},{"startOffset":3101,"endOffset":3219,"count":0}],"isBlockCoverage":true},{"functionName":"getResolvedUrl","ranges":[{"startOffset":3486,"endOffset":3567,"count":43}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":3790,"endOffset":4456,"count":43},{"startOffset":4143,"endOffset":4293,"count":0}],"isBlockCoverage":true},{"functionName":"resolveToLongURLFormat","ranges":[{"startOffset":4602,"endOffset":6539,"count":43},{"startOffset":5277,"endOffset":5481,"count":0},{"startOffset":5575,"endOffset":5768,"count":0},{"startOffset":6227,"endOffset":6259,"count":0}],"isBlockCoverage":true},{"functionName":"buildConnectData","ranges":[{"startOffset":6947,"endOffset":7874,"count":43},{"startOffset":7309,"endOffset":7355,"count":0},{"startOffset":7382,"endOffset":7419,"count":0},{"startOffset":7448,"endOffset":7494,"count":0},{"startOffset":7530,"endOffset":7591,"count":0},{"startOffset":7618,"endOffset":7660,"count":0},{"startOffset":7687,"endOffset":7729,"count":0},{"startOffset":7764,"endOffset":7823,"count":0}],"isBlockCoverage":true},{"functionName":"buildAddressList","ranges":[{"startOffset":8330,"endOffset":10407,"count":43},{"startOffset":8524,"endOffset":8716,"count":0},{"startOffset":8744,"endOffset":8761,"count":0},{"startOffset":9561,"endOffset":9584,"count":0},{"startOffset":9594,"endOffset":9626,"count":0},{"startOffset":9717,"endOffset":9766,"count":0},{"startOffset":9980,"endOffset":10002,"count":0},{"startOffset":10012,"endOffset":10057,"count":0},{"startOffset":10124,"endOffset":10158,"count":0},{"startOffset":10181,"endOffset":10289,"count":0},{"startOffset":10343,"endOffset":10372,"count":0}],"isBlockCoverage":true},{"functionName":"getAddrStr","ranges":[{"startOffset":10597,"endOffset":10944,"count":43},{"startOffset":10782,"endOffset":10803,"count":0},{"startOffset":10811,"endOffset":10853,"count":0}],"isBlockCoverage":true},{"functionName":"buildDescriptionParams","ranges":[{"startOffset":11090,"endOffset":11413,"count":43},{"startOffset":11167,"endOffset":11412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11227,"endOffset":11378,"count":0}],"isBlockCoverage":false},{"functionName":"buildSecurityInfo","ranges":[{"startOffset":11635,"endOffset":12493,"count":43},{"startOffset":11765,"endOffset":12387,"count":0},{"startOffset":12439,"endOffset":12492,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedSettings","ranges":[{"startOffset":12925,"endOffset":13325,"count":43},{"startOffset":13193,"endOffset":13324,"count":0}],"isBlockCoverage":true},{"functionName":"parseExtendedProperties","ranges":[{"startOffset":13545,"endOffset":15213,"count":0}],"isBlockCoverage":false},{"functionName":"parseQuotedString","ranges":[{"startOffset":15671,"endOffset":16171,"count":0}],"isBlockCoverage":false},{"functionName":"addParam","ranges":[{"startOffset":16285,"endOffset":16623,"count":0}],"isBlockCoverage":false},{"functionName":"findExtendedSettingPosition","ranges":[{"startOffset":16627,"endOffset":16928,"count":43},{"startOffset":16739,"endOffset":16909,"count":516},{"startOffset":16771,"endOffset":16786,"count":0},{"startOffset":16822,"endOffset":16837,"count":0},{"startOffset":16872,"endOffset":16892,"count":0},{"startOffset":16894,"endOffset":16903,"count":0}],"isBlockCoverage":true},{"functionName":"initializeUrlAlias","ranges":[{"startOffset":17113,"endOffset":18308,"count":43}],"isBlockCoverage":true}]},{"scriptId":"869","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/sqlnet/paramParser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6109,"count":1}],"isBlockCoverage":true},{"functionName":"tnsnamesFilePath","ranges":[{"startOffset":1436,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"initializeNlpa","ranges":[{"startOffset":2321,"endOffset":4194,"count":0}],"isBlockCoverage":false},{"functionName":"checkNLPforComments","ranges":[{"startOffset":4555,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"addNLPListElement","ranges":[{"startOffset":5094,"endOffset":5627,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5632,"endOffset":5766,"count":0}],"isBlockCoverage":false},{"functionName":"findValueOf","ranges":[{"startOffset":5922,"endOffset":6046,"count":0}],"isBlockCoverage":false}]},{"scriptId":"870","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12685,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2552,"endOffset":3297,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":3616,"endOffset":4389,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4440,"endOffset":5171,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5705,"endOffset":5829,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6022,"endOffset":6066,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6112,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6205,"endOffset":6252,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6302,"endOffset":6346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6397,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6493,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6590,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6687,"endOffset":6732,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6780,"endOffset":6822,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6871,"endOffset":6914,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6964,"endOffset":7008,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7059,"endOffset":7104,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7158,"endOffset":7206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7261,"endOffset":7310,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7364,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7467,"endOffset":7516,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7560,"endOffset":7598,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7649,"endOffset":7694,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7745,"endOffset":7790,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7843,"endOffset":7890,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7940,"endOffset":7984,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8032,"endOffset":8074,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8212,"endOffset":8254,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8260,"endOffset":8308,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8358,"endOffset":8404,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8410,"endOffset":8462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8510,"endOffset":8554,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8560,"endOffset":8610,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8660,"endOffset":8706,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8712,"endOffset":8764,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8809,"endOffset":8850,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8856,"endOffset":8903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8958,"endOffset":9009,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9015,"endOffset":9072,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9122,"endOffset":9168,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9174,"endOffset":9226,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9276,"endOffset":9322,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9328,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":9976,"endOffset":10457,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":11523,"endOffset":12537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"871","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":644,"endOffset":2624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"872","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1559,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":492,"endOffset":592,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":595,"endOffset":1363,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1367,"endOffset":1491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"873","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3509,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":452,"endOffset":3473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"874","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/statement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11428,"count":1}],"isBlockCoverage":true},{"functionName":"BindInfo","ranges":[{"startOffset":2543,"endOffset":2834,"count":111}],"isBlockCoverage":true},{"functionName":"Statement","ranges":[{"startOffset":3037,"endOffset":3733,"count":71}],"isBlockCoverage":true},{"functionName":"_copy","ranges":[{"startOffset":3990,"endOffset":5019,"count":0}],"isBlockCoverage":false},{"functionName":"_determineStatementType","ranges":[{"startOffset":5326,"endOffset":7491,"count":71},{"startOffset":5605,"endOffset":5957,"count":0},{"startOffset":6008,"endOffset":6154,"count":12},{"startOffset":6154,"endOffset":7481,"count":59},{"startOffset":6292,"endOffset":6362,"count":24},{"startOffset":6362,"endOffset":6675,"count":35},{"startOffset":6397,"endOffset":6467,"count":1},{"startOffset":6467,"endOffset":6675,"count":34},{"startOffset":6572,"endOffset":6675,"count":0},{"startOffset":6683,"endOffset":7481,"count":0}],"isBlockCoverage":true},{"functionName":"_prepare","ranges":[{"startOffset":7847,"endOffset":9249,"count":71},{"startOffset":8273,"endOffset":8286,"count":59},{"startOffset":8287,"endOffset":8302,"count":0},{"startOffset":8354,"endOffset":9089,"count":59},{"startOffset":8806,"endOffset":8901,"count":0},{"startOffset":8926,"endOffset":8941,"count":0},{"startOffset":8943,"endOffset":9081,"count":0},{"startOffset":9153,"endOffset":9239,"count":0}],"isBlockCoverage":true},{"functionName":"_addBinds","ranges":[{"startOffset":9539,"endOffset":10254,"count":71}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9673,"endOffset":10248,"count":111},{"startOffset":9723,"endOffset":9750,"count":0},{"startOffset":9752,"endOffset":9824,"count":0},{"startOffset":9911,"endOffset":9941,"count":0},{"startOffset":9943,"endOffset":9968,"count":0},{"startOffset":10107,"endOffset":10173,"count":1},{"startOffset":10173,"endOffset":10242,"count":110}],"isBlockCoverage":true},{"functionName":"_setVariable","ranges":[{"startOffset":10709,"endOffset":11386,"count":341},{"startOffset":10798,"endOffset":10830,"count":230},{"startOffset":10839,"endOffset":10879,"count":230},{"startOffset":10888,"endOffset":10936,"count":230},{"startOffset":10945,"endOffset":10978,"count":230},{"startOffset":10987,"endOffset":11036,"count":230},{"startOffset":11038,"endOffset":11348,"count":111}],"isBlockCoverage":true}]},{"scriptId":"875","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1993,"count":1}],"isBlockCoverage":true}]},{"scriptId":"876","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/auth.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11972,"count":1}],"isBlockCoverage":true},{"functionName":"AuthMessage","ranges":[{"startOffset":1889,"endOffset":3868,"count":43},{"startOffset":2367,"endOffset":2400,"count":0},{"startOffset":2732,"endOffset":2925,"count":0},{"startOffset":3006,"endOffset":3232,"count":0},{"startOffset":3358,"endOffset":3399,"count":0},{"startOffset":3457,"endOffset":3511,"count":0},{"startOffset":3578,"endOffset":3738,"count":0}],"isBlockCoverage":true},{"functionName":"setAuthMode","ranges":[{"startOffset":3872,"endOffset":5021,"count":43},{"startOffset":4027,"endOffset":4089,"count":0},{"startOffset":4136,"endOffset":4199,"count":0},{"startOffset":4245,"endOffset":4307,"count":0},{"startOffset":4353,"endOffset":4415,"count":0},{"startOffset":4460,"endOffset":4522,"count":0},{"startOffset":4567,"endOffset":4629,"count":0},{"startOffset":4675,"endOffset":4737,"count":0},{"startOffset":4763,"endOffset":4828,"count":0},{"startOffset":4855,"endOffset":4926,"count":0}],"isBlockCoverage":true},{"functionName":"getAlterTimezoneStatement","ranges":[{"startOffset":5025,"endOffset":5720,"count":43},{"startOffset":5107,"endOffset":5151,"count":0},{"startOffset":5393,"endOffset":5494,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":5724,"endOffset":10204,"count":86},{"startOffset":5864,"endOffset":5902,"count":0},{"startOffset":6038,"endOffset":10200,"count":43},{"startOffset":6581,"endOffset":6711,"count":0},{"startOffset":6765,"endOffset":6801,"count":0},{"startOffset":6974,"endOffset":7019,"count":0},{"startOffset":7084,"endOffset":7210,"count":0},{"startOffset":7562,"endOffset":7602,"count":0},{"startOffset":7643,"endOffset":7679,"count":0},{"startOffset":7719,"endOffset":7755,"count":0},{"startOffset":7786,"endOffset":7822,"count":0},{"startOffset":7855,"endOffset":7988,"count":0},{"startOffset":8031,"endOffset":8067,"count":0},{"startOffset":8298,"endOffset":8360,"count":0},{"startOffset":9112,"endOffset":9186,"count":0},{"startOffset":9222,"endOffset":9303,"count":0},{"startOffset":9341,"endOffset":9428,"count":0},{"startOffset":9457,"endOffset":9536,"count":0},{"startOffset":9564,"endOffset":10079,"count":0},{"startOffset":10110,"endOffset":10193,"count":0}],"isBlockCoverage":true},{"functionName":"processReturnParameter","ranges":[{"startOffset":10208,"endOffset":11937,"count":86},{"startOffset":10314,"endOffset":10699,"count":2021},{"startOffset":10478,"endOffset":10542,"count":1935},{"startOffset":10612,"endOffset":10655,"count":43},{"startOffset":10765,"endOffset":11933,"count":43},{"startOffset":11219,"endOffset":11433,"count":0}],"isBlockCoverage":true}]},{"scriptId":"877","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/encryptDecrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7596,"count":1}],"isBlockCoverage":true},{"functionName":"_decrypt","ranges":[{"startOffset":1552,"endOffset":1889,"count":43}],"isBlockCoverage":true},{"functionName":"_encrypt","ranges":[{"startOffset":1893,"endOffset":2502,"count":129},{"startOffset":2119,"endOffset":2160,"count":0}],"isBlockCoverage":true},{"functionName":"_setEncryptedPasswordBuffers","ranges":[{"startOffset":2559,"endOffset":3389,"count":43},{"startOffset":2971,"endOffset":3270,"count":0},{"startOffset":3346,"endOffset":3385,"count":0}],"isBlockCoverage":true},{"functionName":"updateVerifierData","ranges":[{"startOffset":3717,"endOffset":6839,"count":43},{"startOffset":4189,"endOffset":4502,"count":0},{"startOffset":4958,"endOffset":5024,"count":0},{"startOffset":5325,"endOffset":5810,"count":0}],"isBlockCoverage":true},{"functionName":"getEncryptedJSWPData","ranges":[{"startOffset":6843,"endOffset":7165,"count":0}],"isBlockCoverage":false},{"functionName":"updatePasswordsWithComboKey","ranges":[{"startOffset":7169,"endOffset":7506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"878","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/commit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1800,"count":1}],"isBlockCoverage":true},{"functionName":"CommitMessage","ranges":[{"startOffset":1370,"endOffset":1469,"count":31}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1711,"endOffset":1763,"count":31}],"isBlockCoverage":true}]},{"scriptId":"879","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/dataType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33237,"count":1}],"isBlockCoverage":true},{"functionName":"processMessage","ranges":[{"startOffset":1383,"endOffset":1805,"count":43},{"startOffset":1498,"endOffset":1736,"count":15480},{"startOffset":1613,"endOffset":1619,"count":43},{"startOffset":1619,"endOffset":1711,"count":15437},{"startOffset":1711,"endOffset":1728,"count":12513},{"startOffset":1742,"endOffset":1801,"count":0}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1809,"endOffset":2379,"count":43},{"startOffset":2215,"endOffset":2349,"count":13373}],"isBlockCoverage":true}]},{"scriptId":"880","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/logOff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"LogOffMessage","ranges":[{"startOffset":1373,"endOffset":1472,"count":30}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1476,"endOffset":1559,"count":30}],"isBlockCoverage":true}]},{"scriptId":"881","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/ping.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"PingMessage","ranges":[{"startOffset":1375,"endOffset":1472,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":1691,"endOffset":1743,"count":0}],"isBlockCoverage":false}]},{"scriptId":"882","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/protocol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3066,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1512,"endOffset":1824,"count":43}],"isBlockCoverage":true},{"functionName":"processMessage","ranges":[{"startOffset":1828,"endOffset":2027,"count":43},{"startOffset":1964,"endOffset":2023,"count":0}],"isBlockCoverage":true},{"functionName":"processProtocolInfo","ranges":[{"startOffset":2031,"endOffset":3027,"count":43}],"isBlockCoverage":true}]},{"scriptId":"883","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/rollback.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1813,"count":1}],"isBlockCoverage":true},{"functionName":"RollbackMessage","ranges":[{"startOffset":1377,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":1722,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"884","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/sessionRelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1849,"count":1}],"isBlockCoverage":true},{"functionName":"SessionReleaseMessage","ranges":[{"startOffset":1395,"endOffset":1590,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":1594,"endOffset":1773,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1777,"endOffset":1804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"885","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/protocol/messages/connectionCookie.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2743,"count":1}],"isBlockCoverage":true},{"functionName":"encode","ranges":[{"startOffset":1640,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"processMessage","ranges":[{"startOffset":2227,"endOffset":2696,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/oracledb/lib/thin/pool.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20946,"count":1}],"isBlockCoverage":true},{"functionName":"_init","ranges":[{"startOffset":1693,"endOffset":4279,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":4549,"endOffset":5089,"count":0}],"isBlockCoverage":false},{"functionName":"setAccessToken","ranges":[{"startOffset":5296,"endOffset":5798,"count":0}],"isBlockCoverage":false},{"functionName":"_getConnAttrs","ranges":[{"startOffset":6159,"endOffset":8706,"count":0}],"isBlockCoverage":false},{"functionName":"getConnection","ranges":[{"startOffset":8968,"endOffset":9028,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":9252,"endOffset":9405,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":9621,"endOffset":10337,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMax","ranges":[{"startOffset":10541,"endOffset":10585,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMin","ranges":[{"startOffset":10789,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"getConnectionsInUse","ranges":[{"startOffset":11032,"endOffset":11101,"count":0}],"isBlockCoverage":false},{"functionName":"getConnectionsOpen","ranges":[{"startOffset":11300,"endOffset":11402,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolIncrement","ranges":[{"startOffset":11612,"endOffset":11668,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolMaxPerShard","ranges":[{"startOffset":11905,"endOffset":11943,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolPingInterval","ranges":[{"startOffset":12153,"endOffset":12215,"count":0}],"isBlockCoverage":false},{"functionName":"getPoolTimeout","ranges":[{"startOffset":12409,"endOffset":12461,"count":0}],"isBlockCoverage":false},{"functionName":"getSodaMetaDataCache","ranges":[{"startOffset":12688,"endOffset":12728,"count":0}],"isBlockCoverage":false},{"functionName":"getStmtCacheSize","ranges":[{"startOffset":12954,"endOffset":13010,"count":0}],"isBlockCoverage":false},{"functionName":"_setScheduler","ranges":[{"startOffset":13255,"endOffset":13604,"count":0}],"isBlockCoverage":false},{"functionName":"_scanIdleConnection","ranges":[{"startOffset":13864,"endOffset":14375,"count":0}],"isBlockCoverage":false},{"functionName":"_getNumConns","ranges":[{"startOffset":14614,"endOffset":15191,"count":0}],"isBlockCoverage":false},{"functionName":"bgThreadFunc","ranges":[{"startOffset":15678,"endOffset":17531,"count":0}],"isBlockCoverage":false},{"functionName":"acquire","ranges":[{"startOffset":17762,"endOffset":20159,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":20206,"endOffset":20446,"count":0}],"isBlockCoverage":false},{"functionName":"_generateConnectionClass","ranges":[{"startOffset":20715,"endOffset":20911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"888","url":"node:internal/deps/undici/undici","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":492281,"count":1}],"isBlockCoverage":false},{"functionName":"__commonJS","ranges":[{"startOffset":83,"endOffset":222,"count":40}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":96,"endOffset":222,"count":120},{"startOffset":132,"endOffset":206,"count":39}],"isBlockCoverage":true},{"functionName":"lib/core/symbols.js","ranges":[{"startOffset":285,"endOffset":2563,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/symbols.js","ranges":[{"startOffset":2631,"endOffset":2981,"count":1}],"isBlockCoverage":true},{"functionName":"lib/core/errors.js","ranges":[{"startOffset":3045,"endOffset":10276,"count":1}],"isBlockCoverage":true},{"functionName":"UndiciError","ranges":[{"startOffset":3155,"endOffset":3275,"count":0}],"isBlockCoverage":false},{"functionName":"ConnectTimeoutError","ranges":[{"startOffset":3347,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"HeadersTimeoutError","ranges":[{"startOffset":3682,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"HeadersOverflowError","ranges":[{"startOffset":4018,"endOffset":4285,"count":0}],"isBlockCoverage":false},{"functionName":"BodyTimeoutError","ranges":[{"startOffset":4354,"endOffset":4605,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseStatusCodeError","ranges":[{"startOffset":4681,"endOffset":5119,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidArgumentError","ranges":[{"startOffset":5192,"endOffset":5454,"count":0}],"isBlockCoverage":false},{"functionName":"InvalidReturnValueError","ranges":[{"startOffset":5530,"endOffset":5811,"count":0}],"isBlockCoverage":false},{"functionName":"RequestAbortedError","ranges":[{"startOffset":5883,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"InformationalError","ranges":[{"startOffset":6194,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"RequestContentLengthMismatchError","ranges":[{"startOffset":6528,"endOffset":6866,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseContentLengthMismatchError","ranges":[{"startOffset":6953,"endOffset":7294,"count":0}],"isBlockCoverage":false},{"functionName":"ClientDestroyedError","ranges":[{"startOffset":7367,"endOffset":7628,"count":0}],"isBlockCoverage":false},{"functionName":"ClientClosedError","ranges":[{"startOffset":7698,"endOffset":7947,"count":0}],"isBlockCoverage":false},{"functionName":"SocketError","ranges":[{"startOffset":8011,"endOffset":8278,"count":0}],"isBlockCoverage":false},{"functionName":"NotSupportedError","ranges":[{"startOffset":8348,"endOffset":8603,"count":0}],"isBlockCoverage":false},{"functionName":"BalancedPoolMissingUpstreamError","ranges":[{"startOffset":8688,"endOffset":8980,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPParserError","ranges":[{"startOffset":9042,"endOffset":9307,"count":0}],"isBlockCoverage":false},{"functionName":"ResponseExceededMaxSizeError","ranges":[{"startOffset":9388,"endOffset":9688,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/util.js","ranges":[{"startOffset":10336,"endOffset":21448,"count":1},{"startOffset":20874,"endOffset":20896,"count":0},{"startOffset":21399,"endOffset":21437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10843,"endOffset":10859,"count":3}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":10866,"endOffset":10888,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":10893,"endOffset":10975,"count":0}],"isBlockCoverage":false},{"functionName":"isBlobLike","ranges":[{"startOffset":10980,"endOffset":11237,"count":0}],"isBlockCoverage":false},{"functionName":"buildURL","ranges":[{"startOffset":11242,"endOffset":11576,"count":0}],"isBlockCoverage":false},{"functionName":"parseURL","ranges":[{"startOffset":11581,"endOffset":13174,"count":0}],"isBlockCoverage":false},{"functionName":"parseOrigin","ranges":[{"startOffset":13179,"endOffset":13380,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13385,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"getServerName","ranges":[{"startOffset":13685,"endOffset":13948,"count":0}],"isBlockCoverage":false},{"functionName":"deepClone","ranges":[{"startOffset":13953,"endOffset":14030,"count":1}],"isBlockCoverage":true},{"functionName":"isAsyncIterable","ranges":[{"startOffset":14035,"endOffset":14153,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":14158,"endOffset":14319,"count":0}],"isBlockCoverage":false},{"functionName":"bodyLength","ranges":[{"startOffset":14324,"endOffset":14764,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":14769,"endOffset":14877,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableAborted","ranges":[{"startOffset":14882,"endOffset":15045,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":15050,"endOffset":15597,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeepAliveTimeout","ranges":[{"startOffset":15652,"endOffset":15807,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaders","ranges":[{"startOffset":15812,"endOffset":16499,"count":0}],"isBlockCoverage":false},{"functionName":"parseRawHeaders","ranges":[{"startOffset":16504,"endOffset":16886,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":16891,"endOffset":16994,"count":0}],"isBlockCoverage":false},{"functionName":"validateHandler","ranges":[{"startOffset":16999,"endOffset":18209,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":18214,"endOffset":18468,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":18473,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":18630,"endOffset":18786,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketInfo","ranges":[{"startOffset":18791,"endOffset":19172,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableStreamFrom","ranges":[{"startOffset":19201,"endOffset":20080,"count":0}],"isBlockCoverage":false},{"functionName":"isFormDataLike","ranges":[{"startOffset":20085,"endOffset":20607,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports.toUSVString","ranges":[{"startOffset":20878,"endOffset":20895,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/constants.js","ranges":[{"startOffset":21519,"endOffset":25028,"count":1},{"startOffset":24036,"endOffset":24172,"count":0},{"startOffset":24244,"endOffset":24643,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24040,"endOffset":24169,"count":0}],"isBlockCoverage":true},{"functionName":"structuredClone2","ranges":[{"startOffset":24247,"endOffset":24643,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/util.js","ranges":[{"startOffset":25090,"endOffset":41728,"count":1},{"startOffset":25536,"endOffset":25549,"count":0},{"startOffset":40610,"endOffset":40677,"count":0}],"isBlockCoverage":true},{"functionName":"responseURL","ranges":[{"startOffset":25554,"endOffset":25736,"count":0}],"isBlockCoverage":false},{"functionName":"responseLocationURL","ranges":[{"startOffset":25741,"endOffset":26136,"count":0}],"isBlockCoverage":false},{"functionName":"requestCurrentURL","ranges":[{"startOffset":26141,"endOffset":26242,"count":0}],"isBlockCoverage":false},{"functionName":"requestBadPort","ranges":[{"startOffset":26247,"endOffset":26465,"count":0}],"isBlockCoverage":false},{"functionName":"isErrorLike","ranges":[{"startOffset":26470,"endOffset":26635,"count":0}],"isBlockCoverage":false},{"functionName":"isValidReasonPhrase","ranges":[{"startOffset":26640,"endOffset":26918,"count":0}],"isBlockCoverage":false},{"functionName":"isTokenChar","ranges":[{"startOffset":26923,"endOffset":27213,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHTTPToken","ranges":[{"startOffset":27218,"endOffset":27551,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderName","ranges":[{"startOffset":27556,"endOffset":27724,"count":0}],"isBlockCoverage":false},{"functionName":"isValidHeaderValue","ranges":[{"startOffset":27729,"endOffset":28110,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestReferrerPolicyOnRedirect","ranges":[{"startOffset":28115,"endOffset":28696,"count":0}],"isBlockCoverage":false},{"functionName":"crossOriginResourcePolicyCheck","ranges":[{"startOffset":28701,"endOffset":28774,"count":0}],"isBlockCoverage":false},{"functionName":"corsCheck","ranges":[{"startOffset":28779,"endOffset":28831,"count":0}],"isBlockCoverage":false},{"functionName":"TAOCheck","ranges":[{"startOffset":28836,"endOffset":28887,"count":0}],"isBlockCoverage":false},{"functionName":"appendFetchMetadata","ranges":[{"startOffset":28892,"endOffset":29060,"count":0}],"isBlockCoverage":false},{"functionName":"appendRequestOriginHeader","ranges":[{"startOffset":29065,"endOffset":30163,"count":0}],"isBlockCoverage":false},{"functionName":"coarsenedSharedCurrentTime","ranges":[{"startOffset":30168,"endOffset":30275,"count":0}],"isBlockCoverage":false},{"functionName":"createOpaqueTimingInfo","ranges":[{"startOffset":30280,"endOffset":30756,"count":0}],"isBlockCoverage":false},{"functionName":"makePolicyContainer","ranges":[{"startOffset":30761,"endOffset":30816,"count":0}],"isBlockCoverage":false},{"functionName":"clonePolicyContainer","ranges":[{"startOffset":30821,"endOffset":30877,"count":0}],"isBlockCoverage":false},{"functionName":"determineRequestsReferrer","ranges":[{"startOffset":30882,"endOffset":33444,"count":0}],"isBlockCoverage":false},{"functionName":"isURLPotentiallyTrustworthy","ranges":[{"startOffset":33449,"endOffset":34420,"count":0}],"isBlockCoverage":false},{"functionName":"bytesMatch","ranges":[{"startOffset":34425,"endOffset":35235,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetadata","ranges":[{"startOffset":35355,"endOffset":35991,"count":0}],"isBlockCoverage":false},{"functionName":"tryUpgradeRequestToAPotentiallyTrustworthyURL","ranges":[{"startOffset":35996,"endOffset":36067,"count":0}],"isBlockCoverage":false},{"functionName":"sameOrigin","ranges":[{"startOffset":36072,"endOffset":36243,"count":0}],"isBlockCoverage":false},{"functionName":"createDeferredPromise","ranges":[{"startOffset":36248,"endOffset":36483,"count":0}],"isBlockCoverage":false},{"functionName":"isAborted","ranges":[{"startOffset":36488,"endOffset":36584,"count":0}],"isBlockCoverage":false},{"functionName":"isCancelled","ranges":[{"startOffset":36589,"endOffset":36736,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeMethod","ranges":[{"startOffset":36741,"endOffset":36880,"count":0}],"isBlockCoverage":false},{"functionName":"serializeJavascriptValueToJSONString","ranges":[{"startOffset":36885,"endOffset":37154,"count":0}],"isBlockCoverage":false},{"functionName":"makeIterator","ranges":[{"startOffset":37258,"endOffset":38117,"count":0}],"isBlockCoverage":false},{"functionName":"iteratorResult","ranges":[{"startOffset":38122,"endOffset":38494,"count":0}],"isBlockCoverage":false},{"functionName":"fullyReadBody","ranges":[{"startOffset":38499,"endOffset":38922,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLike","ranges":[{"startOffset":38979,"endOffset":39258,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicDecode","ranges":[{"startOffset":39304,"endOffset":39545,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":39550,"endOffset":39768,"count":0}],"isBlockCoverage":false},{"functionName":"isomorphicEncode","ranges":[{"startOffset":39773,"endOffset":39932,"count":0}],"isBlockCoverage":false},{"functionName":"readAllBytes","ranges":[{"startOffset":39937,"endOffset":40578,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":40614,"endOffset":40676,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/webidl.js","ranges":[{"startOffset":41793,"endOffset":53749,"count":1}],"isBlockCoverage":true},{"functionName":"webidl.errors.exception","ranges":[{"startOffset":42067,"endOffset":42161,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.conversionFailed","ranges":[{"startOffset":42200,"endOffset":42498,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.errors.invalidArgument","ranges":[{"startOffset":42536,"endOffset":42711,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.brandCheck","ranges":[{"startOffset":42737,"endOffset":42981,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.argumentLengthCheck","ranges":[{"startOffset":43016,"endOffset":43273,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.Type","ranges":[{"startOffset":43298,"endOffset":43813,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.ConvertToInt","ranges":[{"startOffset":43846,"endOffset":45711,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.util.IntegerPart","ranges":[{"startOffset":45743,"endOffset":45869,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.sequenceConverter","ranges":[{"startOffset":45902,"endOffset":46668,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45937,"endOffset":46661,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.recordConverter","ranges":[{"startOffset":46699,"endOffset":47693,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":46753,"endOffset":47686,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.interfaceConverter","ranges":[{"startOffset":47727,"endOffset":48027,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47754,"endOffset":48020,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.dictionaryConverter","ranges":[{"startOffset":48062,"endOffset":49575,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48098,"endOffset":49568,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.nullableConverter","ranges":[{"startOffset":49608,"endOffset":49751,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":49643,"endOffset":49744,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DOMString","ranges":[{"startOffset":49787,"endOffset":50052,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ByteString","ranges":[{"startOffset":50089,"endOffset":50489,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.boolean","ranges":[{"startOffset":50570,"endOffset":50633,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.any","ranges":[{"startOffset":50663,"endOffset":50698,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.long long","ranges":[{"startOffset":50737,"endOffset":50831,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long long","ranges":[{"startOffset":50879,"endOffset":50975,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned long","ranges":[{"startOffset":51018,"endOffset":51114,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.unsigned short","ranges":[{"startOffset":51158,"endOffset":51266,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.ArrayBuffer","ranges":[{"startOffset":51304,"endOffset":51800,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.TypedArray","ranges":[{"startOffset":51837,"endOffset":52370,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.DataView","ranges":[{"startOffset":52405,"endOffset":52885,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BufferSource","ranges":[{"startOffset":52924,"endOffset":53327,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/headers.js","ranges":[{"startOffset":53816,"endOffset":64546,"count":1}],"isBlockCoverage":true},{"functionName":"headerValueNormalize","ranges":[{"startOffset":54327,"endOffset":54558,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":54563,"endOffset":55395,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":55418,"endOffset":57693,"count":0}],"isBlockCoverage":true},{"functionName":"Headers","ranges":[{"startOffset":57727,"endOffset":57965,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":57972,"endOffset":58890,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":58897,"endOffset":59580,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59587,"endOffset":60025,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":60032,"endOffset":60475,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":60482,"endOffset":61385,"count":0}],"isBlockCoverage":false},{"functionName":"getSetCookie","ranges":[{"startOffset":61392,"endOffset":61584,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":61591,"endOffset":62294,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":62301,"endOffset":62451,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":62458,"endOffset":62612,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":62619,"endOffset":62778,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":62785,"endOffset":63242,"count":0}],"isBlockCoverage":false},{"functionName":"Headers","ranges":[{"startOffset":63249,"endOffset":63380,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.HeadersInit","ranges":[{"startOffset":63994,"endOffset":64465,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/utils.js","ranges":[{"startOffset":64623,"endOffset":87814,"count":1}],"isBlockCoverage":true},{"functionName":"parseContentType","ranges":[{"startOffset":64701,"endOffset":65619,"count":0}],"isBlockCoverage":false},{"functionName":"parseContentTypeParams","ranges":[{"startOffset":65624,"endOffset":68042,"count":0}],"isBlockCoverage":false},{"functionName":"parseDisposition","ranges":[{"startOffset":68047,"endOffset":68538,"count":0}],"isBlockCoverage":false},{"functionName":"parseDispositionParams","ranges":[{"startOffset":68543,"endOffset":73004,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":73009,"endOffset":73957,"count":0}],"isBlockCoverage":false},{"functionName":"utf8","ranges":[{"startOffset":73991,"endOffset":74260,"count":0}],"isBlockCoverage":false},{"functionName":"latin1","ranges":[{"startOffset":74276,"endOffset":74463,"count":0}],"isBlockCoverage":false},{"functionName":"utf16le","ranges":[{"startOffset":74480,"endOffset":74688,"count":0}],"isBlockCoverage":false},{"functionName":"base64","ranges":[{"startOffset":74704,"endOffset":74914,"count":0}],"isBlockCoverage":false},{"functionName":"other","ranges":[{"startOffset":74929,"endOffset":75224,"count":0}],"isBlockCoverage":false},{"functionName":"convertToUTF8","ranges":[{"startOffset":75236,"endOffset":75382,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":75387,"endOffset":75774,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/streamsearch/lib/sbmh.js","ranges":[{"startOffset":87895,"endOffset":98024,"count":1}],"isBlockCoverage":true},{"functionName":"memcmp","ranges":[{"startOffset":87978,"endOffset":88166,"count":0}],"isBlockCoverage":false},{"functionName":"SBMH","ranges":[{"startOffset":88196,"endOffset":94348,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":94355,"endOffset":94458,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":94465,"endOffset":94799,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":94806,"endOffset":94975,"count":0}],"isBlockCoverage":false},{"functionName":"feed","ranges":[{"startOffset":94987,"endOffset":97639,"count":0}],"isBlockCoverage":false},{"functionName":"matchNeedle","ranges":[{"startOffset":97644,"endOffset":97992,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/types/multipart.js","ranges":[{"startOffset":98115,"endOffset":120189,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":98544,"endOffset":98567,"count":0}],"isBlockCoverage":false},{"functionName":"HeaderParser","ranges":[{"startOffset":98756,"endOffset":99025,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":99032,"endOffset":99271,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":99278,"endOffset":103248,"count":0}],"isBlockCoverage":false},{"functionName":"FileStream","ranges":[{"startOffset":103308,"endOffset":103676,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":103683,"endOffset":103809,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":103852,"endOffset":103877,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":103894,"endOffset":103909,"count":0}],"isBlockCoverage":false},{"functionName":"callAndUnsetCb","ranges":[{"startOffset":103921,"endOffset":104098,"count":0}],"isBlockCoverage":false},{"functionName":"nullDecoder","ranges":[{"startOffset":104103,"endOffset":104160,"count":0}],"isBlockCoverage":false},{"functionName":"Multipart","ranges":[{"startOffset":104212,"endOffset":114100,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":114114,"endOffset":114219,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":114226,"endOffset":114383,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":114390,"endOffset":114706,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":114713,"endOffset":114983,"count":0}],"isBlockCoverage":false},{"functionName":"finalcb","ranges":[{"startOffset":114995,"endOffset":115121,"count":0}],"isBlockCoverage":false},{"functionName":"checkEndState","ranges":[{"startOffset":115126,"endOffset":115490,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/types/urlencoded.js","ranges":[{"startOffset":120282,"endOffset":132944,"count":1}],"isBlockCoverage":true},{"functionName":"URLEncoded","ranges":[{"startOffset":120503,"endOffset":121663,"count":0}],"isBlockCoverage":false},{"functionName":"detect","ranges":[{"startOffset":121677,"endOffset":121796,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":121803,"endOffset":127632,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":127639,"endOffset":128242,"count":0}],"isBlockCoverage":false},{"functionName":"readPctEnc","ranges":[{"startOffset":128254,"endOffset":129355,"count":0}],"isBlockCoverage":false},{"functionName":"skipKeyBytes","ranges":[{"startOffset":129360,"endOffset":129865,"count":0}],"isBlockCoverage":false},{"functionName":"skipValBytes","ranges":[{"startOffset":129870,"endOffset":130327,"count":0}],"isBlockCoverage":false},{"functionName":"node_modules/busboy/lib/index.js","ranges":[{"startOffset":133019,"endOffset":134664,"count":1}],"isBlockCoverage":true},{"functionName":"getInstance","ranges":[{"startOffset":133145,"endOffset":134179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":134265,"endOffset":134341,"count":2}],"isBlockCoverage":true},{"functionName":"module2.exports","ranges":[{"startOffset":134366,"endOffset":134659,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/dataURL.js","ranges":[{"startOffset":134731,"endOffset":142500,"count":1}],"isBlockCoverage":true},{"functionName":"dataURLProcessor","ranges":[{"startOffset":135213,"endOffset":136501,"count":0}],"isBlockCoverage":false},{"functionName":"URLSerializer","ranges":[{"startOffset":136506,"endOffset":136624,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePoints","ranges":[{"startOffset":136629,"endOffset":136915,"count":0}],"isBlockCoverage":false},{"functionName":"collectASequenceOfCodePointsFast","ranges":[{"startOffset":136920,"endOffset":137281,"count":0}],"isBlockCoverage":false},{"functionName":"stringPercentDecode","ranges":[{"startOffset":137286,"endOffset":137407,"count":0}],"isBlockCoverage":false},{"functionName":"percentDecode","ranges":[{"startOffset":137412,"endOffset":138015,"count":0}],"isBlockCoverage":false},{"functionName":"parseMIMEType","ranges":[{"startOffset":138020,"endOffset":140170,"count":0}],"isBlockCoverage":false},{"functionName":"forgivingBase64","ranges":[{"startOffset":140175,"endOffset":140726,"count":0}],"isBlockCoverage":false},{"functionName":"collectAnHTTPQuotedString","ranges":[{"startOffset":140731,"endOffset":141676,"count":0}],"isBlockCoverage":false},{"functionName":"serializeAMimeType","ranges":[{"startOffset":141681,"endOffset":142238,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/file.js","ranges":[{"startOffset":142561,"endOffset":148264,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":142994,"endOffset":143842,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":143849,"endOffset":143942,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":143949,"endOffset":144058,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":144065,"endOffset":144158,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":144199,"endOffset":144488,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":144495,"endOffset":144617,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":144624,"endOffset":144756,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":144763,"endOffset":144883,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":144890,"endOffset":145008,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":145015,"endOffset":145121,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":145128,"endOffset":145234,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":145241,"endOffset":145338,"count":0}],"isBlockCoverage":false},{"functionName":"get lastModified","ranges":[{"startOffset":145345,"endOffset":145458,"count":0}],"isBlockCoverage":false},{"functionName":"FileLike","ranges":[{"startOffset":145465,"endOffset":145524,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BlobPart","ranges":[{"startOffset":145843,"endOffset":146209,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultValue","ranges":[{"startOffset":146476,"endOffset":146535,"count":0}],"isBlockCoverage":false},{"functionName":"converter","ranges":[{"startOffset":146707,"endOffset":146929,"count":0}],"isBlockCoverage":false},{"functionName":"processBlobParts","ranges":[{"startOffset":146987,"endOffset":147726,"count":0}],"isBlockCoverage":false},{"functionName":"convertLineEndingsNative","ranges":[{"startOffset":147731,"endOffset":147947,"count":0}],"isBlockCoverage":false},{"functionName":"isFileLike","ranges":[{"startOffset":147952,"endOffset":148206,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/formdata.js","ranges":[{"startOffset":148333,"endOffset":154107,"count":1},{"startOffset":148696,"endOffset":148709,"count":0}],"isBlockCoverage":true},{"functionName":"FormData","ranges":[{"startOffset":148744,"endOffset":149015,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":149022,"endOffset":149729,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":149736,"endOffset":150119,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":150126,"endOffset":150491,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":150498,"endOffset":150790,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":150797,"endOffset":151065,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":151072,"endOffset":152073,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":152080,"endOffset":152255,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":152262,"endOffset":152428,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":152435,"endOffset":152605,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":152612,"endOffset":153072,"count":0}],"isBlockCoverage":false},{"functionName":"makeEntry","ranges":[{"startOffset":153304,"endOffset":154067,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/body.js","ranges":[{"startOffset":154168,"endOffset":167170,"count":1},{"startOffset":155093,"endOffset":155106,"count":0}],"isBlockCoverage":true},{"functionName":"extractBody","ranges":[{"startOffset":155112,"endOffset":159583,"count":0}],"isBlockCoverage":false},{"functionName":"safelyExtractBody","ranges":[{"startOffset":159588,"endOffset":159987,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBody","ranges":[{"startOffset":159992,"endOffset":160320,"count":0}],"isBlockCoverage":false},{"functionName":"consumeBody","ranges":[{"startOffset":160325,"endOffset":160801,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":160806,"endOffset":160955,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMixinMethods","ranges":[{"startOffset":160960,"endOffset":165401,"count":2}],"isBlockCoverage":true},{"functionName":"blob","ranges":[{"startOffset":161030,"endOffset":161404,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBuffer","ranges":[{"startOffset":161414,"endOffset":161564,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":161574,"endOffset":161659,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":161669,"endOffset":161757,"count":0}],"isBlockCoverage":false},{"functionName":"formData","ranges":[{"startOffset":161767,"endOffset":165364,"count":0}],"isBlockCoverage":false},{"functionName":"mixinBody","ranges":[{"startOffset":165406,"endOffset":165514,"count":2}],"isBlockCoverage":true},{"functionName":"specConsumeBody","ranges":[{"startOffset":165519,"endOffset":166283,"count":0}],"isBlockCoverage":false},{"functionName":"bodyUnusable","ranges":[{"startOffset":166288,"endOffset":166407,"count":0}],"isBlockCoverage":false},{"functionName":"utf8DecodeBytes","ranges":[{"startOffset":166412,"endOffset":166706,"count":0}],"isBlockCoverage":false},{"functionName":"parseJSONFromBytes","ranges":[{"startOffset":166711,"endOffset":166802,"count":0}],"isBlockCoverage":false},{"functionName":"bodyMimeType","ranges":[{"startOffset":166807,"endOffset":167058,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/global.js","ranges":[{"startOffset":167235,"endOffset":168351,"count":1}],"isBlockCoverage":true},{"functionName":"getGlobalOrigin","ranges":[{"startOffset":167360,"endOffset":167433,"count":0}],"isBlockCoverage":false},{"functionName":"setGlobalOrigin","ranges":[{"startOffset":167438,"endOffset":168271,"count":0}],"isBlockCoverage":false},{"functionName":"lib/fetch/response.js","ranges":[{"startOffset":168420,"endOffset":180967,"count":1},{"startOffset":169396,"endOffset":169435,"count":0}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":169477,"endOffset":169926,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":169940,"endOffset":170681,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":170695,"endOffset":171771,"count":0}],"isBlockCoverage":false},{"functionName":"Response","ranges":[{"startOffset":171778,"endOffset":172491,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":172498,"endOffset":172595,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":172602,"endOffset":172867,"count":0}],"isBlockCoverage":false},{"functionName":"get redirected","ranges":[{"startOffset":172874,"endOffset":172991,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":172998,"endOffset":173099,"count":0}],"isBlockCoverage":false},{"functionName":"get ok","ranges":[{"startOffset":173106,"endOffset":173240,"count":0}],"isBlockCoverage":false},{"functionName":"get statusText","ranges":[{"startOffset":173247,"endOffset":173356,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":173363,"endOffset":173460,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":173467,"endOffset":173598,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":173605,"endOffset":173754,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":173761,"endOffset":174529,"count":0}],"isBlockCoverage":false},{"functionName":"cloneResponse","ranges":[{"startOffset":175216,"endOffset":175582,"count":0}],"isBlockCoverage":false},{"functionName":"makeResponse","ranges":[{"startOffset":175587,"endOffset":176065,"count":0}],"isBlockCoverage":false},{"functionName":"makeNetworkError","ranges":[{"startOffset":176070,"endOffset":176425,"count":0}],"isBlockCoverage":false},{"functionName":"makeFilteredResponse","ranges":[{"startOffset":176430,"endOffset":176822,"count":0}],"isBlockCoverage":false},{"functionName":"filterResponse","ranges":[{"startOffset":176827,"endOffset":177708,"count":0}],"isBlockCoverage":false},{"functionName":"makeAppropriateNetworkError","ranges":[{"startOffset":177713,"endOffset":177973,"count":0}],"isBlockCoverage":false},{"functionName":"initializeResponse","ranges":[{"startOffset":177978,"endOffset":179243,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.XMLHttpRequestBodyInit","ranges":[{"startOffset":179527,"endOffset":180134,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.BodyInit","ranges":[{"startOffset":180169,"endOffset":180412,"count":0}],"isBlockCoverage":false},{"functionName":"lib/compat/dispatcher-weakref.js","ranges":[{"startOffset":181057,"endOffset":181930,"count":1}],"isBlockCoverage":true},{"functionName":"CompatWeakRef","ranges":[{"startOffset":181220,"endOffset":181276,"count":0}],"isBlockCoverage":false},{"functionName":"deref","ranges":[{"startOffset":181283,"endOffset":181394,"count":0}],"isBlockCoverage":false},{"functionName":"CompatFinalizer","ranges":[{"startOffset":181442,"endOffset":181510,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":181517,"endOffset":181726,"count":0}],"isBlockCoverage":false},{"functionName":"module2.exports","ranges":[{"startOffset":181756,"endOffset":181925,"count":2},{"startOffset":181816,"endOffset":181832,"count":0},{"startOffset":181892,"endOffset":181910,"count":0}],"isBlockCoverage":true},{"functionName":"lib/fetch/request.js","ranges":[{"startOffset":181997,"endOffset":200180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":183174,"endOffset":183254,"count":0}],"isBlockCoverage":false},{"functionName":"Request","ranges":[{"startOffset":183289,"endOffset":192378,"count":0}],"isBlockCoverage":false},{"functionName":"get method","ranges":[{"startOffset":192385,"endOffset":192485,"count":0}],"isBlockCoverage":false},{"functionName":"get url","ranges":[{"startOffset":192492,"endOffset":192601,"count":0}],"isBlockCoverage":false},{"functionName":"get headers","ranges":[{"startOffset":192608,"endOffset":192704,"count":0}],"isBlockCoverage":false},{"functionName":"get destination","ranges":[{"startOffset":192711,"endOffset":192821,"count":0}],"isBlockCoverage":false},{"functionName":"get referrer","ranges":[{"startOffset":192828,"endOffset":193122,"count":0}],"isBlockCoverage":false},{"functionName":"get referrerPolicy","ranges":[{"startOffset":193129,"endOffset":193245,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":193252,"endOffset":193348,"count":0}],"isBlockCoverage":false},{"functionName":"get credentials","ranges":[{"startOffset":193355,"endOffset":193423,"count":0}],"isBlockCoverage":false},{"functionName":"get cache","ranges":[{"startOffset":193430,"endOffset":193528,"count":0}],"isBlockCoverage":false},{"functionName":"get redirect","ranges":[{"startOffset":193535,"endOffset":193639,"count":0}],"isBlockCoverage":false},{"functionName":"get integrity","ranges":[{"startOffset":193646,"endOffset":193752,"count":0}],"isBlockCoverage":false},{"functionName":"get keepalive","ranges":[{"startOffset":193759,"endOffset":193865,"count":0}],"isBlockCoverage":false},{"functionName":"get isReloadNavigation","ranges":[{"startOffset":193872,"endOffset":193994,"count":0}],"isBlockCoverage":false},{"functionName":"get isHistoryNavigation","ranges":[{"startOffset":194001,"endOffset":194125,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":194132,"endOffset":194226,"count":0}],"isBlockCoverage":false},{"functionName":"get body","ranges":[{"startOffset":194233,"endOffset":194363,"count":0}],"isBlockCoverage":false},{"functionName":"get bodyUsed","ranges":[{"startOffset":194370,"endOffset":194518,"count":0}],"isBlockCoverage":false},{"functionName":"get duplex","ranges":[{"startOffset":194525,"endOffset":194612,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":194619,"endOffset":195638,"count":0}],"isBlockCoverage":false},{"functionName":"makeRequest","ranges":[{"startOffset":195674,"endOffset":196951,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRequest","ranges":[{"startOffset":196956,"endOffset":197178,"count":0}],"isBlockCoverage":false},{"functionName":"webidl.converters.RequestInfo","ranges":[{"startOffset":198181,"endOffset":198422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":199837,"endOffset":199905,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher.js","ranges":[{"startOffset":200247,"endOffset":200651,"count":1}],"isBlockCoverage":true},{"functionName":"dispatch","ranges":[{"startOffset":200404,"endOffset":200468,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":200475,"endOffset":200536,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":200543,"endOffset":200606,"count":0}],"isBlockCoverage":false},{"functionName":"lib/dispatcher-base.js","ranges":[{"startOffset":200728,"endOffset":205782,"count":1}],"isBlockCoverage":true},{"functionName":"DispatcherBase","ranges":[{"startOffset":201312,"endOffset":201480,"count":1}],"isBlockCoverage":true},{"functionName":"get destroyed","ranges":[{"startOffset":201487,"endOffset":201545,"count":0}],"isBlockCoverage":false},{"functionName":"get closed","ranges":[{"startOffset":201552,"endOffset":201604,"count":0}],"isBlockCoverage":false},{"functionName":"get interceptors","ranges":[{"startOffset":201611,"endOffset":201675,"count":0}],"isBlockCoverage":false},{"functionName":"set interceptors","ranges":[{"startOffset":201682,"endOffset":202095,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":202102,"endOffset":203234,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":203241,"endOffset":204432,"count":0}],"isBlockCoverage":false},{"functionName":"DispatcherBase","ranges":[{"startOffset":204439,"endOffset":204944,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":204951,"endOffset":205733,"count":0}],"isBlockCoverage":false},{"functionName":"lib/node/fixed-queue.js","ranges":[{"startOffset":205856,"endOffset":207225,"count":1}],"isBlockCoverage":true},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":206014,"endOffset":206148,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":206155,"endOffset":206215,"count":0}],"isBlockCoverage":false},{"functionName":"isFull","ranges":[{"startOffset":206222,"endOffset":206295,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":206302,"endOffset":206399,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":206406,"endOffset":206641,"count":0}],"isBlockCoverage":false},{"functionName":"FixedQueue","ranges":[{"startOffset":206696,"endOffset":206778,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":206785,"endOffset":206840,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":206847,"endOffset":207007,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":207014,"endOffset":207214,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-stats.js","ranges":[{"startOffset":207292,"endOffset":207983,"count":1}],"isBlockCoverage":true},{"functionName":"PoolStats","ranges":[{"startOffset":207486,"endOffset":207541,"count":0}],"isBlockCoverage":false},{"functionName":"get connected","ranges":[{"startOffset":207548,"endOffset":207613,"count":0}],"isBlockCoverage":false},{"functionName":"get free","ranges":[{"startOffset":207620,"endOffset":207675,"count":0}],"isBlockCoverage":false},{"functionName":"get pending","ranges":[{"startOffset":207682,"endOffset":207743,"count":0}],"isBlockCoverage":false},{"functionName":"get queued","ranges":[{"startOffset":207750,"endOffset":207809,"count":0}],"isBlockCoverage":false},{"functionName":"get running","ranges":[{"startOffset":207816,"endOffset":207877,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":207884,"endOffset":207939,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool-base.js","ranges":[{"startOffset":208048,"endOffset":213164,"count":1}],"isBlockCoverage":true},{"functionName":"PoolBase","ranges":[{"startOffset":208957,"endOffset":210314,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210321,"endOffset":210377,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210384,"endOffset":210489,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210496,"endOffset":210619,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210626,"endOffset":210805,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210812,"endOffset":210979,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":210986,"endOffset":211153,"count":0}],"isBlockCoverage":false},{"functionName":"get stats","ranges":[{"startOffset":211160,"endOffset":211210,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":211217,"endOffset":211478,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":211485,"endOffset":211756,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":211763,"endOffset":212184,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":212191,"endOffset":212642,"count":0}],"isBlockCoverage":false},{"functionName":"PoolBase","ranges":[{"startOffset":212649,"endOffset":213012,"count":0}],"isBlockCoverage":false},{"functionName":"lib/timers.js","ranges":[{"startOffset":213223,"endOffset":215216,"count":1}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":213361,"endOffset":214025,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":214030,"endOffset":214345,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout","ranges":[{"startOffset":214378,"endOffset":214595,"count":0}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":214602,"endOffset":214903,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":214910,"endOffset":214953,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":214991,"endOffset":215089,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":215097,"endOffset":215205,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/request.js","ranges":[{"startOffset":215283,"endOffset":225999,"count":1},{"startOffset":216212,"endOffset":216484,"count":0}],"isBlockCoverage":true},{"functionName":"Request","ranges":[{"startOffset":216517,"endOffset":221415,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":221422,"endOffset":221631,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestSent","ranges":[{"startOffset":221638,"endOffset":221777,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":221784,"endOffset":221922,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":221929,"endOffset":222294,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":222301,"endOffset":222433,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":222440,"endOffset":222622,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":222629,"endOffset":222897,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":222904,"endOffset":223174,"count":0}],"isBlockCoverage":false},{"functionName":"addHeader","ranges":[{"startOffset":223181,"endOffset":223274,"count":0}],"isBlockCoverage":false},{"functionName":"processHeaderValue","ranges":[{"startOffset":223286,"endOffset":223644,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":223649,"endOffset":225964,"count":0}],"isBlockCoverage":false},{"functionName":"lib/core/connect.js","ranges":[{"startOffset":226065,"endOffset":231254,"count":1},{"startOffset":227356,"endOffset":228063,"count":0}],"isBlockCoverage":true},{"functionName":"WeakSessionCache","ranges":[{"startOffset":226425,"endOffset":226949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":226958,"endOffset":227086,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":227095,"endOffset":227341,"count":0}],"isBlockCoverage":false},{"functionName":"SimpleSessionCache","ranges":[{"startOffset":227420,"endOffset":227575,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":227584,"endOffset":227664,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":227673,"endOffset":228048,"count":0}],"isBlockCoverage":false},{"functionName":"buildConnector","ranges":[{"startOffset":228068,"endOffset":230548,"count":0}],"isBlockCoverage":false},{"functionName":"setupTimeout","ranges":[{"startOffset":230553,"endOffset":231111,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectTimeout","ranges":[{"startOffset":231116,"endOffset":231212,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/utils.js","ranges":[{"startOffset":231319,"endOffset":231750,"count":1}],"isBlockCoverage":true},{"functionName":"enumToMap","ranges":[{"startOffset":231476,"endOffset":231710,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":231555,"endOffset":231684,"count":92},{"startOffset":231637,"endOffset":231676,"count":46}],"isBlockCoverage":true},{"functionName":"lib/llhttp/constants.js","ranges":[{"startOffset":231823,"endOffset":243211,"count":1},{"startOffset":239881,"endOffset":239995,"count":26},{"startOffset":241342,"endOffset":241382,"count":128},{"startOffset":241841,"endOffset":241918,"count":224},{"startOffset":241864,"endOffset":241912,"count":223}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":232622,"endOffset":234272,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":234343,"endOffset":234503,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":234572,"endOffset":235150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":235230,"endOffset":235477,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":235575,"endOffset":238009,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239417,"endOffset":239532,"count":46},{"startOffset":239454,"endOffset":239526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239556,"endOffset":239736,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241986,"endOffset":242001,"count":224}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242107,"endOffset":242849,"count":1}],"isBlockCoverage":true},{"functionName":"lib/handler/RedirectHandler.js","ranges":[{"startOffset":243296,"endOffset":248768,"count":1}],"isBlockCoverage":true},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":243703,"endOffset":243791,"count":0}],"isBlockCoverage":false},{"functionName":"BodyAsyncIterable","ranges":[{"startOffset":243798,"endOffset":243946,"count":0}],"isBlockCoverage":false},{"functionName":"RedirectHandler","ranges":[{"startOffset":243994,"endOffset":245408,"count":0}],"isBlockCoverage":false},{"functionName":"onConnect","ranges":[{"startOffset":245415,"endOffset":245535,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":245542,"endOffset":245651,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":245658,"endOffset":245719,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaders","ranges":[{"startOffset":245726,"endOffset":246781,"count":0}],"isBlockCoverage":false},{"functionName":"onData","ranges":[{"startOffset":246788,"endOffset":246912,"count":0}],"isBlockCoverage":false},{"functionName":"onComplete","ranges":[{"startOffset":246919,"endOffset":247153,"count":0}],"isBlockCoverage":false},{"functionName":"onBodySent","ranges":[{"startOffset":247160,"endOffset":247278,"count":0}],"isBlockCoverage":false},{"functionName":"parseLocation","ranges":[{"startOffset":247290,"endOffset":247603,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRemoveHeader","ranges":[{"startOffset":247608,"endOffset":248023,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRequestHeaders","ranges":[{"startOffset":248028,"endOffset":248725,"count":0}],"isBlockCoverage":false},{"functionName":"lib/interceptor/redirectInterceptor.js","ranges":[{"startOffset":248865,"endOffset":249598,"count":1}],"isBlockCoverage":true},{"functionName":"createRedirectInterceptor","ranges":[{"startOffset":249002,"endOffset":249545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":249097,"endOffset":249538,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp.wasm.js","ranges":[{"startOffset":249674,"endOffset":324420,"count":0}],"isBlockCoverage":false},{"functionName":"lib/llhttp/llhttp_simd.wasm.js","ranges":[{"startOffset":324506,"endOffset":399237,"count":1}],"isBlockCoverage":true},{"functionName":"lib/client.js","ranges":[{"startOffset":399296,"endOffset":446976,"count":1},{"startOffset":401351,"endOffset":401589,"count":0}],"isBlockCoverage":true},{"functionName":"Client","ranges":[{"startOffset":401644,"endOffset":407791,"count":0}],"isBlockCoverage":false},{"functionName":"get pipelining","ranges":[{"startOffset":407798,"endOffset":407858,"count":0}],"isBlockCoverage":false},{"functionName":"set pipelining","ranges":[{"startOffset":407865,"endOffset":407959,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":407966,"endOffset":408048,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408055,"endOffset":408135,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408142,"endOffset":408221,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408228,"endOffset":408338,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408345,"endOffset":408555,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408562,"endOffset":408643,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":408650,"endOffset":409244,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":409251,"endOffset":409471,"count":0}],"isBlockCoverage":false},{"functionName":"Client","ranges":[{"startOffset":409478,"endOffset":410182,"count":0}],"isBlockCoverage":false},{"functionName":"lazyllhttp","ranges":[{"startOffset":410340,"endOffset":412658,"count":1},{"startOffset":410426,"endOffset":410449,"count":0},{"startOffset":410587,"endOffset":410711,"count":0}],"isBlockCoverage":true},{"functionName":"wasm_on_url","ranges":[{"startOffset":410800,"endOffset":410851,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_status","ranges":[{"startOffset":410879,"endOffset":411142,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_begin","ranges":[{"startOffset":411177,"endOffset":411307,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_field","ranges":[{"startOffset":411341,"endOffset":411609,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_header_value","ranges":[{"startOffset":411643,"endOffset":411911,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_headers_complete","ranges":[{"startOffset":411949,"endOffset":412174,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_body","ranges":[{"startOffset":412200,"endOffset":412461,"count":0}],"isBlockCoverage":false},{"functionName":"wasm_on_message_complete","ranges":[{"startOffset":412499,"endOffset":412632,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":412994,"endOffset":413895,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":413902,"endOffset":414475,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":414482,"endOffset":414983,"count":0}],"isBlockCoverage":false},{"functionName":"readMore","ranges":[{"startOffset":414990,"endOffset":415201,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":415208,"endOffset":416940,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":416947,"endOffset":417275,"count":0}],"isBlockCoverage":false},{"functionName":"onStatus","ranges":[{"startOffset":417282,"endOffset":417347,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageBegin","ranges":[{"startOffset":417354,"endOffset":417600,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderField","ranges":[{"startOffset":417607,"endOffset":417885,"count":0}],"isBlockCoverage":false},{"functionName":"onHeaderValue","ranges":[{"startOffset":417892,"endOffset":418642,"count":0}],"isBlockCoverage":false},{"functionName":"trackHeader","ranges":[{"startOffset":418649,"endOffset":418838,"count":0}],"isBlockCoverage":false},{"functionName":"onUpgrade","ranges":[{"startOffset":418845,"endOffset":420110,"count":0}],"isBlockCoverage":false},{"functionName":"onHeadersComplete","ranges":[{"startOffset":420117,"endOffset":422933,"count":0}],"isBlockCoverage":false},{"functionName":"onBody","ranges":[{"startOffset":422940,"endOffset":423829,"count":0}],"isBlockCoverage":false},{"functionName":"onMessageComplete","ranges":[{"startOffset":423836,"endOffset":425635,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":425647,"endOffset":426373,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketReadable","ranges":[{"startOffset":426378,"endOffset":426480,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketError","ranges":[{"startOffset":426485,"endOffset":426829,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":426834,"endOffset":427293,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketEnd","ranges":[{"startOffset":427298,"endOffset":427578,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":427583,"endOffset":428669,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":428674,"endOffset":432034,"count":0}],"isBlockCoverage":false},{"functionName":"emitDrain","ranges":[{"startOffset":432039,"endOffset":432155,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":432160,"endOffset":432532,"count":0}],"isBlockCoverage":false},{"functionName":"_resume","ranges":[{"startOffset":432537,"endOffset":435916,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":435921,"endOffset":439688,"count":0}],"isBlockCoverage":false},{"functionName":"writeStream","ranges":[{"startOffset":439693,"endOffset":441460,"count":0}],"isBlockCoverage":false},{"functionName":"writeBlob","ranges":[{"startOffset":441465,"endOffset":442253,"count":0}],"isBlockCoverage":false},{"functionName":"writeIterable","ranges":[{"startOffset":442258,"endOffset":443417,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncWriter","ranges":[{"startOffset":443454,"endOffset":443819,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":443826,"endOffset":445309,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":445316,"endOffset":446481,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":446488,"endOffset":446737,"count":0}],"isBlockCoverage":false},{"functionName":"errorRequest","ranges":[{"startOffset":446749,"endOffset":446942,"count":0}],"isBlockCoverage":false},{"functionName":"lib/pool.js","ranges":[{"startOffset":447031,"endOffset":449788,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":447564,"endOffset":447648,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":447695,"endOffset":449335,"count":0}],"isBlockCoverage":false},{"functionName":"Pool","ranges":[{"startOffset":449342,"endOffset":449749,"count":0}],"isBlockCoverage":false},{"functionName":"lib/agent.js","ranges":[{"startOffset":449845,"endOffset":454626,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":450712,"endOffset":450854,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":450908,"endOffset":452911,"count":1},{"startOffset":451059,"endOffset":451143,"count":0},{"startOffset":451172,"endOffset":451204,"count":0},{"startOffset":451205,"endOffset":451235,"count":0},{"startOffset":451237,"endOffset":451333,"count":0},{"startOffset":451405,"endOffset":451503,"count":0},{"startOffset":451524,"endOffset":451556,"count":0},{"startOffset":451558,"endOffset":451605,"count":0},{"startOffset":451657,"endOffset":451686,"count":0},{"startOffset":451687,"endOffset":451731,"count":0},{"startOffset":451732,"endOffset":451760,"count":0},{"startOffset":451938,"endOffset":451967,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":452166,"endOffset":452343,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":452399,"endOffset":452491,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":452520,"endOffset":452614,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":452646,"endOffset":452753,"count":0}],"isBlockCoverage":false},{"functionName":"Agent.<computed>","ranges":[{"startOffset":452790,"endOffset":452902,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":452918,"endOffset":453159,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":453166,"endOffset":453982,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":453989,"endOffset":454276,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":454283,"endOffset":454586,"count":0}],"isBlockCoverage":false},{"functionName":"lib/global.js","ranges":[{"startOffset":454686,"endOffset":455524,"count":1}],"isBlockCoverage":true},{"functionName":"setGlobalDispatcher","ranges":[{"startOffset":454989,"endOffset":455350,"count":1},{"startOffset":455085,"endOffset":455173,"count":0}],"isBlockCoverage":true},{"functionName":"getGlobalDispatcher","ranges":[{"startOffset":455355,"endOffset":455436,"count":1}],"isBlockCoverage":true},{"functionName":"lib/fetch/index.js","ranges":[{"startOffset":455587,"endOffset":491727,"count":1}],"isBlockCoverage":true},{"functionName":"Fetch","ranges":[{"startOffset":457547,"endOffset":457760,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":457767,"endOffset":457980,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":457987,"endOffset":458346,"count":0}],"isBlockCoverage":false},{"functionName":"fetch2","ranges":[{"startOffset":458358,"endOffset":460533,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeAndReportTiming","ranges":[{"startOffset":460538,"endOffset":461399,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":461404,"endOffset":461664,"count":0}],"isBlockCoverage":false},{"functionName":"abortFetch","ranges":[{"startOffset":461669,"endOffset":462474,"count":0}],"isBlockCoverage":false},{"functionName":"fetching","ranges":[{"startOffset":462479,"endOffset":464635,"count":0}],"isBlockCoverage":false},{"functionName":"mainFetch","ranges":[{"startOffset":464640,"endOffset":468558,"count":0}],"isBlockCoverage":false},{"functionName":"schemeFetch","ranges":[{"startOffset":468563,"endOffset":471047,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResponse","ranges":[{"startOffset":471052,"endOffset":471281,"count":0}],"isBlockCoverage":false},{"functionName":"fetchFinale","ranges":[{"startOffset":471286,"endOffset":473037,"count":0}],"isBlockCoverage":false},{"functionName":"httpFetch","ranges":[{"startOffset":473042,"endOffset":474640,"count":0}],"isBlockCoverage":false},{"functionName":"httpRedirectFetch","ranges":[{"startOffset":474645,"endOffset":477021,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkOrCacheFetch","ranges":[{"startOffset":477026,"endOffset":481927,"count":0}],"isBlockCoverage":false},{"functionName":"httpNetworkFetch","ranges":[{"startOffset":481932,"endOffset":491612,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":491813,"endOffset":491974,"count":0}],"isBlockCoverage":false}]},{"scriptId":"889","url":"node:worker_threads","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":false}]},{"scriptId":"890","url":"node:internal/worker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15265,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2291,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":2804,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"setEnvironmentData","ranges":[{"startOffset":2889,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvironmentData","ranges":[{"startOffset":3038,"endOffset":3109,"count":0}],"isBlockCoverage":false},{"functionName":"assignEnvironmentData","ranges":[{"startOffset":3111,"endOffset":3261,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":3301,"endOffset":8478,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8482,"endOffset":9114,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9118,"endOffset":9214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9218,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9391,"endOffset":10284,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10288,"endOffset":10756,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":10760,"endOffset":10905,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":10909,"endOffset":11743,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":11747,"endOffset":11853,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":11857,"endOffset":11969,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":11973,"endOffset":12072,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":12076,"endOffset":12134,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":12138,"endOffset":12198,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":12202,"endOffset":12262,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":12266,"endOffset":12402,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":12406,"endOffset":12912,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":12916,"endOffset":13238,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":13312,"endOffset":13926,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":13928,"endOffset":14214,"count":0}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":14216,"endOffset":15019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"891","url":"node:internal/error_serdes","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4225,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":692,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1542,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1986,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2133,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2320,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3323,"endOffset":4168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"node:util/types","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64,"count":1}],"isBlockCoverage":false}]},{"scriptId":"893","url":"node:internal/webstreams/readablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":90417,"count":1}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasedError","ranges":[{"startOffset":2934,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"lazyReadableReleasingError","ranges":[{"startOffset":3286,"endOffset":3643,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":3686,"endOffset":3772,"count":6}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5197,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream","ranges":[{"startOffset":17234,"endOffset":17725,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredReadableStream.<computed>","ranges":[{"startOffset":17778,"endOffset":17786,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":17789,"endOffset":19779,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamBYOBRequest","ranges":[{"startOffset":20041,"endOffset":20313,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultReadRequest","ranges":[{"startOffset":20344,"endOffset":20407,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20411,"endOffset":20484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20488,"endOffset":20566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20570,"endOffset":20625,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":20629,"endOffset":20675,"count":0}],"isBlockCoverage":false},{"functionName":"ReadIntoRequest","ranges":[{"startOffset":20705,"endOffset":20768,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20772,"endOffset":20845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20849,"endOffset":20921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20925,"endOffset":20980,"count":0}],"isBlockCoverage":false},{"functionName":"get promise","ranges":[{"startOffset":20984,"endOffset":21030,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":21034,"endOffset":23243,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":23532,"endOffset":26580,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":26863,"endOffset":28066,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableStreamDefaultController","ranges":[{"startOffset":28364,"endOffset":28597,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":28599,"endOffset":31808,"count":0}],"isBlockCoverage":false},{"functionName":"createReadableByteStreamController","ranges":[{"startOffset":32136,"endOffset":32360,"count":0}],"isBlockCoverage":false},{"functionName":"createTeeReadableStream","ranges":[{"startOffset":32362,"endOffset":33183,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamPipeTo","ranges":[{"startOffset":33616,"endOffset":39125,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamTee","ranges":[{"startOffset":39127,"endOffset":39355,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultTee","ranges":[{"startOffset":39357,"endOffset":42155,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamTee","ranges":[{"startOffset":42157,"endOffset":50067,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerConvertPullIntoDescriptor","ranges":[{"startOffset":50069,"endOffset":50531,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStreamLocked","ranges":[{"startOffset":50533,"endOffset":50622,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamCancel","ranges":[{"startOffset":50624,"endOffset":51341,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamClose","ranges":[{"startOffset":51343,"endOffset":51827,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamError","ranges":[{"startOffset":51829,"endOffset":52707,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasDefaultReader","ranges":[{"startOffset":52709,"endOffset":52951,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadRequests","ranges":[{"startOffset":52953,"endOffset":53116,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamHasBYOBReader","ranges":[{"startOffset":53118,"endOffset":53354,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamGetNumReadIntoRequests","ranges":[{"startOffset":53356,"endOffset":53524,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadRequest","ranges":[{"startOffset":53526,"endOffset":54119,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamFulfillReadIntoRequest","ranges":[{"startOffset":54121,"endOffset":54503,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadRequest","ranges":[{"startOffset":54505,"endOffset":54743,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamAddReadIntoRequest","ranges":[{"startOffset":54745,"endOffset":55004,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericCancel","ranges":[{"startOffset":55006,"endOffset":55191,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericInitialize","ranges":[{"startOffset":55193,"endOffset":55858,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRelease","ranges":[{"startOffset":55860,"endOffset":56060,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderErrorReadRequests","ranges":[{"startOffset":56062,"endOffset":56282,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRelease","ranges":[{"startOffset":56284,"endOffset":56482,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderErrorReadIntoRequests","ranges":[{"startOffset":56484,"endOffset":56717,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamReaderGenericRelease","ranges":[{"startOffset":56719,"endOffset":57373,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamBYOBReaderRead","ranges":[{"startOffset":57375,"endOffset":57778,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultReaderRead","ranges":[{"startOffset":57780,"endOffset":58217,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamBYOBReader","ranges":[{"startOffset":58219,"endOffset":58662,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultReader","ranges":[{"startOffset":58664,"endOffset":58927,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClose","ranges":[{"startOffset":58929,"endOffset":59277,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerEnqueue","ranges":[{"startOffset":59279,"endOffset":60024,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerHasBackpressure","ranges":[{"startOffset":60026,"endOffset":60166,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCanCloseOrEnqueue","ranges":[{"startOffset":60168,"endOffset":60382,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":60384,"endOffset":60699,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerShouldCallPull","ranges":[{"startOffset":60701,"endOffset":61196,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCallPullIfNeeded","ranges":[{"startOffset":61198,"endOffset":61909,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":61911,"endOffset":62128,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerError","ranges":[{"startOffset":62130,"endOffset":62427,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerCancelSteps","ranges":[{"startOffset":62429,"endOffset":62702,"count":0}],"isBlockCoverage":false},{"functionName":"readableStreamDefaultControllerPullSteps","ranges":[{"startOffset":62704,"endOffset":63320,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultController","ranges":[{"startOffset":63322,"endOffset":64301,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableStreamDefaultControllerFromSource","ranges":[{"startOffset":64303,"endOffset":65041,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClose","ranges":[{"startOffset":65043,"endOffset":65757,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCommitPullIntoDescriptor","ranges":[{"startOffset":65759,"endOffset":66329,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerInvalidateBYOBRequest","ranges":[{"startOffset":66331,"endOffset":66624,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearAlgorithms","ranges":[{"startOffset":66626,"endOffset":66792,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerClearPendingPullIntos","ranges":[{"startOffset":66794,"endOffset":66977,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerGetDesiredSize","ranges":[{"startOffset":66979,"endOffset":67285,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShouldCallPull","ranges":[{"startOffset":67287,"endOffset":67935,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerHandleQueueDrain","ranges":[{"startOffset":67937,"endOffset":68354,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullInto","ranges":[{"startOffset":68356,"endOffset":70366,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInternal","ranges":[{"startOffset":70368,"endOffset":71193,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespond","ranges":[{"startOffset":71195,"endOffset":71975,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInClosedState","ranges":[{"startOffset":71977,"endOffset":72498,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillHeadPullIntoDescriptor","ranges":[{"startOffset":72500,"endOffset":72801,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueue","ranges":[{"startOffset":72803,"endOffset":75113,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueClonedChunkToQueue","ranges":[{"startOffset":75115,"endOffset":75589,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueChunkToQueue","ranges":[{"startOffset":75591,"endOffset":75871,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerEnqueueDetachedPullIntoToQueue","ranges":[{"startOffset":75873,"endOffset":76302,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillPullIntoDescriptorFromQueue","ranges":[{"startOffset":76304,"endOffset":78272,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ranges":[{"startOffset":78274,"endOffset":78869,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondInReadableState","ranges":[{"startOffset":78871,"endOffset":80281,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerRespondWithNewView","ranges":[{"startOffset":80283,"endOffset":81668,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerShiftPendingPullInto","ranges":[{"startOffset":81670,"endOffset":81861,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCallPullIfNeeded","ranges":[{"startOffset":81863,"endOffset":82562,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerError","ranges":[{"startOffset":82564,"endOffset":82920,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerCancelSteps","ranges":[{"startOffset":82922,"endOffset":83222,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerFillReadRequestFromQueue","ranges":[{"startOffset":83224,"endOffset":83703,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerProcessReadRequestsUsingQueue","ranges":[{"startOffset":83705,"endOffset":84188,"count":0}],"isBlockCoverage":false},{"functionName":"readableByteStreamControllerPullSteps","ranges":[{"startOffset":84190,"endOffset":85295,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamController","ranges":[{"startOffset":85297,"endOffset":86382,"count":0}],"isBlockCoverage":false},{"functionName":"setupReadableByteStreamControllerFromSource","ranges":[{"startOffset":86384,"endOffset":87312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"node:internal/webstreams/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5919,"count":1}],"isBlockCoverage":false},{"functionName":"extractHighWaterMark","ranges":[{"startOffset":1010,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"extractSizeAlgorithm","ranges":[{"startOffset":1305,"endOffset":1444,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":1446,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetBuffer","ranges":[{"startOffset":1862,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteLength","ranges":[{"startOffset":1972,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayBufferViewGetByteOffset","ranges":[{"startOffset":2090,"endOffset":2206,"count":0}],"isBlockCoverage":false},{"functionName":"cloneAsUint8Array","ranges":[{"startOffset":2208,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isBrandCheck","ranges":[{"startOffset":2515,"endOffset":2679,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2555,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"transferArrayBuffer","ranges":[{"startOffset":2681,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"isViewedArrayBufferDetached","ranges":[{"startOffset":2906,"endOffset":3074,"count":0}],"isBlockCoverage":false},{"functionName":"dequeueValue","ranges":[{"startOffset":3076,"endOffset":3461,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":3463,"endOffset":3681,"count":0}],"isBlockCoverage":false},{"functionName":"peekQueueValue","ranges":[{"startOffset":3683,"endOffset":3918,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueValueWithSize","ranges":[{"startOffset":3920,"endOffset":4385,"count":0}],"isBlockCoverage":false},{"functionName":"ensureIsPromise","ranges":[{"startOffset":4387,"endOffset":4626,"count":0}],"isBlockCoverage":false},{"functionName":"isPromisePending","ranges":[{"startOffset":4628,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"setPromiseHandled","ranges":[{"startOffset":4793,"endOffset":5072,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpFlush","ranges":[{"startOffset":5074,"endOffset":5104,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpStart","ranges":[{"startOffset":5106,"endOffset":5130,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpPull","ranges":[{"startOffset":5132,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpCancel","ranges":[{"startOffset":5163,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"nonOpWrite","ranges":[{"startOffset":5196,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"lazyTransfer","ranges":[{"startOffset":5242,"endOffset":5374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"895","url":"node:internal/webstreams/writablestream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37612,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWritableReleasedError","ranges":[{"startOffset":1612,"endOffset":2053,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":2096,"endOffset":2182,"count":3}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3104,"endOffset":7507,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream","ranges":[{"startOffset":7768,"endOffset":9061,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredWritableStream.<computed>","ranges":[{"startOffset":9114,"endOffset":9122,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":9125,"endOffset":12701,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13086,"endOffset":14118,"count":0}],"isBlockCoverage":false},{"functionName":"createWritableStreamDefaultController","ranges":[{"startOffset":14349,"endOffset":14549,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStreamLocked","ranges":[{"startOffset":14789,"endOffset":14878,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultWriter","ranges":[{"startOffset":14880,"endOffset":16654,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAbort","ranges":[{"startOffset":16656,"endOffset":17445,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamClose","ranges":[{"startOffset":17447,"endOffset":18121,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamUpdateBackpressure","ranges":[{"startOffset":18123,"endOffset":18602,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamStartErroring","ranges":[{"startOffset":18604,"endOffset":19181,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamRejectCloseAndClosedPromiseIfNeeded","ranges":[{"startOffset":19183,"endOffset":19938,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkFirstWriteRequestInFlight","ranges":[{"startOffset":19940,"endOffset":20248,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamMarkCloseRequestInFlight","ranges":[{"startOffset":20250,"endOffset":20618,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamHasOperationMarkedInFlight","ranges":[{"startOffset":20620,"endOffset":20906,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWriteWithError","ranges":[{"startOffset":20908,"endOffset":21365,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightWrite","ranges":[{"startOffset":21367,"endOffset":21659,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightCloseWithError","ranges":[{"startOffset":21661,"endOffset":22471,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishInFlightClose","ranges":[{"startOffset":22473,"endOffset":23528,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamFinishErroring","ranges":[{"startOffset":23530,"endOffset":24948,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDealWithRejection","ranges":[{"startOffset":24950,"endOffset":25219,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamCloseQueuedOrInFlight","ranges":[{"startOffset":25221,"endOffset":25440,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamAddWriteRequest","ranges":[{"startOffset":25442,"endOffset":25792,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterWrite","ranges":[{"startOffset":25794,"endOffset":26774,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterRelease","ranges":[{"startOffset":26776,"endOffset":27254,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterGetDesiredSize","ranges":[{"startOffset":27256,"endOffset":27605,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureReadyPromiseRejected","ranges":[{"startOffset":27607,"endOffset":27976,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterEnsureClosedPromiseRejected","ranges":[{"startOffset":27978,"endOffset":28348,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterCloseWithErrorPropagation","ranges":[{"startOffset":28350,"endOffset":28835,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterClose","ranges":[{"startOffset":28837,"endOffset":29004,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultWriterAbort","ranges":[{"startOffset":29006,"endOffset":29189,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerWrite","ranges":[{"startOffset":29191,"endOffset":29776,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessWrite","ranges":[{"startOffset":29778,"endOffset":30792,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerProcessClose","ranges":[{"startOffset":30794,"endOffset":31352,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetDesiredSize","ranges":[{"startOffset":31354,"endOffset":31540,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetChunkSize","ranges":[{"startOffset":31542,"endOffset":31837,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerErrorIfNeeded","ranges":[{"startOffset":31839,"endOffset":32067,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerError","ranges":[{"startOffset":32069,"endOffset":32340,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClose","ranges":[{"startOffset":32342,"endOffset":32525,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":32527,"endOffset":32793,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerGetBackpressure","ranges":[{"startOffset":32795,"endOffset":32939,"count":0}],"isBlockCoverage":false},{"functionName":"writableStreamDefaultControllerAdvanceQueueIfNeeded","ranges":[{"startOffset":32941,"endOffset":33529,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultControllerFromSink","ranges":[{"startOffset":33531,"endOffset":34372,"count":0}],"isBlockCoverage":false},{"functionName":"setupWritableStreamDefaultController","ranges":[{"startOffset":34374,"endOffset":35685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"896","url":"node:internal/webstreams/transformstream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15778,"count":1}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1421,"endOffset":1507,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2297,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream","ranges":[{"startOffset":5912,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"TransferredTransformStream.<computed>","ranges":[{"startOffset":6425,"endOffset":6433,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6436,"endOffset":7874,"count":0}],"isBlockCoverage":false},{"functionName":"createTransformStreamDefaultController","ranges":[{"startOffset":8178,"endOffset":8385,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransformAlgorithm","ranges":[{"startOffset":8544,"endOffset":8669,"count":0}],"isBlockCoverage":false},{"functionName":"initializeTransformStream","ranges":[{"startOffset":8671,"endOffset":9986,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamError","ranges":[{"startOffset":9988,"endOffset":10253,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamErrorWritableAndUnblockWrite","ranges":[{"startOffset":10255,"endOffset":10630,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamSetBackpressure","ranges":[{"startOffset":10632,"endOffset":10976,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultController","ranges":[{"startOffset":10978,"endOffset":11309,"count":0}],"isBlockCoverage":false},{"functionName":"setupTransformStreamDefaultControllerFromTransformer","ranges":[{"startOffset":11311,"endOffset":11855,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerClearAlgorithms","ranges":[{"startOffset":11857,"endOffset":12031,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerEnqueue","ranges":[{"startOffset":12033,"endOffset":12845,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerError","ranges":[{"startOffset":12847,"endOffset":12974,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerPerformTransform","ranges":[{"startOffset":12976,"endOffset":13300,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultControllerTerminate","ranges":[{"startOffset":13302,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkWriteAlgorithm","ranges":[{"startOffset":13764,"endOffset":14540,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkAbortAlgorithm","ranges":[{"startOffset":14542,"endOffset":14657,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSinkCloseAlgorithm","ranges":[{"startOffset":14659,"endOffset":15311,"count":0}],"isBlockCoverage":false},{"functionName":"transformStreamDefaultSourcePullAlgorithm","ranges":[{"startOffset":15313,"endOffset":15582,"count":0}],"isBlockCoverage":false}]},{"scriptId":"897","url":"node:stream/web","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1294,"count":1}],"isBlockCoverage":false}]},{"scriptId":"898","url":"node:internal/webstreams/queuingstrategies","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3857,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":931,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"getNonWritablePropertyDescriptor","ranges":[{"startOffset":1114,"endOffset":1200,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1238,"endOffset":2287,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2547,"endOffset":3567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"node:internal/webstreams/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6227,"count":1}],"isBlockCoverage":false},{"functionName":"isTextEncoderStream","ranges":[{"startOffset":859,"endOffset":996,"count":0}],"isBlockCoverage":false},{"functionName":"isTextDecoderStream","ranges":[{"startOffset":998,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoderStream","ranges":[{"startOffset":1165,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":2764,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":2969,"endOffset":3118,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3177,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3330,"endOffset":3651,"count":0}],"isBlockCoverage":false},{"functionName":"TextDecoderStream","ranges":[{"startOffset":3814,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":4424,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":4622,"endOffset":4762,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":4814,"endOffset":4962,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":5021,"endOffset":5170,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":5229,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5382,"endOffset":5779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"node:internal/webstreams/compression","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3764,"count":1}],"isBlockCoverage":false},{"functionName":"lazyZlib","ranges":[{"startOffset":443,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"isCompressionStream","ranges":[{"startOffset":770,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"isDecompressionStream","ranges":[{"startOffset":909,"endOffset":1050,"count":0}],"isBlockCoverage":false},{"functionName":"CompressionStream","ranges":[{"startOffset":1130,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":1600,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":1808,"endOffset":1957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1961,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"DecompressionStream","ranges":[{"startOffset":2319,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"get readable","ranges":[{"startOffset":2793,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"get writable","ranges":[{"startOffset":3005,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3162,"endOffset":3442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"node:internal/webstreams/adapters","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25246,"count":1}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamWritable","ranges":[{"startOffset":1904,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamWritableFromWritableStream","ranges":[{"startOffset":5203,"endOffset":9526,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamReadable","ranges":[{"startOffset":9737,"endOffset":12255,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamReadableFromReadableStream","ranges":[{"startOffset":12470,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableWritablePairFromDuplex","ranges":[{"startOffset":14565,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"newStreamDuplexFromReadableWritablePair","ranges":[{"startOffset":16018,"endOffset":21248,"count":0}],"isBlockCoverage":false},{"functionName":"newWritableStreamFromStreamBase","ranges":[{"startOffset":21462,"endOffset":23301,"count":0}],"isBlockCoverage":false},{"functionName":"newReadableStreamFromStreamBase","ranges":[{"startOffset":23411,"endOffset":24916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"904","url":"node:internal/modules/esm/handle_process_exit","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":298,"endOffset":379,"count":0}],"isBlockCoverage":false}]}],"timestamp":110623.220688,"source-map-cache":{"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/index.js":{"lineLengths":[13,62,298,41,39,49,48,61,1,40,44,57,1,32,42,59,1,28,45,55,1,49,62,1,42,45,58,1,34,65,36,69,38,46,26,3,40,27,29,3,21,39,112,116,37,106,47,119,20,37,16,13,23,15,27,19,35,16,29,20,37,25,38,31,35,3,33,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA4C;AAS5C,uCAAgC;AAChC,iDAAyC;AAuBzC,SAAgB,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AALD,wCAKC;AAsBD,SAAgB,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AALD,gCAKC;AAqBD,SAAgB,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AALD,4BAKC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,SAAgB,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AALD,0CAKC;AAqBD,SAAgB,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,cAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AALD,kCAKC;AAED,iEAAiE;AACpD,QAAA,UAAU,GAAG,cAAc,CAAA;AAC3B,QAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AAC5D,QAAA,WAAW,GAAG,eAAe,CAAA;AAC7B,QAAA,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACW,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,qBAAqB;AACrB,uCAA4C;AAAnC,mGAAA,MAAM,OAAA;AAAE,qGAAA,QAAQ,OAAA;AACzB,qCAAgC;AAAvB,+FAAA,IAAI,OAAA;AAOb,+CAAyC;AAAhC,wGAAA,QAAQ,OAAA;AAGjB,oBAAoB;AAEP,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI,EAAJ,YAAI;IACJ,UAAU;IACV,MAAM,EAAN,cAAM;IACN,cAAc;IACd,UAAU,EAAV,kBAAU;IACV,WAAW;IACX,OAAO,EAAP,eAAO;IACP,eAAe;IACf,WAAW,EAAX,mBAAW;IACX,IAAI,EAAJ,cAAI;IACJ,QAAQ,EAAR,uBAAQ;IACR,MAAM,EAAN,kBAAM;IACN,QAAQ,EAAR,oBAAQ;CACT,CAAC,CAAA;AACF,YAAI,CAAC,IAAI,GAAG,YAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,221,70,71,37,43,47,49,63,40,58,21,5,52,2,30,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,76,36,41,46,32,49,21,32,26,60,63,45,61,34,45,47,93,24,42,51,27,70,33,5,35,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,35,7,2,28,46,19,21,19,30,35,43,2,33,21,17,48,63,60,60,63,39,25,5,51,2,34,52,41,50,68,68,61,66,2,74,72,69,62,83,24,42,48,47,41,44,27,5,16,2,22,40,31,44,74,17,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,67,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,29,29,39,34,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,41,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,68,5,20,67,37,20,29,36,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,78,69,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,44,42,33,15,34,39,39,74,27,17,41,74,73,21,26,40,21,17,46,66,17,53,78,49,17,15,68,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,57,5,1,30,21,35,103,41,112,45,118,20,37,40,46,52,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/assert-valid-pattern.js":{"lineLengths":[13,62,36,37,41,38,47,5,46,51,5,2,48,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AAC7B,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA;AAVY,QAAA,kBAAkB,sBAU9B","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/ast.js":{"lineLengths":[13,30,62,21,65,47,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,11,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,49,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,83,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,46,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,106,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,74,5,1,18,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/brace-expressions.js":{"lineLengths":[13,72,40,62,28,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,40,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,32,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/unescape.js":{"lineLengths":[13,62,26,3,64,2,72,77,72,66,2,70,33,2,77,16,3,65,31,43,85,2,28,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;;;;;;GAaG;AACI,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA;AATY,QAAA,QAAQ,YASpB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/dist/cjs/escape.js":{"lineLengths":[13,62,24,3,49,2,73,75,74,75,73,3,63,60,64,58,31,41,44,2,24,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACI,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA;AAZY,QAAA,MAAM,UAYlB","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/glob.js":{"lineLengths":[13,62,22,41,45,29,45,43,44,48,54,14,40,22,14,3,54,3,12,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,58,9,34,30,50,38,34,40,38,44,42,23,73,32,34,64,74,9,42,32,9,35,42,50,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,52,47,44,52,35,55,51,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,77,62,34,40,23,21,50,81,11,5,18,74,73,79,46,16,82,29,52,61,31,40,36,23,10,5,16,16,75,29,52,61,31,40,36,26,10,5,14,75,25,48,57,27,36,32,20,5,18,75,25,48,57,27,36,32,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,20,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      return new Pattern(set, globParts[i], 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/path-scurry/dist/cjs/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,253,41,31,29,45,27,46,57,46,42,39,19,30,26,34,36,17,15,32,36,38,38,6,2,58,95,15,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,26,33,24,66,19,57,64,19,74,29,24,38,24,48,22,35,11,21,15,28,19,35,23,35,27,34,32,36,35,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,49,19,28,5,1,36,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,50,38,15,20,32,47,11,5,1,38,47,3,48,78,2,78,74,75,19,2,75,75,16,3,16,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,73,73,72,59,7,16,48,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,31,60,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,32,39,34,35,40,25,13,9,71,67,34,46,39,43,24,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,31,23,32,29,31,28,43,40,39,36,54,51,54,51,75,50,52,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,27,46,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,57,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,57,29,55,13,9,20,40,29,9,5,31,45,37,60,70,38,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,36,41,36,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,28,3,35,2,79,43,3,34,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,45,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,30,3,40,2,36,3,34,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,30,3,78,40,2,78,77,36,3,22,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,48,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,70,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,70,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,40,3,51,2,75,38,3,46,7,44,7,15,49,39,60,29,49,35,9,5,7,16,7,24,80,73,58,58,5,7,16,7,17,117,5,7,66,7,19,86,5,1,42,3,81,2,76,2,43,3,46,7,44,7,14,49,40,59,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,42,3,68,2,72,11,2,43,3,48,49,39,40,5,1,44,3,68,2,73,3,68,3,74,2,74,65,3,49,21,35,26,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'path'\n\nimport { fileURLToPath } from 'url'\n\nimport * as actualFS from 'fs'\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nimport { lstat, readdir, readlink, realpath } from 'fs/promises'\n\nimport type { Dirent, Stats } from 'fs'\nimport { Minipass } from 'minipass'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true }\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS\n    ? defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n          ...defaultFS.promises,\n          ...(fsOption.promises || {}),\n        },\n      }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile()\n    ? IFREG\n    : s.isDirectory()\n    ? IFDIR\n    : s.isSymbolicLink()\n    ? IFLNK\n    : s.isCharacterDevice()\n    ? IFCHR\n    : s.isBlockDevice()\n    ? IFBLK\n    : s.isSocket()\n    ? IFSOCK\n    : s.isFIFO()\n    ? IFIFO\n    : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['path'] refers to the path of the directory\n   * that was passed to readdir.  So, somewhat counterintuitively, this\n   * property refers to the *parent* path, not the path object itself.\n   * For root entries, it's the path to the entry itself.\n   */\n  get path(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase = rootPath\n      ? this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name = this.nocase\n      ? normalizeNocase(pathPart)\n      : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath = this.#fullpath\n      ? this.#fullpath + s + pathPart\n      : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return this.isUnknown()\n      ? 'Unknown'\n      : this.isDirectory()\n      ? 'Directory'\n      : this.isFile()\n      ? 'File'\n      : this.isSymbolicLink()\n      ? 'SymbolicLink'\n      : this.isFIFO()\n      ? 'FIFO'\n      : this.isCharacterDevice()\n      ? 'CharacterDevice'\n      : this.isBlockDevice()\n      ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket()\n      ? 'Socket'\n      : 'Unknown'\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase\n      ? this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      children[p].#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name = this.nocase\n        ? normalizeNocase(e.name)\n        : normalize(e.name)\n      if (name !== pchild.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[]\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res)\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {}\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor'\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next()\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {}\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r\n                    )\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true)\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32'\n    ? PathScurryWin32\n    : process.platform === 'darwin'\n    ? PathScurryDarwin\n    : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/lru-cache/dist/cjs/index.js":{"lineLengths":[13,3,19,3,62,26,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,64,72,70,77,25,3,16,75,76,40,9,13,13,18,17,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,7,55,7,19,29,5,7,60,7,24,34,5,26,348,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,58,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,58,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,43,32,13,56,29,10,34,40,38,71,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,76,71,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,74,66,69,42,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,46,31,13,9,23,5,7,75,29,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,73,48,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,27,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,43,80,75,9,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,39,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,35,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,39,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,60,7,15,28,31,46,38,31,39,33,17,22,48,51,53,72,21,73,47,60,25,52,67,25,21,43,53,53,47,55,21,52,55,21,26,74,74,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,67,43,45,64,13,18,47,39,52,17,44,59,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\ntype PosInt = number & { [TYPE]: 'Positive Integer' }\ntype Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\ntype UintArray = Uint8Array | Uint16Array | Uint32Array\ntype NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\n\ntype StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\ntype DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link OptionsBase.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump}\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (ttl === 0 || start === 0) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      return (\n        ttls[index] !== 0 &&\n        starts[index] !== 0 &&\n        (cachedNow || getNow()) - starts[index] > ttls[index]\n      )\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index]\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - sizes[index]\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index]\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.#starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index !== undefined &&\n      (allowStale || !this.#isStale(index))\n    ) {\n      const v = this.#valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            this.#next[this.#prev[index]] = this.#next[index]\n            this.#prev[this.#next[index]] = this.#prev[index]\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minipass/dist/cjs/index.js":{"lineLengths":[13,72,62,2,62,87,51,13,7,21,21,6,35,52,51,3,78,40,3,30,28,29,40,37,36,28,3,67,3,32,28,41,35,69,56,32,3,67,3,32,28,41,36,32,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,46,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,64,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,32,5,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'events'\nimport Stream from 'stream'\nimport { StringDecoder } from 'string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> = T extends string\n    ? EncodingOptions | ObjectModeOptions\n    : T extends Buffer\n    ? BufferOptions | ObjectModeOptions\n    : SharedOptions\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args: RType extends Buffer\n      ? [] | [Minipass.Options<RType>]\n      : [Minipass.Options<RType>]\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0])\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ) {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/pattern.js":{"lineLengths":[13,73,62,25,41,45,42,3,67,10,3,15,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,71,5,7,41,7,16,64,5,7,63,7,18,34,31,34,39,79,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,40,25,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,42,27,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,45,30,33,50,37,34,5,7,53,7,12,39,78,15,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,26,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/pattern.ts"],"names":[],"mappings":";AAAA,yEAAyE;;;AAEzE,yCAAoC;AAgBpC,MAAM,aAAa,GAAG,CAAC,EAAe,EAAqB,EAAE,CAC3D,EAAE,CAAC,MAAM,IAAI,CAAC,CAAA;AAChB,MAAM,UAAU,GAAG,CAAC,EAAY,EAAkB,EAAE,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAA;AAEnE;;;GAGG;AACH,MAAa,OAAO;IACT,YAAY,CAAa;IACzB,SAAS,CAAU;IACnB,MAAM,CAAQ;IACd,MAAM,CAAQ;IACd,SAAS,CAAiB;IACnC,KAAK,CAAiB;IACtB,WAAW,CAAS;IACpB,QAAQ,CAAU;IAClB,MAAM,CAAU;IAChB,WAAW,CAAU;IACrB,eAAe,GAAY,IAAI,CAAA;IAE/B,YACE,WAAwB,EACxB,QAAkB,EAClB,KAAa,EACb,QAAyB;QAEzB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;YAC/B,MAAM,IAAI,SAAS,CAAC,oBAAoB,CAAC,CAAA;SAC1C;QACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACzB,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;SACvC;QACD,IAAI,QAAQ,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,EAAE;YAC1C,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAA;SACrE;QACD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAA;QAChC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YACrC,MAAM,IAAI,SAAS,CAAC,oBAAoB,CAAC,CAAA;SAC1C;QACD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAA;QAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;QAEzB,mEAAmE;QACnE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,gBAAgB;YAChB,iBAAiB;YACjB,uBAAuB;YACvB,oCAAoC;YACpC,qCAAqC;YACrC,2CAA2C;YAC3C,uBAAuB;YACvB,aAAa;YACb,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;gBAChB,6BAA6B;gBAC7B,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAA;gBACpD,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;gBACjD,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;oBACnB,YAAY;oBACZ,KAAK,CAAC,KAAK,EAAE,CAAA;oBACb,KAAK,CAAC,KAAK,EAAE,CAAA;iBACd;gBACD,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACxC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACxC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAA;gBACjC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAA;gBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAA;aACvC;iBAAM,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;gBAC9C,MAAM,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAA;gBACxC,MAAM,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;gBACrC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;oBACnB,YAAY;oBACZ,KAAK,CAAC,KAAK,EAAE,CAAA;oBACb,KAAK,CAAC,KAAK,EAAE,CAAA;iBACd;gBACD,MAAM,CAAC,GAAI,EAAa,GAAG,GAAG,CAAA;gBAC9B,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAA;gBAClB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAA;gBACjC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAA;gBAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAA;aACvC;SACF;IACH,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACvC,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAA;IAC3D,CAAC;IACD;;OAEG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,oBAAQ,CAAA;IACpD,CAAC;IACD;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,MAAM,CAAA;IACzD,CAAC;IAED;;OAEG;IACH,UAAU;QACR,OAAO,CAAC,IAAI,CAAC,WAAW;YACtB,IAAI,CAAC,WAAW;gBAChB,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC;oBAChB,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;wBACjB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;wBACvD,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;oBAC5B,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IACrD,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACtC,CAAC;IAED;;OAEG;IACH,IAAI;QACF,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;YAAE,OAAO,IAAI,CAAC,KAAK,CAAA;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YAAE,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAA;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CACtB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,MAAM,GAAG,CAAC,EACf,IAAI,CAAC,SAAS,CACf,CAAA;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACzC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAC/B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QACnC,OAAO,IAAI,CAAC,KAAK,CAAA;IACnB,CAAC;IAED;;OAEG;IACH,KAAK;QACH,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAA;QAC5B,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS;YAC9B,CAAC,CAAC,IAAI,CAAC,MAAM;YACb,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;gBACV,IAAI,CAAC,SAAS,KAAK,OAAO;oBAC1B,IAAI,CAAC,MAAM,KAAK,CAAC;oBACjB,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE;oBACZ,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE;oBACZ,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ;oBACzB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACP,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ;oBACzB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;IAChB,CAAC;IAED,sBAAsB;IACtB,sBAAsB;IACtB,mEAAmE;IACnE,sEAAsE;IACtE,6CAA6C;IAC7C;;OAEG;IACH,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAA;QAC5B,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS;YAChC,CAAC,CAAC,IAAI,CAAC,QAAQ;YACf,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ;gBACZ,IAAI,CAAC,SAAS,KAAK,OAAO;oBAC1B,IAAI,CAAC,MAAM,KAAK,CAAC;oBACjB,IAAI,CAAC,MAAM,GAAG,CAAC;oBACf,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ;oBACzB,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAChC,CAAC;IAED,sCAAsC;IACtC,kDAAkD;IAClD,oDAAoD;IACpD;;OAEG;IACH,UAAU;QACR,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAA;QAC5B,OAAO,IAAI,CAAC,WAAW,KAAK,SAAS;YACnC,CAAC,CAAC,IAAI,CAAC,WAAW;YAClB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;gBACf,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;oBAC/B,IAAI,CAAC,OAAO,EAAE;oBACd,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;IACrB,CAAC;IAED;;OAEG;IACH,IAAI;QACF,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;QAC9B,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YACpE,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,EAAE,CAAA;IACR,CAAC;IAED;;;OAGG;IACH,mBAAmB;QACjB,OAAO,CAAC,CACN,IAAI,CAAC,MAAM,KAAK,CAAC;YACjB,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,CAAC,IAAI,CAAC,eAAe,CACtB,CAAA;IACH,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe;YAClE,OAAO,KAAK,CAAA;QACd,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,OAAO,IAAI,CAAA;IACb,CAAC;CACF;AAnOD,0BAmOC","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index]\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/walker.js":{"lineLengths":[13,62,68,3,74,11,2,10,3,39,43,49,63,44,27,46,17,3,61,3,16,9,13,9,21,19,20,19,12,9,11,13,39,33,25,25,74,26,57,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,74,5,30,19,73,41,53,29,15,24,5,30,37,29,16,33,57,21,33,20,9,57,72,5,30,29,19,85,25,72,36,38,30,9,23,75,39,9,14,75,82,33,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,84,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,88,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,28,35,12,39,36,33,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,32,35,12,39,36,48,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,32,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/ignore.js":{"lineLengths":[13,54,34,66,45,62,24,41,45,54,14,40,22,14,3,41,3,14,13,21,13,21,95,27,27,35,35,24,22,20,19,18,23,33,21,28,27,10,75,72,75,47,75,77,31,79,76,29,78,48,36,62,53,41,50,83,76,74,48,29,42,20,42,31,33,54,24,54,17,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,21,9,21,5,1,24,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/processor.js":{"lineLengths":[13,69,62,93,41,3,65,3,22,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,40,3,66,72,66,3,19,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,34,3,71,20,3,16,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,28,3,54,2,66,35,3,17,19,32,30,13,11,8,9,39,25,36,30,44,35,35,5,39,33,61,72,47,49,56,40,82,46,23,74,36,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,50,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,49,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,30,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/dist/cjs/src/has-magic.js":{"lineLengths":[13,62,26,41,3,74,30,2,78,77,74,78,78,77,3,45,34,28,5,30,61,24,5,17,2,28,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///Users/randy/workspace/scratch/things_nodejs_js/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":";;;AAAA,yCAAqC;AAGrC;;;;;;;;;;GAUG;AACI,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;KACpB;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;QACvB,IAAI,IAAI,qBAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;KACtD;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAXY,QAAA,QAAQ,YAWpB","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null}}}